{
    "overview/introduction": {
        "prev": {
            "link": "",
            "title": "",
            "desc": ""
        },
        "next": {
            "link": "docs/overview/first-steps",
            "title": "First steps",
            "desc": "CMMV (Contract Model Model View) is a revolution in web application development,..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/\" />\n                    <link rel=\"next\" href=\"/docs/overview/first-steps\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Introduction\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/introduction\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/first-steps\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Introduction</h1><a id=\"introduction\" title=\"Introduction\"></a>\n<p>CMMV (Contract-Model-Model-View) is a minimalistic framework designed to streamline the development of scalable and modular applications using TypeScript. By combining the power of contracts with a modular architecture, CMMV allows developers to define their entire application structure, from ORM entities to REST controllers and WebSocket endpoints, in a clear and maintainable way.</p>\n<p>The project is divided into three main components:</p>\n<ol>\n<li>\n<p><strong>Core System</strong>: The heart of CMMV, written in TypeScript and running on Node.js, is responsible for managing contracts, generating code, integrating with databases, and handling server-side operations. This component handles everything from parsing and code generation to integration with external services like cloud servers and databases.</p>\n</li>\n<li>\n<p><strong>Backend</strong>: The CMMV backend is inspired by <a href=\"https://nestjs.com/\" target=\"_blank\" rel=\"nofollow\">NestJS</a> in terms of structure and organization, using a similar format of decorators, services, controllers, and other architectural patterns. This allows for a familiar development experience for those who already use <code>NestJS</code>, making it easier to create scalable and organized applications with a modular and object-oriented approach. Some implementations are quite different, especially when it comes to context and the need for dependency injection.</p>\n</li>\n<li>\n<p><strong>Frontend</strong>: CMMV utilizes its own reactivity system, inspired by <a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"nofollow\">Vue 3</a> as the base framework. However, in the future, support for other frameworks such as React, Angular, and Vue will be available, even though their use is not recommended due to potential performance reduction and SEO issues. This approach simplifies the process of creating, managing, and deploying applications while offering optimal performance.</p>\n</li>\n</ol>\n<p>CMMV draws inspiration from a wide range of technologies and concepts, blending ideas from game development (e.g., Unreal Engine’s Blueprints), component-based architectures (e.g., Delphi), and modern web development practices. It challenges traditional paradigms of web and application development, aiming to make the creation of complex systems as intuitive as possible.</p>\n<p>This project reflects over 20 years of experience in different languages and frameworks, with influences from Delphi, Unity, Unreal, C#, C++, JavaScript, Node.js, TypeScript, VSCode.</p>\n<p>We hope you find CMMV as exciting and powerful as we do. It’s the culmination of nearly a decade of work and passion for simplifying and improving the development process.</p>\n<h2>Why CMMV?</h2><a id=\"why-cmmv\" title=\"Why CMMV?\"></a>\n<p>With over 20 years of experience in the tech industry as a programmer, I’ve developed various systems and projects used by millions of users. In 2020, I was working on my largest project to date, which was built on the following stack: backend using Node.js, TypeScript, NestJS, Nuxt.js, Redis, MongoDB, Elasticsearch, and RabbitMQ; frontend with Vue.js and Tailwind CSS; testing with Mocha, ESLint, and GitLab CI; infrastructure managed with Kubernetes and Nginx, and business intelligence powered by Grafana, Kafka, and IndexDB; along with a Flutter-based mobile app. Let’s dive into the problems we faced in this setup.</p>\n<p>First, the NestJS API, as more controllers and gateways were added, became increasingly difficult to manage and slowed down significantly, primarily due to dependency injection. Module management turned into a bureaucratic nightmare. Although the final application performed well, development became cumbersome. Furthermore, Nuxt’s SSR (server-side rendering) required integration, which often led to issues due to CORS policies. Communication between applications occurred via HTTP, and although NestJS supported RPC, Nuxt.js required custom proxies to implement WebSockets. Using Protobuf in the frontend presented additional challenges, and generating RPC controllers with Protoc resulted in a bloated codebase, making the application even heavier.</p>\n<p>Second, Nuxt.js, while capable of SSR, still relied on proxies with APIs to load data since it ran on a Vite-based implementation. Static page generation at scale, with thousands of pages, became an unattainable task. We tried, but the time required for page generation was prohibitive. Using standard SSR, with the proxy API and HTTP+JSON communication, significantly increased the TTFB (Time to First Byte), making optimization challenging. Only by delivering content directly through a CDN could we mitigate these delays, but even then, the page load was too slow for ideal SEO. Additionally, Nuxt.js generated numerous JavaScript bundles and data files to supplement frontend data binding, increasing page load and making SEO optimization a constant battle.</p>\n<p>It may seem counterintuitive to combine API and SSR into the same application due to competing processes, but consider that it’s much simpler to create a single load balancer that serves both frontend and backend. With direct integration, SSR eliminates latency when fetching data—excellent for reducing page load times and generating static pages. When well-integrated with Redis cache and efficient database queries, SSR can be nearly as fast as pre-rendered static pages. Moreover, this architecture simplifies integrations like internationalization, structured data, and sitemaps, making them much easier to manage and serve.</p>\n<p>Finally, the reduction in page onload time, which is also considered by search engines, is crucial. While Vue is an excellent tool, componentization in the frontend poses performance challenges due to potential deep coupling between components. Even with state management, critical issues related to element reactivity can lead to cascading update flows, which may either freeze the app or cause infinite loops. Avoiding such pitfalls requires a solid understanding of the underlying framework.</p>\n<p>Considering all these factors, I created CMMV (Contract-Model-Model-View). Initially, the goal was to develop a complete solution that would meet my development needs while maintaining the familiar syntax of NestJS, Vue, etc., but resolving the problems that have plagued me over the years and hampered development.</p>\n<p>After considering these factors, I created CMMV (Contract-Model-Model-View). My goal was not to compete with or replace any of the mentioned tools. All the technologies I’ve mentioned are of excellent quality and come highly recommended. They have large communities and are suitable for most projects. However, I had unique challenges in my projects, particularly around handling high volumes of traffic and the need for the best possible SEO performance. Despite my best efforts with my previous stack, the results were still not satisfactory for my specific needs. CMMV was born out of this necessity to address these exceptional requirements.</p>\n<p>André Ferreira (CEO)</p>\n<h2>Read before use</h2><a id=\"read-before-use\" title=\"Read before use\"></a>\n<p>The CMMV framework is released under the MIT license, allowing anyone to use and modify it freely. However, it’s important to note that the primary purpose of this project is to meet my personal needs for a specific project I am working on. It was not designed to be a general-purpose framework for the broader developer community or to cater to the needs of the majority of developers. As a result, some modules or features that you might require may not have native implementations or official support in CMMV.</p>\n<p>If you find the need to use services such as Memcache, Kafka, or any other service that isn’t natively supported by CMMV, you will need to create a communication interface for these services. The project is flexible enough to allow such integrations, but keep in mind that the design is tailored to my specific requirements.</p>\n<p>If you like the project and develop solutions for other services, I encourage you to release your solution on NPM, update the documentation, and submit a pull request. However, any addition of new modules to the core of the project must be discussed with the moderators to ensure that the implementation aligns with the overall goals of the project. If not, your pull request will be denied.</p>\n<p>I’m not here to engage in debates over architectural choices or personal preferences. For example, if you prefer React syntax over Vue, you are free to fork the project and modify it to fit your preferred stack or technology. However, do not expect CMMV to be changed to suit your individual needs. The project is focused on solving my specific workflow and use cases.</p>\n<p>While CMMV provides flexibility for customization, any changes that affect the core of the project will be carefully reviewed. The main guiding principle is that this project is built to meet my own needs, not yours.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "introduction",
                    "label": "Introduction"
                },
                {
                    "id": "why-cmmv",
                    "label": "Why CMMV?"
                },
                {
                    "id": "read-before-use",
                    "label": "Read before use"
                }
            ],
            "link": "docs/0-Overview/0-Introduction.html",
            "links": {}
        }
    },
    "overview/first-steps": {
        "prev": {
            "link": "docs/overview/introduction",
            "title": "Introduction",
            "desc": "CMMV (Contract-Model-Model-View) is a minimalistic framework designed to streaml..."
        },
        "next": {
            "link": "docs/overview/settings",
            "title": "Settings",
            "desc": "The system configuration for a CMMV project is managed through a .cmmv.config.js..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/introduction\" />\n                    <link rel=\"next\" href=\"/docs/overview/settings\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"First steps\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/introduction\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/first-steps\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/settings\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>First steps</h1><a id=\"first-steps\" title=\"First steps\"></a>\n<p>CMMV (Contract Model Model View) is a revolution in web application development, breaking paradigms and redefining how we create, maintain and scale digital projects. Inspired by best practices and innovative concepts, CMMV integrates the power of contracts to automatically generate robust and secure structures, eliminating the complexity of manual code and providing an unprecedented development experience.</p>\n<p>Imagine a platform where the definition of contracts in TypeScript becomes the heart of your application, automatically generating APIs, controllers, ORM entities and even communication via binary RPC, all with optimized performance and seamless integration with the most modern technologies. With CMMV, you not only accelerate development, but also ensure the quality and consistency of your code, drastically reducing errors and rework.</p>\n<p>In addition, CMMV offers a reactive and lightweight interface, based on Vue 3, but with the ability to support other frameworks such as React and Angular, always focusing on performance and SEO. With CMMV, the frontend is not just a presentation layer, but an integral and dynamic part of your application, synchronized in real time with the backend.</p>\n<p>Whether you are an experienced developer or a programming newbie, CMMV empowers everyone to build powerful, scalable, modern systems by eliminating technical barriers and allowing creativity and innovation to be at the center of your development journey. It is more than a framework; it is a new way of thinking and building the future of web applications.</p>\n<h2>Prerequisites</h2><a id=\"prerequisites\" title=\"Prerequisites\"></a>\n<p>To run CMMV it will be necessary to have <code>Node.js (version &gt;= 18.0)</code> installed in your operating system.</p>\n<h2>Setup</h2><a id=\"setup\" title=\"Setup\"></a>\n<p>Currently CMMV does not have any CI system, so to install it in your project you just need to install the modules.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install @cmmv/core @cmmv/http @cmmv/view rxjs reflect-metadata\n</code></pre>\n             </div>\n<p>or</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ yarn add @cmmv/core @cmmv/http @cmmv/view rxjs reflect-metadata\n</code></pre>\n             </div>\n<h2>Structure</h2><a id=\"structure\" title=\"Structure\"></a>\n<p>CMMV is a project that draws inspiration from some of the best practices and technologies in modern development, bringing solid references to create a powerful and flexible framework. At the heart of CMMV are contracts, which follow a model similar to TypeORM and Protobuf, but go further, offering a full range of configurations that allow the automatic generation of the entire base structure of the application. These contracts are the fundamental piece of the project, as from them it is possible to create everything from database entities to APIs and controllers.</p>\n<p>Written in TypeScript, CMMV adopts a backend structure that resembles NestJS, but with adjustments that make dependency injection and module control more intuitive and adapted to modern development needs. The idea is to offer a modular system, where developers have full control over the application layers, allowing the architecture to adapt to the specific demands of each project.</p>\n<p>On the frontend, CMMV incorporates a basic data binding controller inspired by Vue 3, but simplified and extremely lightweight. This reactive layer can be easily replaced by any other framework, such as React, Angular or even Vue itself, ensuring that the application maintains flexibility and performance, without sacrificing simplicity.</p>\n<p>The project is strongly influenced by SOLID principles, applying well-defined concepts of responsibility, but without rigidly following all the rules. The goal is to keep the architecture clean and organized, but with the flexibility necessary to meet the practical realities of development. In addition, TDD (Test-Driven Development) concepts are applied to facilitate maintenance and ensure code quality, but the system is completely modular and optional, allowing each developer to choose what best suits their workflow.</p>\n<p>In short, CMMV is more than a collection of tools and frameworks; it is an integrated approach to development, where contracts are at the core of everything. With a solid foundation, CMMV gives developers the freedom to build modern and scalable applications, without compromising the simplicity and flexibility that are essential for continuous innovation.</p>\n<p>Every application flow starts in the <code>src/index.ts</code> file which is responsible for starting the HTTP server and its adapters.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DefaultAdapter</span>, <span class=\"hljs-title class_\">DefaultHTTPModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/http&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ProtobufModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/protobuf&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">WSModule</span>, <span class=\"hljs-title class_\">WSAdapter</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/ws&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ViewModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/view&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">RepositoryModule</span>, <span class=\"hljs-title class_\">Repository</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/repository&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ApplicationModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./app.module&quot;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">DefaultAdapter</span>,    \n    <span class=\"hljs-attr\">wsAdapter</span>: <span class=\"hljs-title class_\">WSAdapter</span>,\n    <span class=\"hljs-attr\">modules</span>: [\n        <span class=\"hljs-title class_\">DefaultHTTPModule</span>,\n        <span class=\"hljs-title class_\">ProtobufModule</span>,\n        <span class=\"hljs-title class_\">WSModule</span>,\n        <span class=\"hljs-title class_\">ViewModule</span>,\n        <span class=\"hljs-title class_\">RepositoryModule</span>\n    ],\n    <span class=\"hljs-attr\">services</span>: [<span class=\"hljs-title class_\">Repository</span>],\n    <span class=\"hljs-attr\">contracts</span>: [...]\n});\n</code></pre>\n             </div>\n<p>It is possible to perform configurations through the <code>.cmmv.config.js</code> file without having to change the application source code, even in the future we will provide other HTTP server modules.</p>\n<p>The default directories that come with the project are the following:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs\"\">.\n└── public/\n    ├── assets/\n    ├── templates/\n    └── views/\n└── src/\n    ├── contracts/\n    ├── controllers/\n    ├── entities/\n    ├── models/\n    ├── services/\n    ├── app.module.ts\n    └── index.ts\n</code></pre>\n             </div>\n<h2>Structure Explanation</h2><a id=\"structure-explanation\" title=\"Structure Explanation\"></a>\n<ul>\n<li>\n<p><strong>public/</strong>: This directory contains all the static resources of the application, such as CSS, JavaScript and images. Within <code>public</code>, we have:</p>\n</li>\n<li>\n<p><strong>assets/</strong>: Stores static files such as styles, scripts, images and other resources needed for the user interface.</p>\n</li>\n<li>\n<p><strong>templates/</strong>: Contains HTML template files that can be used as base layouts for views.</p>\n</li>\n<li>\n<p><strong>views/</strong>: Contains the pages or UI components that will be rendered on the frontend.</p>\n</li>\n<li>\n<p><strong>src/</strong>: The <code>src</code> directory is the core of the application, where the source code is organized in a modular way to facilitate development and maintenance. In it, we find:</p>\n</li>\n<li>\n<p><strong>contracts/</strong>: This is the most important directory, as it is where the application contracts are defined. When starting the application, the system checks the contracts present in this directory and, from them, automatically generates the controllers, entities, models and services. These contracts serve as the basis of the entire application structure.</p>\n</li>\n<li>\n<p><strong>controllers/</strong>: After verifying the contracts, controllers are automatically generated in this directory. They are responsible for handling HTTP requests, processing data, and returning appropriate responses.</p>\n</li>\n<li>\n<p><strong>entities/</strong>: If the <code>repository</code> module is present, this directory will house the entities generated in TypeORM format, which represent the database tables and serve as object-relational mapping (ORM).</p>\n</li>\n<li>\n<p><strong>models/</strong>: Also generated from contracts, models are used to define the structure of the data that will be manipulated by the application, including data validation and transformation.</p>\n</li>\n<li>\n<p><strong>services/</strong>: Services encapsulate the business logic and are responsible for manipulating entities and interacting with other application modules. They are automatically generated based on the contracts and installed modules.</p>\n</li>\n<li>\n<p><strong>app.module.ts</strong>: This file is the root module of the application, configuring the main services and modules necessary for the application to function.</p>\n</li>\n<li>\n<p><strong>index.ts</strong>: The application entry point, where the server is initialized and configured to start receiving requests.</p>\n</li>\n</ul>\n<h2>Automatic Generate</h2><a id=\"automatic-generate\" title=\"Automatic Generate\"></a>\n<p>CMMV’s greatest strength lies in its ability to <strong>automatically generate</strong> code based on contracts. When starting the application, the system checks the <code>contracts</code> directory and, depending on the installed modules, automatically generates the following parts:</p>\n<ul>\n<li>\n<p><strong>Controllers, Entities, Models and Services</strong>: Based on the defined contracts, the controllers, entities, models and services required for the application are created. If the <code>repository</code> module is present, the entities and models will be generated in TypeORM format and the connection to the database will be configured according to the information in the <code>.cmmv.config.js</code> file.</p>\n</li>\n<li>\n<p><strong>RPC support with Protobuf</strong>: If the <code>protobuf</code> module is present, <code>.proto</code> contracts will be automatically generated for RPC (Remote Procedure Call) communication. This communication is done through a WebSocket adapter, integrating the HTTP and WebSocket server on the same port, facilitating real-time communication.</p>\n</li>\n<li>\n<p><strong>HTTP Server Modularity</strong>: Currently, the HTTP module supports Express and Fastify, allowing developers to choose the framework that best suits their needs. In the future, new modules may be added to provide additional support for other frameworks.</p>\n</li>\n</ul>\n<p>This modular approach ensures that CMMV easily adapts to the needs of the project, maintaining flexibility and scalability without compromising simplicity. The <strong>core</strong> of the application resides in the contracts, allowing the entire system to be configured and expanded in an efficient and automated way.</p>\n<h2>Static files</h2><a id=\"static-files\" title=\"Static files\"></a>\n<p>The recommendation regarding static files is to always use the CDN integration features available in the editor, as whenever the application is built all static files will be automatically uploaded and updated on the CDN, however if you want to maintain the availability of the files being served by the application, the system is configured to map a directory /public, if this directory exists in the export and deployment of the application, its files will be copied automatically, becoming available for public access without access control.</p>\n<h2>Dev mode</h2><a id=\"dev-mode\" title=\"Dev mode\"></a>\n<p>To start the application in development mode you can use the following command.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ yarn dev || npm run dev\n</code></pre>\n             </div>\n<p>In this way, the initial application watches in parallel with the nodemon that checks for changes in the files and automatically reloads in case of changes, the server that provides the API will be loaded following the pure Typescript settings, the editor will be compiled for Javascript.</p>\n<h2>Linting and formatting</h2><a id=\"linting-and-formatting\" title=\"Linting and formatting\"></a>\n<p>Like most public web applications that use Typescript, I use eslint and prettier to format and organize the code, making it possible to perform checks and corrections using the commands below</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\"><span class=\"hljs-comment\"># Lint with eslint</span>\n$ yarn lint || npm run lint\n\n<span class=\"hljs-comment\"># Format with prettier</span>\n$ yarn format || npm run format\n</code></pre>\n             </div>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "first-steps",
                    "label": "First steps"
                },
                {
                    "id": "prerequisites",
                    "label": "Prerequisites"
                },
                {
                    "id": "setup",
                    "label": "Setup"
                },
                {
                    "id": "structure",
                    "label": "Structure"
                },
                {
                    "id": "structure-explanation",
                    "label": "Structure Explanation"
                },
                {
                    "id": "automatic-generate",
                    "label": "Automatic Generate"
                },
                {
                    "id": "static-files",
                    "label": "Static files"
                },
                {
                    "id": "dev-mode",
                    "label": "Dev mode"
                },
                {
                    "id": "linting-and-formatting",
                    "label": "Linting and formatting"
                }
            ],
            "link": "docs/0-Overview/1-First Steps.html",
            "links": {}
        }
    },
    "overview/settings": {
        "prev": {
            "link": "docs/overview/first-steps",
            "title": "First steps",
            "desc": "CMMV (Contract Model Model View) is a revolution in web application development,..."
        },
        "next": {
            "link": "docs/overview/modules",
            "title": "Modules",
            "desc": "The CMMV module system shares similarities with NestJS, providing a modular appr..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/first-steps\" />\n                    <link rel=\"next\" href=\"/docs/overview/modules\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Settings\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/first-steps\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/settings\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/modules\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Settings</h1><a id=\"settings\" title=\"Settings\"></a>\n<p>The system configuration for a CMMV project is managed through a <code>.cmmv.config.js</code> file in the root directory. This file defines various settings, such as:</p>\n<ul>\n<li><strong>Server Settings:</strong> Configures the host and port for the application.</li>\n<li><strong>I18n:</strong> Manages internationalization with locale files and default languages.</li>\n<li><strong>Repository:</strong> Defines the database type (e.g., SQLite) and connection details.</li>\n<li><strong>Head Configuration:</strong> Sets HTML attributes, meta tags, and links for the application’s frontend.</li>\n<li><strong>Headers:</strong> Security policies like Content-Security-Policy.</li>\n<li><strong>Scripts:</strong> Specifies JavaScript files to load.</li>\n</ul>\n<p>Modules can extend this configuration based on the application’s requirements.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">server</span>: {\n        <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">&quot;0.0.0.0&quot;</span>,\n        <span class=\"hljs-attr\">port</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PORT</span> || <span class=\"hljs-number\">3000</span>\n    },\n\n    <span class=\"hljs-attr\">i18n</span>: {\n        <span class=\"hljs-attr\">localeFiles</span>: <span class=\"hljs-string\">&quot;./src/locale&quot;</span>,\n        <span class=\"hljs-attr\">default</span>: <span class=\"hljs-string\">&quot;en&quot;</span>\n    },\n\n    <span class=\"hljs-attr\">head</span>: {\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Documentation | CMMV - A minimalistic Node.js framework&quot;</span>,\n        <span class=\"hljs-attr\">htmlAttrs</span>: {\n            <span class=\"hljs-attr\">lang</span>: <span class=\"hljs-string\">&quot;pt-br&quot;</span>\n        },\n        <span class=\"hljs-attr\">meta</span>: [\n            { <span class=\"hljs-attr\">charset</span>: <span class=\"hljs-string\">&#x27;utf-8&#x27;</span> },\n            { <span class=\"hljs-string\">&quot;http-equiv&quot;</span>: <span class=\"hljs-string\">&quot;content-type&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;text/html; charset=UTF-8&quot;</span> },\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;viewport&#x27;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;width=device-width, initial-scale=1&#x27;</span> },\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;robots&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;noodp&quot;</span> }\n        ],\n        <span class=\"hljs-attr\">link</span>: [\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&#x27;/assets/favicon/favicon.ico&#x27;</span> },\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;dns-prefetch&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;https://docs.cmmv.io&quot;</span> },\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;preconnect&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;https://docs.cmmv.io&quot;</span> },    \n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;stylesheet&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;/assets/docs.css&quot;</span> }            \n        ]\n    },\n\n    <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">&quot;Content-Security-Policy&quot;</span>: [\n            <span class=\"hljs-string\">&quot;default-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;font-src &#x27;self&#x27;&quot;</span>\n        ]\n    },\n\n    <span class=\"hljs-attr\">scripts</span>: [\n        { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text/javascript&quot;</span>, <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&#x27;/assets/bundle.min.js&#x27;</span>},\n    ]\n};\n</code></pre>\n             </div>\n<p>The default HTTP renderer in CMMV natively supports internationalization, SEO configuration, and security-focused custom headers. These features allow developers to manage localized content, improve search engine optimization, and apply security policies like Content-Security-Policy directly in the configuration. Additional settings for templates and views can also be added later, providing flexibility for customizing pages. More detailed instructions can be found in the “View” documentation, which explains how to implement these configurations within the template system.</p>\n<h2>Assign</h2><a id=\"assign\" title=\"Assign\"></a>\n<p>The <code>Config.assign()</code> method allows you to dynamically modify or override the system configuration at runtime. This method takes an object that merges or updates the existing configuration. Below is an example of how the configuration can be applied using <code>Config.assign()</code>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Config</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-title function_\">assign</span>({\n    <span class=\"hljs-attr\">server</span>: {\n        <span class=\"hljs-attr\">host</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">HOST</span> || <span class=\"hljs-string\">&#x27;127.0.0.1&#x27;</span>,\n        <span class=\"hljs-attr\">port</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PORT</span> || <span class=\"hljs-number\">4000</span>,\n    },\n    <span class=\"hljs-attr\">i18n</span>: {\n        <span class=\"hljs-attr\">localeFiles</span>: <span class=\"hljs-string\">&#x27;./locales&#x27;</span>,\n        <span class=\"hljs-attr\">default</span>: <span class=\"hljs-string\">&#x27;en&#x27;</span>,\n    },\n    <span class=\"hljs-comment\">// Additional settings...</span>\n});\n</code></pre>\n             </div>\n<p>With <code>Config.assign()</code>, you can flexibly modify settings such as server configuration, internationalization, and more, without hardcoding them directly in <code>.cmmv.config.js</code>.</p>\n<h2>API</h2><a id=\"api\" title=\"API\"></a>\n<p>The system configurations in a CMMV-based application can be accessed programmatically through the Config class from the <code>@cmmv/core</code> module. This allows developers to dynamically retrieve, modify, or delete configuration values throughout the application. For example, the server’s host and port settings, database configurations, or internationalization options can be accessed and altered by calling methods like Config.get(), Config.set(), and Config.has(). These features enable a flexible and centralized approach to managing system settings.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Config</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n\n<span class=\"hljs-comment\">//Get</span>\n<span class=\"hljs-keyword\">const</span> serverPort = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-property\">get</span>&lt;<span class=\"hljs-built_in\">number</span>&gt;(<span class=\"hljs-string\">&#x27;server.port&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Server running on port: <span class=\"hljs-subst\">${serverPort}</span>`</span>);\n\n<span class=\"hljs-comment\">//Set</span>\n<span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;server.host&#x27;</span>, <span class=\"hljs-string\">&#x27;127.0.0.1&#x27;</span>);\n\n<span class=\"hljs-comment\">//Delete</span>\n<span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">&#x27;repository.logging&#x27;</span>);\n\n<span class=\"hljs-comment\">//Get All</span>\n<span class=\"hljs-keyword\">const</span> allConfig = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-title function_\">getAll</span>();\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(allConfig);\n\n<span class=\"hljs-comment\">//Assign</span>\n<span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-title function_\">assign</span>({\n    <span class=\"hljs-attr\">server</span>: { <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">4000</span> },\n    <span class=\"hljs-attr\">repository</span>: { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;sqlite&#x27;</span> }\n});\n</code></pre>\n             </div>\n<p>Each module in the CMMV system has its own set of configurations that can be added to the central configuration file (.cmmv.config.js). This allows developers to customize the behavior and features of the modules they are using. Because different modules may require specific settings, it’s essential to review each module’s documentation carefully to understand the available configuration options and how they integrate with the core system. This ensures optimal setup and use of advanced functionalities such as RPC, authentication, caching, and more.</p>\n<h2>Environment</h2><a id=\"environment\" title=\"Environment\"></a>\n<p>The <code>env</code> setting allows you to control the environment of the application (e.g., <code>development</code>, <code>production</code>). This setting typically comes from environment variables using <code>dotenv</code> <a href=\"https://www.npmjs.com/package/dotenv\" target=\"_blank\" rel=\"nofollow\">NPM</a> to manage sensitive values securely.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">env</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">NODE_ENV</span>, <span class=\"hljs-comment\">// Example: &#x27;development&#x27; or &#x27;production&#x27;</span>\n</code></pre>\n             </div>\n<h2>Server Configuration</h2><a id=\"server-configuration\" title=\"Server Configuration\"></a>\n<p>The server settings control various aspects of how the application is hosted and its behavior in terms of security, performance, and session management. The configuration supports environment variables for flexibility in different deployment environments.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">server</span>: {\n    <span class=\"hljs-attr\">host</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">HOST</span> || <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>,  <span class=\"hljs-comment\">// Default host</span>\n    <span class=\"hljs-attr\">port</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PORT</span> || <span class=\"hljs-number\">3000</span>,       <span class=\"hljs-comment\">// Default port</span>\n    <span class=\"hljs-attr\">poweredBy</span>: <span class=\"hljs-literal\">false</span>,                     <span class=\"hljs-comment\">// Remove &#x27;X-Powered-By&#x27; header</span>\n    <span class=\"hljs-attr\">removePolicyHeaders</span>: <span class=\"hljs-literal\">false</span>,           <span class=\"hljs-comment\">// Option to remove headers added by Helmet</span>\n    <span class=\"hljs-attr\">cors</span>: <span class=\"hljs-literal\">true</span>,                           <span class=\"hljs-comment\">// Enable Cross-Origin Resource Sharing (CORS)</span>\n    \n    <span class=\"hljs-comment\">// Compression settings</span>\n    <span class=\"hljs-attr\">compress</span>: {\n        <span class=\"hljs-attr\">enabled</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">options</span>: {\n            <span class=\"hljs-attr\">level</span>: <span class=\"hljs-number\">6</span>,  <span class=\"hljs-comment\">// Compression level (0-9)</span>\n        },\n    },\n    \n    <span class=\"hljs-comment\">// Security headers with Helmet.js</span>\n    <span class=\"hljs-attr\">helmet</span>: {\n        <span class=\"hljs-attr\">enabled</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">options</span>: {\n            <span class=\"hljs-attr\">contentSecurityPolicy</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">// CSP can be customized</span>\n        },\n    },\n\n    <span class=\"hljs-comment\">// Session management</span>\n    <span class=\"hljs-attr\">session</span>: {\n        <span class=\"hljs-attr\">enabled</span>: <span class=\"hljs-literal\">true</span>,  <span class=\"hljs-comment\">// Enable sessions</span>\n        <span class=\"hljs-attr\">options</span>: {\n            <span class=\"hljs-attr\">sessionCookieName</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SESSION_COOKIENAME</span> || <span class=\"hljs-string\">&#x27;cmmv-session&#x27;</span>,\n            <span class=\"hljs-attr\">secret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SESSION_SECRET</span> || <span class=\"hljs-string\">&#x27;secret&#x27;</span>,  <span class=\"hljs-comment\">// Session secret</span>\n            <span class=\"hljs-attr\">resave</span>: <span class=\"hljs-literal\">false</span>,    <span class=\"hljs-comment\">// Prevent resaving session data</span>\n            <span class=\"hljs-attr\">saveUninitialized</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">// Do not save uninitialized sessions</span>\n            <span class=\"hljs-attr\">cookie</span>: {\n                <span class=\"hljs-attr\">secure</span>: <span class=\"hljs-literal\">true</span>,  <span class=\"hljs-comment\">// Ensure secure cookie (only over HTTPS)</span>\n                <span class=\"hljs-attr\">maxAge</span>: <span class=\"hljs-number\">60000</span>, <span class=\"hljs-comment\">// Cookie expiration time in ms</span>\n            },\n        },\n    },\n},\n</code></pre>\n             </div>\n<p>This section includes detailed control over CORS, session management, compression, and security features such as Helmet. You can also set up different environments using <code>dotenv</code>.</p>\n<h2>Internationalization</h2><a id=\"internationalization\" title=\"Internationalization\"></a>\n<p>The i18n (Internationalization) system provides a way to manage locale files and define the default language for the application. This helps with the translation and localization of content.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">i18n</span>: {\n    <span class=\"hljs-attr\">localeFiles</span>: <span class=\"hljs-string\">&#x27;./src/locale&#x27;</span>,  <span class=\"hljs-comment\">// Path to locale files</span>\n    <span class=\"hljs-attr\">default</span>: <span class=\"hljs-string\">&#x27;en&#x27;</span>,                <span class=\"hljs-comment\">// Default language (English)</span>\n},\n</code></pre>\n             </div>\n<h2>RPC</h2><a id=\"rpc\" title=\"RPC\"></a>\n<p>The <code>rpc</code> configuration allows Remote Procedure Calls (RPC) to be used in the application. RPC improves the performance and modularity of the system by enabling communication via predefined contracts.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">rpc</span>: {\n    <span class=\"hljs-attr\">enabled</span>: <span class=\"hljs-literal\">true</span>,           <span class=\"hljs-comment\">// Enable RPC system</span>\n    <span class=\"hljs-attr\">preLoadContracts</span>: <span class=\"hljs-literal\">true</span>,  <span class=\"hljs-comment\">// Pre-load RPC contracts for efficiency</span>\n},\n</code></pre>\n             </div>\n<h2>View</h2><a id=\"view\" title=\"View\"></a>\n<p>View settings control how HTML is rendered, including options for minifying HTML and handling inline scripts. These settings can be adjusted to optimize the delivery of frontend content.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">view</span>: {\n    <span class=\"hljs-attr\">extractInlineScript</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-comment\">// Disable extraction of inline scripts for better control</span>\n    <span class=\"hljs-attr\">minifyHTML</span>: <span class=\"hljs-literal\">true</span>,           <span class=\"hljs-comment\">// Enable HTML minification for performance</span>\n},\n</code></pre>\n             </div>\n<h2>Repository</h2><a id=\"repository\" title=\"Repository\"></a>\n<p>The <code>repository</code> settings define the database type, path, and options for synchronization and logging. By default, SQLite is used, but other databases can be configured as needed.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">repository</span>: {\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;sqlite&#x27;</span>,                <span class=\"hljs-comment\">// Default database type</span>\n    <span class=\"hljs-attr\">database</span>: <span class=\"hljs-string\">&#x27;./database.sqlite&#x27;</span>,  <span class=\"hljs-comment\">// Path to the SQLite database file</span>\n    <span class=\"hljs-attr\">synchronize</span>: <span class=\"hljs-literal\">true</span>,              <span class=\"hljs-comment\">// Synchronize database schema</span>\n    <span class=\"hljs-attr\">logging</span>: <span class=\"hljs-literal\">false</span>,                 <span class=\"hljs-comment\">// Disable logging for performance</span>\n},\n</code></pre>\n             </div>\n<h2>Cache</h2><a id=\"cache\" title=\"Cache\"></a>\n<p>The cache configuration uses Redis by default for caching data, improving the speed and performance of the application.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">cache</span>: {\n    <span class=\"hljs-attr\">store</span>: <span class=\"hljs-string\">&#x27;@tirke/node-cache-manager-ioredis&#x27;</span>,  <span class=\"hljs-comment\">// Redis cache store</span>\n    <span class=\"hljs-attr\">getter</span>: <span class=\"hljs-string\">&#x27;ioRedisStore&#x27;</span>,                      <span class=\"hljs-comment\">// Cache store getter</span>\n    <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">&#x27;localhost&#x27;</span>,                           <span class=\"hljs-comment\">// Redis host</span>\n    <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">6379</span>,                                  <span class=\"hljs-comment\">// Redis port</span>\n    <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">600</span>,                                    <span class=\"hljs-comment\">// Time to live for cache (in seconds)</span>\n},\n</code></pre>\n             </div>\n<h2>Authentication</h2><a id=\"authentication\" title=\"Authentication\"></a>\n<p>This section handles user authentication, including local login/registration and third-party OAuth integration (e.g., Google). The configuration allows for flexible setup of authentication mechanisms.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">auth</span>: {\n    <span class=\"hljs-attr\">localRegister</span>: <span class=\"hljs-literal\">true</span>,  <span class=\"hljs-comment\">// Enable local user registration</span>\n    <span class=\"hljs-attr\">localLogin</span>: <span class=\"hljs-literal\">true</span>,     <span class=\"hljs-comment\">// Enable local user login</span>\n    <span class=\"hljs-attr\">jwtSecret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">JWT_SECRET</span> || <span class=\"hljs-string\">&#x27;secret&#x27;</span>,  <span class=\"hljs-comment\">// JWT secret for token signing</span>\n    <span class=\"hljs-attr\">expiresIn</span>: <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span>,   <span class=\"hljs-comment\">// JWT token expiration time (in seconds)</span>\n    \n    <span class=\"hljs-comment\">// Google OAuth configuration</span>\n    <span class=\"hljs-attr\">google</span>: {\n        <span class=\"hljs-attr\">clientID</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_ID</span>,               <span class=\"hljs-comment\">// Google client ID</span>\n        <span class=\"hljs-attr\">clientSecret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_SECRET</span>,       <span class=\"hljs-comment\">// Google client secret</span>\n        <span class=\"hljs-attr\">callbackURL</span>: <span class=\"hljs-string\">&#x27;http://localhost:3000/auth/google/callback&#x27;</span>,  <span class=\"hljs-comment\">// OAuth callback URL</span>\n    },\n},\n</code></pre>\n             </div>\n<h2>Head</h2><a id=\"head\" title=\"Head\"></a>\n<p>The <code>head</code> configuration manages HTML attributes, meta tags, and link elements, which are essential for SEO and proper rendering of the application.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">head</span>: {\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;CMMV&#x27;</span>,  <span class=\"hljs-comment\">// Default title</span>\n    <span class=\"hljs-attr\">htmlAttrs</span>: {\n        <span class=\"hljs-attr\">lang</span>: <span class=\"hljs-string\">&#x27;pt-br&#x27;</span>,  <span class=\"hljs-comment\">// Default language</span>\n    },\n    <span class=\"hljs-attr\">meta</span>: [\n        { <span class=\"hljs-attr\">charset</span>: <span class=\"hljs-string\">&#x27;utf-8&#x27;</span> },\n        {\n            <span class=\"hljs-string\">&#x27;http-equiv&#x27;</span>: <span class=\"hljs-string\">&#x27;content-type&#x27;</span>,\n            <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;text/html; charset=UTF-8&#x27;</span>,\n        },\n        {\n            <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;viewport&#x27;</span>,\n            <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;width=device-width, initial-scale=1&#x27;</span>,\n        },\n    ],\n    <span class=\"hljs-attr\">link</span>: [{ <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&#x27;assets/favicon/favicon.ico&#x27;</span> }],\n},\n</code></pre>\n             </div>\n<h2>Headers</h2><a id=\"headers\" title=\"Headers\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">headers</span>: {\n    <span class=\"hljs-string\">&#x27;Content-Security-Policy&#x27;</span>: [\n        <span class=\"hljs-string\">&quot;default-src &#x27;self&#x27;&quot;</span>,\n        <span class=\"hljs-string\">&quot;script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27; &#x27;unsafe-hashes&#x27;&quot;</span>,\n        <span class=\"hljs-string\">&quot;style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,\n        <span class=\"hljs-string\">&quot;font-src &#x27;self&#x27;&quot;</span>,\n        <span class=\"hljs-string\">&quot;connect-src &#x27;self&#x27;&quot;</span>,\n    ],\n},\n</code></pre>\n             </div>\n<h2>Scripts</h2><a id=\"scripts\" title=\"Scripts\"></a>\n<p>The <code>scripts</code> configuration defines JavaScript files to load in the application, which can be customized based on the project’s needs.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">scripts</span>: [\n    {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;text/javascript&#x27;</span>,\n        <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&#x27;/assets/bundle.min.js&#x27;</span>,  <span class=\"hljs-comment\">// Main JavaScript bundle</span>\n        <span class=\"hljs-attr\">defer</span>: <span class=\"hljs-string\">&#x27;defer&#x27;</span>,  <span class=\"hljs-comment\">// Load script after HTML is parsed</span>\n    },\n],\n</code></pre>\n             </div>\n<p>This completes the detailed documentation of the settings. The assign method in Config allows you to dynamically update or override these settings, providing flexibility across different environments and modules.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "settings",
                    "label": "Settings"
                },
                {
                    "id": "assign",
                    "label": "Assign"
                },
                {
                    "id": "api",
                    "label": "API"
                },
                {
                    "id": "environment",
                    "label": "Environment"
                },
                {
                    "id": "server-configuration",
                    "label": "Server Configuration"
                },
                {
                    "id": "internationalization",
                    "label": "Internationalization"
                },
                {
                    "id": "rpc",
                    "label": "RPC"
                },
                {
                    "id": "view",
                    "label": "View"
                },
                {
                    "id": "repository",
                    "label": "Repository"
                },
                {
                    "id": "cache",
                    "label": "Cache"
                },
                {
                    "id": "authentication",
                    "label": "Authentication"
                },
                {
                    "id": "head",
                    "label": "Head"
                },
                {
                    "id": "headers",
                    "label": "Headers"
                },
                {
                    "id": "scripts",
                    "label": "Scripts"
                }
            ],
            "link": "docs/0-Overview/3-Settings.html",
            "links": {}
        }
    },
    "overview/modules": {
        "prev": {
            "link": "docs/overview/settings",
            "title": "Settings",
            "desc": "The system configuration for a CMMV project is managed through a .cmmv.config.js..."
        },
        "next": {
            "link": "docs/overview/singleton",
            "title": "Singleton",
            "desc": "In CMMV, the traditional dependency injection pattern is replaced by singleton r..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/settings\" />\n                    <link rel=\"next\" href=\"/docs/overview/singleton\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Modules\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/settings\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/modules\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/singleton\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Modules</h1><a id=\"modules\" title=\"Modules\"></a>\n<p>The CMMV module system shares similarities with NestJS, providing a modular approach to application development. However, it differs in one key aspect: no dependency context control. This means that services are not injected or managed by a centralized dependency injection container. Instead, any provider (service, utility, etc.) can be created independently and added to modules where needed. For shared services across the system, such as the Repository or Config classes, it’s recommended to use singleton registries, making these services globally accessible without the need for repeated instantiation.</p>\n<h2>Key Features</h2><a id=\"key-features\" title=\"Key Features\"></a>\n<ul>\n<li><strong>No Dependency Context Control:</strong> Services are not automatically injected. Instead, they can be created and indexed within the module system.</li>\n<li><strong>Singleton Registries:</strong> Shared services can be registered as singletons to avoid duplication and make them accessible across the entire system.</li>\n<li><strong>Module Composition:</strong> Modules in CMMV are flexible, allowing you to define controllers, services (providers), transpilers, contracts, and submodules within a single module.</li>\n<li><strong>Automatic Module Generation:</strong> The system generates the main module (e.g., <code>app.module.ts</code>) based on contracts, controllers, and gateways defined within the application.</li>\n</ul>\n<h2>Example</h2><a id=\"example\" title=\"Example\"></a>\n<p>Here’s an example of a full-featured module with all possible properties in CMMV:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Module</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DocsController</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./docs.controller&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DocsService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./docs.service&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DocsTranspile</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./docs.transpile&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DocsContract</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./docs.contract&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">SubModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./submodule&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">let</span> <span class=\"hljs-title class_\">DocsModule</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Module</span>({\n    <span class=\"hljs-attr\">controllers</span>: [<span class=\"hljs-title class_\">DocsController</span>],\n    <span class=\"hljs-attr\">providers</span>: [<span class=\"hljs-title class_\">DocsService</span>],\n    <span class=\"hljs-attr\">transpilers</span>: [<span class=\"hljs-title class_\">DocsTranspile</span>],\n    <span class=\"hljs-attr\">submodules</span>: [<span class=\"hljs-title class_\">SubModule</span>],\n    <span class=\"hljs-attr\">contracts</span>: [<span class=\"hljs-title class_\">DocsContract</span>]\n});\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>controllers:</strong> An array of controllers that handle HTTP requests and return responses. They manage the application’s routes and are responsible for interacting with services.</li>\n<li><strong>providers:</strong> A list of services or classes that contain the business logic for your module. These providers are manually instantiated and indexed when needed.</li>\n<li><strong>transpilers:</strong> These are responsible for generating necessary files, such as database entities, Protobuf definitions, or other code artifacts based on contracts.</li>\n<li><strong>submodules:</strong> Allows you to break your application into smaller, self-contained modules that can be nested within other modules.</li>\n<li><strong>contracts:</strong> Defines the contracts associated with this module. Contracts define the data structure and behavior of entities, and transpilers generate the appropriate files (e.g., database models, API endpoints).</li>\n</ul>\n<h1>Singleton Registries</h1><a id=\"singleton-registries\" title=\"Singleton Registries\"></a>\n<p>Instead of injecting shared services across multiple modules, singleton registries can be used for services like <code>Repository</code> or <code>Config</code>, which are intended to be accessible globally. This reduces the need for dependency injection and ensures that these services are instantiated only once and shared throughout the system.</p>\n<h1>Application</h1><a id=\"application\" title=\"Application\"></a>\n<p>Whenever contracts are defined, the system will automatically create a module at <code>/src/app.module.ts</code>. This module will include all contracts, controllers, and gateways automatically generated by the application. Here is an example of how the file might be generated:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n    \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Module</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskController</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./controllers/task.controller&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./services/task.service&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskGateway</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./gateways/task.gateway&#x27;</span>;\n    \n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">let</span> <span class=\"hljs-title class_\">ApplicationModule</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Module</span>({\n    <span class=\"hljs-attr\">controllers</span>: [<span class=\"hljs-title class_\">TaskController</span>], \n    <span class=\"hljs-attr\">providers</span>: [<span class=\"hljs-title class_\">TaskService</span>, <span class=\"hljs-title class_\">TaskGateway</span>] \n});\n</code></pre>\n             </div>\n<p>It is important to note that the file <code>/src/app.module.ts</code> is automatically generated by the system and should not be manually modified, as it will be recreated every time the application is started. Any changes made directly to this file will be overwritten. If you need to add or modify modules, services, or controllers, it is recommended to do so in separate files and register them properly within the application to ensure your modifications are preserved.</p>\n<h2>Modular Design</h2><a id=\"modular-design\" title=\"Modular Design\"></a>\n<p>CMMV follows a modular design, allowing you to break down your application into reusable and maintainable parts. Each module can focus on a specific domain or feature, which improves separation of concerns, maintainability, and scalability.</p>\n<ul>\n<li><strong>Feature-Oriented Structure:</strong> Group controllers, services, and other components related to the same feature together in a module.</li>\n<li><strong>Reusability:</strong> Modules can be reused across different parts of the application, and submodules can help break down complex functionality into simpler units.</li>\n<li><strong>Transpilers for Automation:</strong> Transpilers automate repetitive tasks, like generating files based on contracts, minimizing manual coding and ensuring consistency.</li>\n</ul>\n<h2>Best Practices</h2><a id=\"best-practices\" title=\"Best Practices\"></a>\n<ul>\n<li><strong>Use Singleton Registries:</strong> For shared services (e.g., configuration, repository), use singleton registries to avoid repeated instantiation and simplify access.</li>\n<li><strong>Define Modules for Each Feature:</strong> Organize your application by defining a separate module for each feature or domain, making it easier to manage and scale.</li>\n<li><strong>Automatic Contracts and Services:</strong> Let the CMMV framework handle the generation of services, controllers, and gateways based on contracts to reduce manual boilerplate code.</li>\n<li><strong>Avoid Modifying Auto-Generated Files:</strong> Files like <code>app.module.ts</code> are auto-generated and should not be manually edited. Always make your modifications in separate modules or services.</li>\n</ul>\n<p>The CMMV module system provides a flexible and powerful way to structure your application, allowing for efficient handling of controllers, services, and transpilers. By leveraging features like singleton registries and automatic file generation through contracts, CMMV helps streamline the development process, reduce manual configuration, and ensure that the application remains scalable and maintainable.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "modules",
                    "label": "Modules"
                },
                {
                    "id": "key-features",
                    "label": "Key Features"
                },
                {
                    "id": "example",
                    "label": "Example"
                },
                {
                    "id": "singleton-registries",
                    "label": "Singleton Registries"
                },
                {
                    "id": "application",
                    "label": "Application"
                },
                {
                    "id": "modular-design",
                    "label": "Modular Design"
                },
                {
                    "id": "best-practices",
                    "label": "Best Practices"
                }
            ],
            "link": "docs/0-Overview/4-Modules.html",
            "links": {}
        }
    },
    "overview/singleton": {
        "prev": {
            "link": "docs/overview/modules",
            "title": "Modules",
            "desc": "The CMMV module system shares similarities with NestJS, providing a modular appr..."
        },
        "next": {
            "link": "docs/overview/transpiles",
            "title": "Transpiles",
            "desc": "In the CMMV framework, transpilers are essential tools used to generate necessar..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/modules\" />\n                    <link rel=\"next\" href=\"/docs/overview/transpiles\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Singleton\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/modules\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/singleton\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/transpiles\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Singleton</h1><a id=\"singleton\" title=\"Singleton\"></a>\n<p>In CMMV, the traditional dependency injection pattern is replaced by singleton registries, which streamline the management of global services. In many applications, modules often share services such as cache, queues, or database connections. Instead of declaring and injecting these services across multiple modules, a singleton ensures that only one instance of a service is created and shared across the entire application.</p>\n<p>This approach offers several advantages:</p>\n<ul>\n<li>Simplifies service management by eliminating the need for explicit injection across modules.</li>\n<li>Reduces complexity by avoiding circular dependencies.</li>\n<li>Optimizes performance by ensuring only one instance of each service exists, minimizing overhead.</li>\n</ul>\n<h2>Example</h2><a id=\"example\" title=\"Example\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Singleton</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Scope</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">Singleton</span> {\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">Map</span>&lt;<span class=\"hljs-built_in\">string</span>, <span class=\"hljs-built_in\">any</span>&gt; = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Map</span>();\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">set</span>(<span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">data</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">boolean</span> {\n        <span class=\"hljs-keyword\">const</span> scope = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-title function_\">getInstance</span>();\n\n        <span class=\"hljs-keyword\">if</span> (!scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">has</span>(name)) {\n            scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">set</span>(name, data);\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        }\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">has</span>(<span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">boolean</span> {\n        <span class=\"hljs-keyword\">const</span> scope = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">return</span> scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">has</span>(name);\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> get&lt;T = <span class=\"hljs-built_in\">any</span>&gt;(<span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>): T | <span class=\"hljs-literal\">null</span> {\n        <span class=\"hljs-keyword\">const</span> scope = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">return</span> scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">has</span>(name) ? (scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">get</span>(name) <span class=\"hljs-keyword\">as</span> T) : <span class=\"hljs-literal\">null</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">clear</span>(<span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">void</span> {\n        <span class=\"hljs-keyword\">const</span> scope = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">delete</span>(name);\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> addToArray&lt;T = <span class=\"hljs-built_in\">any</span>&gt;(<span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">value</span>: T): <span class=\"hljs-built_in\">boolean</span> {\n        <span class=\"hljs-keyword\">const</span> scope = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> array = scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">get</span>(name) || [];\n        \n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">isArray</span>(array)) {\n            array.<span class=\"hljs-title function_\">push</span>(value);\n            scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">set</span>(name, array);\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        }\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> removeFromArray&lt;T = <span class=\"hljs-built_in\">any</span>&gt;(<span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">value</span>: T): <span class=\"hljs-built_in\">boolean</span> {\n        <span class=\"hljs-keyword\">const</span> scope = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> array = scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">get</span>(name);\n        \n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">isArray</span>(array)) {\n            <span class=\"hljs-keyword\">const</span> index = array.<span class=\"hljs-title function_\">indexOf</span>(value);\n\n            <span class=\"hljs-keyword\">if</span> (index &gt; -<span class=\"hljs-number\">1</span>) {\n                array.<span class=\"hljs-title function_\">splice</span>(index, <span class=\"hljs-number\">1</span>);\n                scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">set</span>(name, array);\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n            }\n        }\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> getArray&lt;T = <span class=\"hljs-built_in\">any</span>&gt;(<span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>): T[] | <span class=\"hljs-literal\">null</span> {\n        <span class=\"hljs-keyword\">const</span> scope = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> array = scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">get</span>(name);\n\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">isArray</span>(array)) \n            <span class=\"hljs-keyword\">return</span> array <span class=\"hljs-keyword\">as</span> T[];\n        \n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> getArrayFromIndex&lt;T = <span class=\"hljs-built_in\">any</span>&gt;(<span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">index</span>: <span class=\"hljs-built_in\">number</span>): T | <span class=\"hljs-literal\">null</span> {\n        <span class=\"hljs-keyword\">const</span> scope = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> array = scope.<span class=\"hljs-property\">data</span>.<span class=\"hljs-title function_\">get</span>(name);\n\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">isArray</span>(array) &amp;&amp; array.<span class=\"hljs-property\">length</span> &gt;= index) \n            <span class=\"hljs-keyword\">return</span> array[index] <span class=\"hljs-keyword\">as</span> T;\n        \n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n    }\n}\n</code></pre>\n             </div>\n<h2>Advantages</h2><a id=\"advantages\" title=\"Advantages\"></a>\n<p>Using singletons provides several advantages over traditional dependency injection systems, especially for larger applications with complex services and multiple modules:</p>\n<ul>\n<li>\n<p><strong>Performance Optimization:</strong> Since singletons are instantiated only once, they reduce the overhead associated with creating multiple instances of services. This is particularly beneficial when dealing with high-frequency services like database connections or cache managers.</p>\n</li>\n<li>\n<p><strong>Simplified Architecture:</strong> Instead of managing complex dependency trees and imports in each module, singleton registries allow direct access to services, simplifying module design and reducing the need for boilerplate code.</p>\n</li>\n<li>\n<p><strong>Avoid Circular Dependencies:</strong> Circular dependencies occur when two services depend on each other, causing dependency injection systems to fail or become overly complex. Singletons avoid this issue by being self-contained and globally accessible.</p>\n</li>\n<li>\n<p><strong>Ease of Access:</strong> Services like configuration, caching, and logging can be made globally accessible without requiring them to be explicitly injected into every module or service that needs them.</p>\n</li>\n<li>\n<p><strong>Scalability:</strong> As the application grows, using singletons simplifies service management. Unlike traditional dependency injection systems that require the careful management of imports and global providers, singletons offer a straightforward solution to sharing services across different modules.</p>\n</li>\n</ul>\n<h2>Best Practices</h2><a id=\"best-practices\" title=\"Best Practices\"></a>\n<ul>\n<li><strong>Use Singletons for Global Services:</strong> Use singleton registries for services that need to be shared across multiple modules, such as configuration, logging, caching, and database connections.</li>\n<li><strong>Minimize Overuse:</strong> While singletons simplify service management, overusing them can make testing and debugging more difficult. Use them judiciously for truly global services.</li>\n<li><strong>Avoid State Mutability:</strong> If possible, keep singleton services stateless or ensure their state is managed carefully to avoid unintended side effects.</li>\n<li><strong>Testing:</strong> When testing singleton services, remember that they maintain their state throughout the application lifecycle. Reset or mock singleton instances as needed during tests.</li>\n</ul>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "singleton",
                    "label": "Singleton"
                },
                {
                    "id": "example",
                    "label": "Example"
                },
                {
                    "id": "advantages",
                    "label": "Advantages"
                },
                {
                    "id": "best-practices",
                    "label": "Best Practices"
                }
            ],
            "link": "docs/0-Overview/5-Singleton.html",
            "links": {}
        }
    },
    "overview/transpiles": {
        "prev": {
            "link": "docs/overview/singleton",
            "title": "Singleton",
            "desc": "In CMMV, the traditional dependency injection pattern is replaced by singleton r..."
        },
        "next": {
            "link": "docs/overview/logging",
            "title": "Logger",
            "desc": "The Logger class in the @cmmv/core module is designed to provide standardized lo..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/singleton\" />\n                    <link rel=\"next\" href=\"/docs/overview/logging\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Transpiles\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/singleton\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/transpiles\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/logging\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Transpiles</h1><a id=\"transpiles\" title=\"Transpiles\"></a>\n<p>In the CMMV framework, transpilers are essential tools used to generate necessary files based on contracts and module requirements. These classes automatically create code or configuration files that are vital for the proper functioning of modules such as HTTP, Protobuf, and Repository.</p>\n<p>Whenever a module requires specific artifacts, like controllers, entities, or Protobuf definitions, a transpiler processes the contracts and generates the required files. This approach ensures modularity and adaptability, as each module can define its own set of transpilers to handle file generation as needed.</p>\n<h2>Key Features of Transpilers</h2><a id=\"key-features-of-transpilers\" title=\"Key Features of Transpilers\"></a>\n<ul>\n<li><strong>Automatic Code Generation:</strong> Transpilers generate files automatically based on contracts, reducing manual work and ensuring consistency between your application and the database, API interfaces, or other modules.</li>\n<li><strong>Modular:</strong> Each module (e.g., HTTP, Protobuf, Repository) has its own transpiler, ensuring a clean separation of concerns.</li>\n<li><strong>Customizable:</strong> New transpilers can be added for other custom modules, making the system extensible.</li>\n<li><strong>Contract-Based:</strong> Transpilers rely on contracts to define what code needs to be generated. Contracts are the central mechanism for defining the structure, behavior, and data types for entities and services.</li>\n</ul>\n<h2>Native Transpilers</h2><a id=\"native-transpilers\" title=\"Native Transpilers\"></a>\n<ul>\n<li><strong>Protobuf Transpiler:</strong> Generates .proto files based on contracts to enable RPC communication.</li>\n<li><strong>Repository Transpiler:</strong> Creates database entities based on TypeORM, implementing CRUD functionality based on contracts.</li>\n<li><strong>HTTP Transpiler:</strong> Generates controllers and routes for RESTful APIs based on the contract definitions.</li>\n<li><strong>Websocket Transpiler:</strong> Generates Websocket communication gateways for RPC based on contract definitions.</li>\n</ul>\n<h2>Example</h2><a id=\"example\" title=\"Example\"></a>\n<p>Below is an implementation of the ProtobufTranspile class, which generates <code>.proto</code> files from contracts to facilitate communication using Protobuf.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> fs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;fs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;path&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> protobufjs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;protobufjs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">UglifyJS</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;uglify-js&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ProtoRegistry</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./protobuf-registry.utils&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ITranspile</span>, <span class=\"hljs-title class_\">Logger</span>, <span class=\"hljs-title class_\">Scope</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ProtobufTranspile</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">ITranspile</span> {\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">logger</span>: <span class=\"hljs-title class_\">Logger</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Logger</span>(<span class=\"hljs-string\">&#x27;ProtobufTranspile&#x27;</span>);\n\n    <span class=\"hljs-title function_\">run</span>(): <span class=\"hljs-built_in\">void</span> {\n        <span class=\"hljs-keyword\">const</span> contracts = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-property\">getArray</span>&lt;<span class=\"hljs-built_in\">any</span>&gt;(<span class=\"hljs-string\">&quot;__contracts&quot;</span>);\n\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">contractsJson</span>: { [<span class=\"hljs-attr\">key</span>: <span class=\"hljs-built_in\">string</span>]: <span class=\"hljs-built_in\">any</span> } = {};\n\n        contracts?.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">contract</span>: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> outputPath = path.<span class=\"hljs-title function_\">resolve</span>(contract.<span class=\"hljs-property\">protoPath</span>);\n            <span class=\"hljs-keyword\">const</span> outputPathJson = outputPath.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;.proto&#x27;</span>, <span class=\"hljs-string\">&#x27;.json&#x27;</span>);\n            <span class=\"hljs-keyword\">const</span> outputPathTs = outputPath.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;.proto&#x27;</span>, <span class=\"hljs-string\">&#x27;.d.ts&#x27;</span>);\n            <span class=\"hljs-keyword\">const</span> outputDir = path.<span class=\"hljs-title function_\">dirname</span>(outputPath);    \n                               \n            <span class=\"hljs-keyword\">if</span> (!fs.<span class=\"hljs-title function_\">existsSync</span>(outputDir)) {\n                fs.<span class=\"hljs-title function_\">mkdirSync</span>(outputDir, { <span class=\"hljs-attr\">recursive</span>: <span class=\"hljs-literal\">true</span> });\n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Created directory <span class=\"hljs-subst\">${outputDir}</span>`</span>);\n            }\n\n            <span class=\"hljs-keyword\">const</span> root = <span class=\"hljs-keyword\">new</span> protobufjs.<span class=\"hljs-title class_\">Root</span>();\n            <span class=\"hljs-keyword\">const</span> protoNamespace = root.<span class=\"hljs-title function_\">define</span>(contract.<span class=\"hljs-property\">controllerName</span>);\n\n            <span class=\"hljs-keyword\">const</span> itemMessage = <span class=\"hljs-keyword\">new</span> protobufjs.<span class=\"hljs-title class_\">Type</span>(contract.<span class=\"hljs-property\">controllerName</span>)\n                .<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-keyword\">new</span> protobufjs.<span class=\"hljs-title class_\">Field</span>(<span class=\"hljs-string\">&quot;id&quot;</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">&quot;int32&quot;</span>));\n\n            contract.<span class=\"hljs-property\">fields</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">field</span>: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-attr\">index</span>: <span class=\"hljs-built_in\">number</span></span>) =&gt;</span> {\n                <span class=\"hljs-keyword\">const</span> protoType = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">mapToProtoType</span>(field.<span class=\"hljs-property\">protoType</span>);\n                itemMessage.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-keyword\">new</span> protobufjs.<span class=\"hljs-title class_\">Field</span>(field.<span class=\"hljs-property\">propertyKey</span>, index + <span class=\"hljs-number\">2</span>, protoType));\n            });\n\n            protoNamespace.<span class=\"hljs-title function_\">add</span>(itemMessage);\n\n            <span class=\"hljs-keyword\">if</span> (!contract.<span class=\"hljs-property\">directMessage</span>) {\n                <span class=\"hljs-keyword\">const</span> listMessage = <span class=\"hljs-keyword\">new</span> protobufjs.<span class=\"hljs-title class_\">Type</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${contract.controllerName}</span>List`</span>)\n                    .<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-keyword\">new</span> protobufjs.<span class=\"hljs-title class_\">Field</span>(<span class=\"hljs-string\">&quot;items&quot;</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${contract.controllerName}</span>`</span>, <span class=\"hljs-string\">&quot;repeated&quot;</span>));\n\n                protoNamespace.<span class=\"hljs-title function_\">add</span>(listMessage);\n            }\n\n            <span class=\"hljs-keyword\">const</span> protoContent = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">generateProtoContent</span>(contract);\n            fs.<span class=\"hljs-title function_\">writeFileSync</span>(outputPath, protoContent, <span class=\"hljs-string\">&#x27;utf8&#x27;</span>);\n\n            <span class=\"hljs-keyword\">const</span> tsContent = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">generateTypes</span>(contract);\n            fs.<span class=\"hljs-title function_\">writeFileSync</span>(outputPathTs, tsContent, <span class=\"hljs-string\">&#x27;utf8&#x27;</span>);\n\n            <span class=\"hljs-keyword\">const</span> contractJSON = root.<span class=\"hljs-title function_\">toJSON</span>();\n            contractsJson[contract.<span class=\"hljs-property\">controllerName</span>] = contractJSON;\n            fs.<span class=\"hljs-title function_\">writeFileSync</span>(outputPathJson, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(contractJSON), <span class=\"hljs-string\">&#x27;utf8&#x27;</span>);\n        });\n\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">generateContractsJs</span>(contractsJson);\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">generateProtoContent</span>(<span class=\"hljs-attr\">contract</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">string</span> {\n        <span class=\"hljs-keyword\">const</span> packageName = contract.<span class=\"hljs-property\">protoPackage</span> || <span class=\"hljs-literal\">null</span>;\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">lines</span>: <span class=\"hljs-built_in\">string</span>[] = [];\n        <span class=\"hljs-keyword\">let</span> includesGoogleAny = <span class=\"hljs-literal\">false</span>;\n    \n        contract.<span class=\"hljs-property\">fields</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">field</span>: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">if</span> (field.<span class=\"hljs-property\">protoType</span> === <span class=\"hljs-string\">&#x27;any&#x27;</span>) \n                includesGoogleAny = <span class=\"hljs-literal\">true</span>;        \n        });\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;// Generated automatically by CMMV&#x27;</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`syntax = &quot;proto3&quot;;`</span>);\n    \n        <span class=\"hljs-keyword\">if</span> (packageName)\n            lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`package <span class=\"hljs-subst\">${packageName}</span>;`</span>);\n    \n        <span class=\"hljs-keyword\">if</span> (includesGoogleAny) \n            lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;import &quot;google/protobuf/any.proto&quot;;&#x27;</span>);\n            \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message <span class=\"hljs-subst\">${contract.controllerName}</span> {`</span>);\n    \n        contract.<span class=\"hljs-property\">fields</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">field</span>: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-attr\">index</span>: <span class=\"hljs-built_in\">number</span></span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> protoType = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">mapToProtoType</span>(field.<span class=\"hljs-property\">protoType</span>);\n            <span class=\"hljs-keyword\">const</span> repeatedPrefix = field.<span class=\"hljs-property\">protoRepeated</span> ? <span class=\"hljs-string\">&#x27;repeated &#x27;</span> : <span class=\"hljs-string\">&#x27;&#x27;</span>;\n            lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  <span class=\"hljs-subst\">${repeatedPrefix}</span><span class=\"hljs-subst\">${protoType}</span> <span class=\"hljs-subst\">${field.propertyKey}</span> = <span class=\"hljs-subst\">${index + <span class=\"hljs-number\">1</span>}</span>;`</span>);\n        });\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n    \n        <span class=\"hljs-keyword\">if</span> (!contract.<span class=\"hljs-property\">directMessage</span>) {\n            lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n            lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message <span class=\"hljs-subst\">${contract.controllerName}</span>List {`</span>);\n            lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  repeated <span class=\"hljs-subst\">${contract.controllerName}</span> items = 1;`</span>);\n            lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        }\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message Add<span class=\"hljs-subst\">${contract.controllerName}</span>Request {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  <span class=\"hljs-subst\">${contract.controllerName}</span> item = 1;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message Add<span class=\"hljs-subst\">${contract.controllerName}</span>Response {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  string id = 1;`</span>); \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  <span class=\"hljs-subst\">${contract.controllerName}</span> item = 2;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message Update<span class=\"hljs-subst\">${contract.controllerName}</span>Request {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  string id = 1;`</span>); \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  <span class=\"hljs-subst\">${contract.controllerName}</span> item = 2;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message Update<span class=\"hljs-subst\">${contract.controllerName}</span>Response {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  string id = 1;`</span>); \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  <span class=\"hljs-subst\">${contract.controllerName}</span> item = 2;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message Delete<span class=\"hljs-subst\">${contract.controllerName}</span>Request {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  string id = 1;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message Delete<span class=\"hljs-subst\">${contract.controllerName}</span>Response {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  bool success = 1;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  string id = 2;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message GetAll<span class=\"hljs-subst\">${contract.controllerName}</span>Request {}`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`message GetAll<span class=\"hljs-subst\">${contract.controllerName}</span>Response {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  <span class=\"hljs-subst\">${contract.controllerName}</span>List items = 1;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`service <span class=\"hljs-subst\">${contract.controllerName}</span>Service {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  rpc Add<span class=\"hljs-subst\">${contract.controllerName}</span> (Add<span class=\"hljs-subst\">${contract.controllerName}</span>Request) returns (Add<span class=\"hljs-subst\">${contract.controllerName}</span>Response);`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  rpc Update<span class=\"hljs-subst\">${contract.controllerName}</span> (Update<span class=\"hljs-subst\">${contract.controllerName}</span>Request) returns (Update<span class=\"hljs-subst\">${contract.controllerName}</span>Response);`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  rpc Delete<span class=\"hljs-subst\">${contract.controllerName}</span> (Delete<span class=\"hljs-subst\">${contract.controllerName}</span>Request) returns (Delete<span class=\"hljs-subst\">${contract.controllerName}</span>Response);`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  rpc GetAll<span class=\"hljs-subst\">${contract.controllerName}</span> (GetAll<span class=\"hljs-subst\">${contract.controllerName}</span>Request) returns (GetAll<span class=\"hljs-subst\">${contract.controllerName}</span>Response);`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n    \n        <span class=\"hljs-keyword\">return</span> lines.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>);\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">generateTypes</span>(<span class=\"hljs-attr\">contract</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">string</span> {\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">lines</span>: <span class=\"hljs-built_in\">string</span>[] = [];\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`// Types generated automatically by CMMV`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export namespace <span class=\"hljs-subst\">${contract.controllerName}</span> {`</span>);\n    \n        contract.<span class=\"hljs-property\">fields</span>.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">field</span>: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> tsType = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">mapToTsType</span>(field.<span class=\"hljs-property\">protoType</span>);\n            lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  export type <span class=\"hljs-subst\">${field.propertyKey}</span> = <span class=\"hljs-subst\">${tsType}</span>;`</span>);\n        });\n    \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export interface Add<span class=\"hljs-subst\">${contract.controllerName}</span>Request {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  item: <span class=\"hljs-subst\">${contract.controllerName}</span>;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export interface Add<span class=\"hljs-subst\">${contract.controllerName}</span>Response {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  item: <span class=\"hljs-subst\">${contract.controllerName}</span>;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export interface Update<span class=\"hljs-subst\">${contract.controllerName}</span>Request {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  id: string;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  item: <span class=\"hljs-subst\">${contract.controllerName}</span>;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export interface Update<span class=\"hljs-subst\">${contract.controllerName}</span>Response {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  item: <span class=\"hljs-subst\">${contract.controllerName}</span>;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export interface Delete<span class=\"hljs-subst\">${contract.controllerName}</span>Request {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  id: string;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export interface Delete<span class=\"hljs-subst\">${contract.controllerName}</span>Response {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  success: boolean;`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n        \n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export interface GetAll<span class=\"hljs-subst\">${contract.controllerName}</span>Request {}`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`export interface GetAll<span class=\"hljs-subst\">${contract.controllerName}</span>Response {`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`  items: <span class=\"hljs-subst\">${contract.controllerName}</span>[];`</span>);\n        lines.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-string\">`}`</span>);\n    \n        <span class=\"hljs-keyword\">return</span> lines.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>);\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">generateContractsJs</span>(<span class=\"hljs-attr\">contractsJson</span>: { [<span class=\"hljs-attr\">key</span>: <span class=\"hljs-built_in\">string</span>]: <span class=\"hljs-built_in\">any</span> }): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">void</span>&gt; {\n        <span class=\"hljs-keyword\">const</span> outputFile = path.<span class=\"hljs-title function_\">resolve</span>(<span class=\"hljs-string\">&#x27;public/core/contracts.min.js&#x27;</span>);\n    \n        <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">ProtoRegistry</span>.<span class=\"hljs-title function_\">load</span>();\n        <span class=\"hljs-keyword\">const</span> contracts = <span class=\"hljs-title class_\">ProtoRegistry</span>.<span class=\"hljs-title function_\">retrieveAll</span>();\n        <span class=\"hljs-keyword\">let</span> contractsJSON = {};\n        <span class=\"hljs-keyword\">let</span> index = {};\n        <span class=\"hljs-keyword\">let</span> pointer = <span class=\"hljs-number\">0</span>;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> contracts){\n            <span class=\"hljs-keyword\">const</span> contract = <span class=\"hljs-title class_\">ProtoRegistry</span>.<span class=\"hljs-title function_\">retrieve</span>(key);\n            contractsJSON[key] = contract.<span class=\"hljs-title function_\">toJSON</span>();\n            <span class=\"hljs-keyword\">let</span> types = {};\n            <span class=\"hljs-keyword\">let</span> pointerTypes = <span class=\"hljs-number\">0</span>;\n\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title class_\">of</span> contract.<span class=\"hljs-property\">nestedArray</span>){\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">type</span> <span class=\"hljs-keyword\">in</span> namespace.<span class=\"hljs-title function_\">toJSON</span>().<span class=\"hljs-property\">nested</span>){\n                    types[<span class=\"hljs-keyword\">type</span>] = pointerTypes;   \n                    pointerTypes++;\n                }                                 \n            }\n            \n            index[key] = { <span class=\"hljs-attr\">index</span>: pointer, types };\n            pointer++;\n        }\n\n        <span class=\"hljs-keyword\">const</span> data = {\n            index,\n            <span class=\"hljs-attr\">contracts</span>: contractsJSON\n        };\n    \n        <span class=\"hljs-keyword\">let</span> jsContent = <span class=\"hljs-string\">&#x27;// Generated automatically by CMMV\\n&#x27;</span>;\n        jsContent += <span class=\"hljs-string\">&#x27;(function(global) {\\n&#x27;</span>;\n        jsContent += <span class=\"hljs-string\">&#x27;  try {\\n&#x27;</span>;\n        jsContent += <span class=\"hljs-string\">&#x27;    global.cmmv.addContracts(&#x27;</span> + <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(data) + <span class=\"hljs-string\">&#x27;);\\n&#x27;</span>;\n        jsContent += <span class=\"hljs-string\">&#x27;  } catch (e) {\\n&#x27;</span>;\n        jsContent += <span class=\"hljs-string\">&#x27;    console.error(&quot;Error loading contracts:&quot;, e);\\n&#x27;</span>;\n        jsContent += <span class=\"hljs-string\">&#x27;  }\\n&#x27;</span>;\n        jsContent += <span class=\"hljs-string\">&#x27;})(typeof window !== &quot;undefined&quot; ? window : global);\\n&#x27;</span>;\n    \n        <span class=\"hljs-keyword\">const</span> minifiedJsContent = <span class=\"hljs-title class_\">UglifyJS</span>.<span class=\"hljs-title function_\">minify</span>(jsContent).<span class=\"hljs-property\">code</span>;\n    \n        fs.<span class=\"hljs-title function_\">writeFileSync</span>(outputFile, minifiedJsContent, <span class=\"hljs-string\">&#x27;utf8&#x27;</span>);\n    }  \n    \n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">mapToProtoType</span>(<span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">string</span> {\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">typeMapping</span>: { [<span class=\"hljs-attr\">key</span>: <span class=\"hljs-built_in\">string</span>]: <span class=\"hljs-built_in\">string</span> } = {\n            <span class=\"hljs-attr\">string</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n            <span class=\"hljs-attr\">boolean</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n            <span class=\"hljs-attr\">bool</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n            <span class=\"hljs-attr\">int</span>: <span class=\"hljs-string\">&#x27;int32&#x27;</span>,\n            <span class=\"hljs-attr\">int32</span>: <span class=\"hljs-string\">&#x27;int32&#x27;</span>,\n            <span class=\"hljs-attr\">int64</span>: <span class=\"hljs-string\">&#x27;int64&#x27;</span>,\n            <span class=\"hljs-attr\">float</span>: <span class=\"hljs-string\">&#x27;float&#x27;</span>,\n            <span class=\"hljs-attr\">double</span>: <span class=\"hljs-string\">&#x27;double&#x27;</span>,\n            <span class=\"hljs-attr\">bytes</span>: <span class=\"hljs-string\">&#x27;bytes&#x27;</span>,\n            <span class=\"hljs-attr\">date</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,          \n            <span class=\"hljs-attr\">timestamp</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,     \n            <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,          \n            <span class=\"hljs-attr\">json</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,          \n            <span class=\"hljs-attr\">jsonb</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,         \n            <span class=\"hljs-attr\">uuid</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,          \n            <span class=\"hljs-attr\">time</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,          \n            <span class=\"hljs-attr\">simpleArray</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,   \n            <span class=\"hljs-attr\">simpleJson</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,    \n            <span class=\"hljs-attr\">bigint</span>: <span class=\"hljs-string\">&#x27;int64&#x27;</span>,\n            <span class=\"hljs-attr\">uint32</span>: <span class=\"hljs-string\">&#x27;uint32&#x27;</span>,\n            <span class=\"hljs-attr\">uint64</span>: <span class=\"hljs-string\">&#x27;uint64&#x27;</span>,\n            <span class=\"hljs-attr\">sint32</span>: <span class=\"hljs-string\">&#x27;sint32&#x27;</span>,\n            <span class=\"hljs-attr\">sint64</span>: <span class=\"hljs-string\">&#x27;sint64&#x27;</span>,\n            <span class=\"hljs-attr\">fixed32</span>: <span class=\"hljs-string\">&#x27;fixed32&#x27;</span>,\n            <span class=\"hljs-attr\">fixed64</span>: <span class=\"hljs-string\">&#x27;fixed64&#x27;</span>,\n            <span class=\"hljs-attr\">sfixed32</span>: <span class=\"hljs-string\">&#x27;sfixed32&#x27;</span>,\n            <span class=\"hljs-attr\">sfixed64</span>: <span class=\"hljs-string\">&#x27;sfixed64&#x27;</span>,\n            <span class=\"hljs-attr\">any</span>: <span class=\"hljs-string\">&#x27;google.protobuf.Any&#x27;</span>\n        };\n    \n        <span class=\"hljs-keyword\">return</span> typeMapping[<span class=\"hljs-keyword\">type</span>] || <span class=\"hljs-string\">&#x27;string&#x27;</span>;\n    }  \n    \n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">mapToTsType</span>(<span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-built_in\">string</span> {\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">typeMapping</span>: { [<span class=\"hljs-attr\">key</span>: <span class=\"hljs-built_in\">string</span>]: <span class=\"hljs-built_in\">string</span> } = {\n            <span class=\"hljs-attr\">string</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n            <span class=\"hljs-attr\">boolean</span>: <span class=\"hljs-string\">&#x27;boolean&#x27;</span>,\n            <span class=\"hljs-attr\">bool</span>: <span class=\"hljs-string\">&#x27;boolean&#x27;</span>,\n            <span class=\"hljs-attr\">int</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">int32</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">int64</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">float</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">double</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">bytes</span>: <span class=\"hljs-string\">&#x27;Uint8Array&#x27;</span>,\n            <span class=\"hljs-attr\">date</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n            <span class=\"hljs-attr\">timestamp</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n            <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n            <span class=\"hljs-attr\">json</span>: <span class=\"hljs-string\">&#x27;any&#x27;</span>,\n            <span class=\"hljs-attr\">jsonb</span>: <span class=\"hljs-string\">&#x27;any&#x27;</span>,\n            <span class=\"hljs-attr\">uuid</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n            <span class=\"hljs-attr\">time</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n            <span class=\"hljs-attr\">simpleArray</span>: <span class=\"hljs-string\">&#x27;string[]&#x27;</span>,\n            <span class=\"hljs-attr\">simpleJson</span>: <span class=\"hljs-string\">&#x27;any&#x27;</span>,\n            <span class=\"hljs-attr\">bigint</span>: <span class=\"hljs-string\">&#x27;bigint&#x27;</span>,\n            <span class=\"hljs-attr\">uint32</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">uint64</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">sint32</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">sint64</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">fixed32</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">fixed64</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">sfixed32</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">sfixed64</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,\n            <span class=\"hljs-attr\">any</span>: <span class=\"hljs-string\">&#x27;any&#x27;</span>\n        };\n    \n        <span class=\"hljs-keyword\">return</span> typeMapping[protoType] || <span class=\"hljs-string\">&#x27;any&#x27;</span>;\n    }\n}\n</code></pre>\n             </div>\n<p>In the example above, the Protobuf transpiler takes contract definitions and generates .proto files to be used for RPC communication with the protobufjs library. These .proto files define message structures for binary data exchanges. Additionally, TypeScript types are generated based on these contracts to ensure type safety. Finally, the contracts are converted into JSON format and attached to the frontend framework, which will handle the sending and receiving of binary data in the Protobuf format, enabling efficient data communication between frontend and backend.</p>\n<h2>Call a Transpiler</h2><a id=\"call-a-transpiler\" title=\"Call a Transpiler\"></a>\n<p>In CMMV, transpilers are modular, which allows them to be dynamically added to modules and invoked during the application processing. A transpiler’s role is to automatically generate necessary files (such as entities, services, and Protobuf definitions) based on the contracts defined in your application.</p>\n<p><code>/packages/protobuf/src/protobuf.module.ts</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Module</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ProtobufTranspile</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./protobuf.transpiler&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">let</span> <span class=\"hljs-title class_\">ProtobufModule</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Module</span>({\n    <span class=\"hljs-attr\">transpilers</span>: [<span class=\"hljs-title class_\">ProtobufTranspile</span>] <span class=\"hljs-comment\">// Register the transpiler here</span>\n});\n</code></pre>\n             </div>\n<p>In this case, ProtobufModule registers the ProtobufTranspile transpiler. The transpilers property in the Module configuration allows you to list all the transpilers that should be executed when the module is processed.</p>\n<p>When the application is started, the transpiler will be invoked automatically as part of the module processing. Each module’s transpilers will run based on the contracts defined in the system, and they will generate the required files accordingly.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ProtobufModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/protobuf&quot;</span>;\n\n<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Application</span>({\n    ...\n    <span class=\"hljs-attr\">modules</span>: [<span class=\"hljs-title class_\">ProtobufModule</span>], \n});\n</code></pre>\n             </div>\n<p>When the application starts, it will look for all modules, identify the transpilers within those modules, and run them in sequence. In this case, the ProtobufTranspile will process any contracts registered in the system and generate the corresponding Protobuf files.</p>\n<p>This modular design makes it easy to extend the system by adding new transpilers for various tasks, such as generating database entities, Protobuf definitions, or other required files based on the contracts defined in your application.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "transpiles",
                    "label": "Transpiles"
                },
                {
                    "id": "key-features-of-transpilers",
                    "label": "Key Features of Transpilers"
                },
                {
                    "id": "native-transpilers",
                    "label": "Native Transpilers"
                },
                {
                    "id": "example",
                    "label": "Example"
                },
                {
                    "id": "call-a-transpiler",
                    "label": "Call a Transpiler"
                }
            ],
            "link": "docs/0-Overview/6-Transpiles.html",
            "links": {}
        }
    },
    "overview/logging": {
        "prev": {
            "link": "docs/overview/transpiles",
            "title": "Transpiles",
            "desc": "In the CMMV framework, transpilers are essential tools used to generate necessar..."
        },
        "next": {
            "link": "docs/overview/telemetry",
            "title": "Telemetry",
            "desc": "The telemetry system within the CMMV framework provides a powerful mechanism for..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/transpiles\" />\n                    <link rel=\"next\" href=\"/docs/overview/telemetry\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Logger\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/transpiles\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/logging\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/telemetry\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Logger</h1><a id=\"logger\" title=\"Logger\"></a>\n<p>The <code>Logger</code> class in the <code>@cmmv/core</code> module is designed to provide standardized logging for applications. It allows you to log messages at different severity levels (log, error, warning, debug, verbose) and format the output with timestamps, colored contexts, and message levels to improve readability.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>log</code></td>\n<td>Logs a general message with <code>LOG</code> level and the optional <code>context</code>.</td>\n</tr>\n<tr>\n<td><code>error</code></td>\n<td>Logs an error message with <code>ERROR</code> level and the optional <code>context</code>.</td>\n</tr>\n<tr>\n<td><code>warning</code></td>\n<td>Logs a warning message with <code>WARNING</code> level and the optional <code>context</code>.</td>\n</tr>\n<tr>\n<td><code>debug</code></td>\n<td>Logs a debugging message with <code>DEBUG</code> level and the optional <code>context</code>.</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Logs detailed verbose information with <code>VERBOSE</code> level and the optional <code>context</code>.</td>\n</tr>\n</tbody>\n</table>\n<p>Each of these methods formats the message, adds a timestamp, and colors the output based on the severity level to ensure clarity during logging.</p>\n<p><strong>Context:</strong></p>\n<ul>\n<li>A default context (<code>Server</code>) is used unless a specific context is provided during instantiation.</li>\n<li>The context is shown in yellow brackets to differentiate between different parts of the application if necessary.</li>\n</ul>\n<p><strong>Timestamps:</strong></p>\n<ul>\n<li>Each log message is timestamped in the format <code>MM/DD/YYYY, HH:MM:SS AM/PM</code> to track when events occur.</li>\n</ul>\n<p><strong>Color-Coded Severity Levels:</strong></p>\n<ul>\n<li>The message severity is highlighted using different colors:\n<ul>\n<li>ERROR: Red</li>\n<li>WARNING: Orange</li>\n<li>DEBUG: Blue</li>\n<li>VERBOSE: Cyan</li>\n<li>LOG: Green</li>\n</ul>\n</li>\n<li>Context is always highlighted in yellow, and the message body is colored based on the severity level.</li>\n</ul>\n<p><strong>Message Formatting:</strong></p>\n<ul>\n<li>Messages are constructed using a method called <code>formatMessage</code> that combines the timestamp, severity level, context, and message body into a cohesive, readable log entry.</li>\n</ul>\n<p><strong>Customization:</strong></p>\n<p>The logger can be initialized with a custom context name for more specific categorization of logs.</p>\n<h2>Example</h2><a id=\"example\" title=\"Example\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> logger = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Logger</span>(<span class=\"hljs-string\">&#x27;MyApp&#x27;</span>);\n\nlogger.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Application has started&#x27;</span>);\nlogger.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&#x27;Failed to connect to the database&#x27;</span>, <span class=\"hljs-string\">&#x27;DatabaseService&#x27;</span>);\nlogger.<span class=\"hljs-title function_\">warning</span>(<span class=\"hljs-string\">&#x27;Memory usage is high&#x27;</span>);\nlogger.<span class=\"hljs-title function_\">debug</span>(<span class=\"hljs-string\">&#x27;User object: &#x27;</span>, <span class=\"hljs-string\">&#x27;UserService&#x27;</span>);\nlogger.<span class=\"hljs-title function_\">verbose</span>(<span class=\"hljs-string\">&#x27;Detailed information about request processing&#x27;</span>);\n</code></pre>\n             </div>\n<p><strong>Output</strong></p>\n<pre>\n<code class=\"hljs language-shell\" lang=\"shell\"><span style=\"color:green;\">[Server]</span> - 12/04/2024, 10:14:32 AM <span style=\"color:green;\">LOG</span> <span style=\"color:yellow;\">[MyApp]</span> <span style=\"color:green;\">Application has started</span> <br>\n<span style=\"color:red;\">[Server]</span> - 12/04/2024, 10:15:01 AM <span style=\"color:red;\">ERROR</span> <span style=\"color:yellow;\">[DatabaseService]</span> <span style=\"color:red;\">Failed to connect to the database</span> <br>\n<span style=\"color:orange;\">[Server]</span> - 12/04/2024, 10:15:45 AM <span style=\"color:orange;\">WARNING</span> <span style=\"color:yellow;\">[Server]</span> <span style=\"color:orange;\">Memory usage is high</span> <br>\n<span style=\"color:blue;\">[Server]</span> - 12/04/2024, 10:16:12 AM <span style=\"color:blue;\">DEBUG</span> <span style=\"color:yellow;\">[UserService]</span> <span style=\"color:blue;\">User object:</span> <br>\n<span style=\"color:cyan;\">[Server]</span> - 12/04/2024, 10:16:58 AM <span style=\"color:cyan;\">VERBOSE</span> <span style=\"color:yellow;\">[Server]</span> <span style=\"color:cyan;\">Detailed information about request processing</span> \n</code>\n</pre>\n<h2>Logger in Classes</h2><a id=\"logger-in-classes\" title=\"Logger in Classes\"></a>\n<p>The <code>Logger</code> class in the <code>@cmmv/core</code> module provides a simple logging utility that can be used in various classes, such as transpilers and services, to log messages, errors, warnings, and debugging information. Below is an example of how to use the <code>Logger</code> class in your code and what each logging method does.</p>\n<p>In the example of the <code>RepositoryTranspile</code> class, the <code>Logger</code> is used to log important information during the transpile process. Here is how you can integrate the <code>Logger</code> into your class:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ITranspile</span>, <span class=\"hljs-title class_\">Logger</span>, <span class=\"hljs-title class_\">Scope</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">RepositoryTranspile</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">ITranspile</span> {\n    <span class=\"hljs-comment\">// Initialize the Logger instance with a custom context</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">logger</span>: <span class=\"hljs-title class_\">Logger</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Logger</span>(<span class=\"hljs-string\">&#x27;RepositoryTranspile&#x27;</span>);\n\n    <span class=\"hljs-comment\">// Main run method that uses the logger to log the start of the transpile process</span>\n    <span class=\"hljs-title function_\">run</span>(): <span class=\"hljs-built_in\">void</span> {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Starting transpile process for contracts&#x27;</span>);\n\n        <span class=\"hljs-keyword\">const</span> contracts = <span class=\"hljs-title class_\">Scope</span>.<span class=\"hljs-property\">getArray</span>&lt;<span class=\"hljs-built_in\">any</span>&gt;(<span class=\"hljs-string\">&#x27;__contracts&#x27;</span>);\n        \n        <span class=\"hljs-comment\">// Log when no contracts are found</span>\n        <span class=\"hljs-keyword\">if</span> (!contracts || contracts.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">0</span>) {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">warning</span>(<span class=\"hljs-string\">&#x27;No contracts found for transpiling.&#x27;</span>);\n            <span class=\"hljs-keyword\">return</span>;\n        }\n\n        contracts.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">contract</span>: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">if</span> (contract.<span class=\"hljs-property\">generateController</span>) {\n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Generating entity and service for contract: <span class=\"hljs-subst\">${contract.controllerName}</span>`</span>);\n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">generateEntity</span>(contract);\n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">generateService</span>(contract);\n            }\n        });\n\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Transpile process completed successfully.&#x27;</span>);\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">generateEntity</span>(<span class=\"hljs-attr\">contract</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">void</span> {\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\">// Code for generating the entity</span>\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">debug</span>(<span class=\"hljs-string\">`Generating entity for <span class=\"hljs-subst\">${contract.controllerName}</span>`</span>);\n        } <span class=\"hljs-keyword\">catch</span> (error) {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">`Failed to generate entity for <span class=\"hljs-subst\">${contract.controllerName}</span>`</span>, error);\n        }\n    }\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-title function_\">generateService</span>(<span class=\"hljs-attr\">contract</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-built_in\">void</span> {\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-comment\">// Code for generating the service</span>\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">debug</span>(<span class=\"hljs-string\">`Generating service for <span class=\"hljs-subst\">${contract.controllerName}</span>`</span>);\n        } <span class=\"hljs-keyword\">catch</span> (error) {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">`Failed to generate service for <span class=\"hljs-subst\">${contract.controllerName}</span>`</span>, error);\n        }\n    }\n}\n</code></pre>\n             </div>\n<p>By using these logging methods, you can ensure that your application provides informative, structured, and context-specific logs, which are essential for debugging and monitoring production environments.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "logger",
                    "label": "Logger"
                },
                {
                    "id": "example",
                    "label": "Example"
                },
                {
                    "id": "logger-in-classes",
                    "label": "Logger in Classes"
                }
            ],
            "link": "docs/0-Overview/7-Logging.html",
            "links": {}
        }
    },
    "overview/telemetry": {
        "prev": {
            "link": "docs/overview/logging",
            "title": "Logger",
            "desc": "The Logger class in the @cmmv/core module is designed to provide standardized lo..."
        },
        "next": {
            "link": "docs/overview/request",
            "title": "Request",
            "desc": "The HttpService class in the @cmmv/http package provides a convenient way to mak..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/logging\" />\n                    <link rel=\"next\" href=\"/docs/overview/request\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Telemetry\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/logging\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/telemetry\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/request\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Telemetry</h1><a id=\"telemetry\" title=\"Telemetry\"></a>\n<p>The telemetry system within the CMMV framework provides a powerful mechanism for tracking and monitoring internal processes both in the <strong>backend</strong> and <strong>frontend</strong>. It is designed to measure the performance of various components such as database queries, service calls, API responses, and rendering times. By utilizing this telemetry system, developers can identify potential bottlenecks or performance issues in the system.</p>\n<p>The <strong>Telemetry</strong> class, a singleton, manages telemetry records for processes in both server and client environments. It tracks the start and end times of labeled processes, allowing the calculation of the time spent on each task. These records can be accessed, monitored, and displayed in real-time, particularly in development mode, to help developers analyze where slowdowns or inefficiencies are occurring.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>start(label: string, requestId?: string)</code></td>\n<td>Starts a telemetry record for a process with a given label and request ID.</td>\n</tr>\n<tr>\n<td><code>end(label: string, requestId?: string)</code></td>\n<td>Ends the telemetry record by marking the end time for the process with the given label.</td>\n</tr>\n<tr>\n<td><code>getTelemetry(requestId: string)</code></td>\n<td>Returns all telemetry records for a given request ID.</td>\n</tr>\n<tr>\n<td><code>clearTelemetry(requestId: string)</code></td>\n<td>Clears telemetry records for a specific request ID.</td>\n</tr>\n<tr>\n<td><code>registerPlugin(plugin: any)</code></td>\n<td>Allows external plugins to register and extend the telemetry system with additional capabilities.</td>\n</tr>\n<tr>\n<td><code>getRecords()</code></td>\n<td>Retrieves all telemetry records currently stored.</td>\n</tr>\n</tbody>\n</table>\n<h2>Workflow</h2><a id=\"workflow\" title=\"Workflow\"></a>\n<p>Start a Telemetry Record: When a request or action starts, the telemetry system logs the start time with the process label.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, requestId);\n</code></pre>\n             </div>\n<p>End the Telemetry Record: When the process completes, the telemetry system logs the end time.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, requestId);\n</code></pre>\n             </div>\n<p>Retrieve the Telemetry Data: After the request completes, you can retrieve all telemetry data associated with the request ID.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> records = <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">getTelemetry</span>(requestId);\n</code></pre>\n             </div>\n<p>Clear the Telemetry Data: Once telemetry data is no longer needed, you can clear it.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">clearTelemetry</span>(requestId);\n</code></pre>\n             </div>\n<p>In services that communicate with external components (e.g., databases, queues), it is recommended to implement telemetry points to track the execution time of these operations. This is particularly helpful when <code>NODE_ENV</code> is set to <code>dev</code>, as it will log the telemetry data and display it in the console.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(req?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>[]&gt; {\n    <span class=\"hljs-keyword\">try</span> {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        \n        <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">findAll</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        \n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    } <span class=\"hljs-keyword\">catch</span> (e) {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">throw</span> e;\n    }\n}\n</code></pre>\n             </div>\n<p>The telemetry system supports both backend and frontend processes. By implementing telemetry in both environments, you can get a complete view of the system’s performance from request initiation to response and rendering.</p>\n<p><strong>Example console output of telemetry:</strong></p>\n<table>\n<thead>\n<tr>\n<th>Index</th>\n<th>Process</th>\n<th>Duration</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>‘Server: Request Process’</td>\n<td>‘35.00 ms’</td>\n</tr>\n<tr>\n<td>1</td>\n<td>‘Server: Compile Template’</td>\n<td>‘30.00 ms’</td>\n</tr>\n<tr>\n<td>2</td>\n<td>‘Server: Load Includes’</td>\n<td>‘0.00 ms’</td>\n</tr>\n<tr>\n<td>3</td>\n<td>‘Server: TaskService::GetAll’</td>\n<td>‘10.00 ms’</td>\n</tr>\n<tr>\n<td>4</td>\n<td>‘Server: Process Setup’</td>\n<td>‘17.00 ms’</td>\n</tr>\n<tr>\n<td>5</td>\n<td>‘Client: Initialize Frontend’</td>\n<td>‘0.30 ms’</td>\n</tr>\n<tr>\n<td>6</td>\n<td>‘Client: WebSocket Initialization’</td>\n<td>‘0.30 ms’</td>\n</tr>\n<tr>\n<td>7</td>\n<td>‘Client: Load Contracts’</td>\n<td>‘1.30 ms’</td>\n</tr>\n<tr>\n<td>8</td>\n<td>‘Client: Process Expressions’</td>\n<td>‘5.30 ms’</td>\n</tr>\n<tr>\n<td>9</td>\n<td>‘Client: CreateApp’</td>\n<td>‘1.00 ms’</td>\n</tr>\n<tr>\n<td>10</td>\n<td>‘Client: Mount App’</td>\n<td>‘4.20 ms’</td>\n</tr>\n</tbody>\n</table>\n<p>This output provides a detailed timeline of both server-side and client-side processes, allowing you to pinpoint slow areas in the system.</p>\n<h2>Best Practices</h2><a id=\"best-practices\" title=\"Best Practices\"></a>\n<ul>\n<li><strong>Telemetry in Services:</strong> Always implement telemetry for operations that involve external services or long-running tasks such as database queries or message queue operations.</li>\n<li><strong>Use in Development:</strong> When <code>NODE_ENV</code> is set to dev, telemetry data is automatically sent to <code>@cmmv/view</code> and displayed in the console, allowing for immediate performance analysis.</li>\n<li><strong>Clear Telemetry:</strong> Clear telemetry records when they are no longer needed to avoid memory leaks or excessive storage.</li>\n</ul>\n<p>By using the telemetry system, you can gain full visibility into how long processes take and where slowdowns occur, whether in the backend or frontend of your application. This can help you optimize your system’s performance and ensure smooth communication between components.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "telemetry",
                    "label": "Telemetry"
                },
                {
                    "id": "workflow",
                    "label": "Workflow"
                },
                {
                    "id": "best-practices",
                    "label": "Best Practices"
                }
            ],
            "link": "docs/0-Overview/8-Telemetry.html",
            "links": {}
        }
    },
    "overview/request": {
        "prev": {
            "link": "docs/overview/telemetry",
            "title": "Telemetry",
            "desc": "The telemetry system within the CMMV framework provides a powerful mechanism for..."
        },
        "next": {
            "link": "docs/overview/decorators",
            "title": "Decorators",
            "desc": "Custom decorators in @cmmv allow you to extend and modify class behavior dynamic..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/telemetry\" />\n                    <link rel=\"next\" href=\"/docs/overview/decorators\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Request\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/telemetry\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/request\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/decorators\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Request</h1><a id=\"request\" title=\"Request\"></a>\n<p>The <code>HttpService</code> class in the <code>@cmmv/http</code> package provides a convenient way to make HTTP requests to external APIs using the <code>Axios</code> <a href=\"https://www.npmjs.com/package/axios\" target=\"_blank\" rel=\"nofollow\">NPM</a> library. It extends the <code>AbstractService</code> and is registered as a service with the name <code>'http'</code>. The service wraps common HTTP request methods such as <code>GET</code>, <code>POST</code>, <code>DELETE</code>, <code>PUT</code>, <code>PATCH</code>, and <code>HEAD</code> while using Axios for handling requests and responses.</p>\n<p>To use the <code>HttpService</code> in your project, make sure to import it from the <code>@cmmv/http</code> package:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">HttpService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n</code></pre>\n             </div>\n<p>The <code>HttpService</code> provides several HTTP methods for interacting with external APIs. These methods support custom configurations through <code>AxiosRequestConfig</code> and return a <code>Promise</code> that resolves with an <code>AxiosResponse</code>.</p>\n<h2>Methods</h2><a id=\"methods\" title=\"Methods\"></a>\n<p><code>request&lt;T&gt;(config: AxiosRequestConfig): Promise&lt;AxiosResponse&lt;T&gt;&gt;</code></p>\n<ul>\n<li><strong>Description:</strong> Performs a generic HTTP request based on the given Axios configuration.</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li>\n<p><strong><code>config:</code></strong> An AxiosRequestConfig object that defines the HTTP method, headers, and other request configurations.</p>\n</li>\n<li>\n<p><strong>Returns:</strong> A Promise that resolves with an AxiosResponse.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">httpService</span>.<span class=\"hljs-title function_\">request</span>({\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>,\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;https://api.example.com/data&#x27;</span>,\n});\n</code></pre>\n             </div>\n<h2>Get</h2><a id=\"get\" title=\"Get\"></a>\n<p><code>get&lt;T&gt;(url: string, config?: AxiosRequestConfig): Promise&lt;AxiosResponse&lt;T&gt;&gt;</code></p>\n<ul>\n<li><strong>Description:</strong> Sends an HTTP <code>GET</code> request to the specified URL.</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li>\n<p><strong><code>url:</code></strong> The URL to send the GET request to.</p>\n</li>\n<li>\n<p><strong><code>config:</code></strong> An AxiosRequestConfig object that defines the HTTP method, headers, and other request configurations.</p>\n</li>\n<li>\n<p><strong>Returns:</strong> A Promise that resolves with an AxiosResponse.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">httpService</span>.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;https://api.example.com/data&#x27;</span>);\n</code></pre>\n             </div>\n<h2>Delete</h2><a id=\"delete\" title=\"Delete\"></a><a id=\"delete\" title=\"Delete\"></a>\n<p><code>delete&lt;T&gt;(url: string, config?: AxiosRequestConfig): Promise&lt;AxiosResponse&lt;T&gt;&gt;</code></p>\n<ul>\n<li><strong>Description:</strong> Sends an HTTP <code>DELETE</code> request to the specified URL.</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li>\n<p><strong><code>url:</code></strong> The URL to send the DELETE request to.</p>\n</li>\n<li>\n<p><strong><code>config:</code></strong> Optional Axios configuration options.</p>\n</li>\n<li>\n<p><strong>Returns:</strong> A Promise that resolves with an AxiosResponse.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> httpService.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">&#x27;https://api.example.com/data/1&#x27;</span>);\n</code></pre>\n             </div>\n<h2>Delete</h2>\n<p><code>delete&lt;T&gt;(url: string, config?: AxiosRequestConfig): Promise&lt;AxiosResponse&lt;T&gt;&gt;</code></p>\n<ul>\n<li><strong>Description:</strong> Sends an HTTP <code>DELETE</code> request to the specified URL.</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li>\n<p><strong><code>url:</code></strong> The URL to send the DELETE request to.</p>\n</li>\n<li>\n<p><strong><code>config:</code></strong> Optional Axios configuration options.</p>\n</li>\n<li>\n<p><strong>Returns:</strong> A Promise that resolves with an AxiosResponse.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> httpService.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">&#x27;https://api.example.com/data/1&#x27;</span>);\n</code></pre>\n             </div>\n<h2>Head</h2><a id=\"head\" title=\"Head\"></a>\n<p><code>head&lt;T&gt;(url: string, config?: AxiosRequestConfig): Promise&lt;AxiosResponse&lt;T&gt;&gt;</code></p>\n<ul>\n<li><strong>Description:</strong> Sends an HTTP <code>HEAD</code> request to the specified URL to fetch only headers without the response body.</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li>\n<p><strong><code>url:</code></strong> The URL to send the <code>HEAD</code> request to.</p>\n</li>\n<li>\n<p><strong><code>config:</code></strong> Optional Axios configuration options.</p>\n</li>\n<li>\n<p><strong>Returns:</strong> A <code>Promise</code> that resolves with an <code>AxiosResponse</code>.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">httpService</span>.<span class=\"hljs-title function_\">head</span>(<span class=\"hljs-string\">&#x27;https://api.example.com/data&#x27;</span>);\n</code></pre>\n             </div>\n<h2>Post</h2><a id=\"post\" title=\"Post\"></a>\n<p><code>post&lt;T&gt;(url: string, data?: any, config?: AxiosRequestConfig): Promise&lt;AxiosResponse&lt;T&gt;&gt;</code></p>\n<ul>\n<li><strong>Description:</strong> Sends an HTTP <code>POST</code> request to the specified URL with the given data.</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li>\n<p><strong><code>url:</code></strong> The URL to send the POST request to.</p>\n</li>\n<li>\n<p><strong><code>data:</code></strong> The data to be sent in the request body.</p>\n</li>\n<li>\n<p><strong><code>config:</code></strong> Optional Axios configuration options.</p>\n</li>\n<li>\n<p><strong>Returns:</strong> A <code>Promise</code> that resolves with an <code>AxiosResponse</code>.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> httpService.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&#x27;https://api.example.com/data&#x27;</span>, { \n    <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">&#x27;value&#x27;</span> \n});\n</code></pre>\n             </div>\n<h2>Put</h2><a id=\"put\" title=\"Put\"></a>\n<p><code>put&lt;T&gt;(url: string, data?: any, config?: AxiosRequestConfig): Promise&lt;AxiosResponse&lt;T&gt;&gt;</code></p>\n<ul>\n<li><strong>Description:</strong> Sends an HTTP <code>PUT</code> request to the specified URL with the given data.</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li>\n<p><strong><code>url:</code></strong> The URL to send the PUT request to.</p>\n</li>\n<li>\n<p><strong><code>data:</code></strong> The data to be sent in the request body.</p>\n</li>\n<li>\n<p><strong><code>config:</code></strong> Optional Axios configuration options.</p>\n</li>\n<li>\n<p><strong>Returns:</strong> A <code>Promise</code> that resolves with an <code>AxiosResponse</code>.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> httpService.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">&#x27;https://api.example.com/data/1&#x27;</span>, { \n    <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">&#x27;newValue&#x27;</span> \n});\n</code></pre>\n             </div>\n<h2>Patch</h2><a id=\"patch\" title=\"Patch\"></a>\n<p><code>patch&lt;T&gt;(url: string, data?: any, config?: AxiosRequestConfig): Promise&lt;AxiosResponse&lt;T&gt;&gt;</code></p>\n<ul>\n<li><strong>Description:</strong> Sends an HTTP <code>PATCH</code> request to the specified URL with the given data.</li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li>\n<p><strong><code>url:</code></strong> The URL to send the PATCH request to.</p>\n</li>\n<li>\n<p><strong><code>data:</code></strong> The data to be sent in the request body.</p>\n</li>\n<li>\n<p><strong><code>config:</code></strong> Optional Axios configuration options.</p>\n</li>\n<li>\n<p><strong>Returns:</strong> A <code>Promise</code> that resolves with an <code>AxiosResponse</code>.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> httpService.<span class=\"hljs-title function_\">patch</span>(<span class=\"hljs-string\">&#x27;https://api.example.com/data/1&#x27;</span>, { \n    <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">&#x27;patchedValue&#x27;</span> \n});\n</code></pre>\n             </div>\n<h1>Usage</h1><a id=\"usage\" title=\"Usage\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Service</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">HttpService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/http&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Cron</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/scheduling&quot;</span>;\n\n<span class=\"hljs-meta\">@Service</span>()\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CryptoPriceService</span> {\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> apiUrl = <span class=\"hljs-string\">&quot;https://api.coingecko.com/api/v3/coins/markets&quot;</span>;\n\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">httpService</span>: <span class=\"hljs-title class_\">HttpService</span>\n    </span>){}\n\n    <span class=\"hljs-meta\">@Cron</span>(<span class=\"hljs-string\">&quot;*/1 * * * *&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">fetchTopCryptos</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">httpService</span>.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">apiUrl</span>, {\n                <span class=\"hljs-attr\">params</span>: {\n                    <span class=\"hljs-attr\">vs_currency</span>: <span class=\"hljs-string\">&#x27;usd&#x27;</span>,\n                    <span class=\"hljs-attr\">order</span>: <span class=\"hljs-string\">&#x27;market_cap_desc&#x27;</span>, \n                    <span class=\"hljs-attr\">page</span>: <span class=\"hljs-number\">1</span>\n                }\n            });\n\n            <span class=\"hljs-keyword\">if</span> (response.<span class=\"hljs-property\">status</span> === <span class=\"hljs-number\">200</span>) {\n                <span class=\"hljs-keyword\">const</span> cryptos = response.<span class=\"hljs-property\">data</span>;\n                cryptos.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">crypto</span>: <span class=\"hljs-built_in\">any</span></span>) =&gt;</span> {\n                    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`\n                        Criptomoeda: <span class=\"hljs-subst\">${crypto.name}</span>, \n                        Preço: $<span class=\"hljs-subst\">${crypto.current_price}</span>\n                    `</span>);\n                });\n            } <span class=\"hljs-keyword\">else</span> {\n                <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">`Erro ao obter dados: <span class=\"hljs-subst\">${response.statusText}</span>`</span>);\n            }\n        } <span class=\"hljs-keyword\">catch</span> (error) {\n            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&#x27;Erro ao realizar a requisição:&#x27;</span>, error.<span class=\"hljs-property\">message</span>);\n        }\n    }\n}\n</code></pre>\n             </div>\n<p>The <code>HttpService</code> is a powerful and flexible tool for making HTTP requests within the <code>@cmmv/http</code> framework. It leverages the popular <code>Axios</code> library to handle HTTP operations, providing an easy way to interact with external APIs from your CMMV-based application. Each method corresponds to a standard HTTP request type, and additional configurations can be applied using <code>AxiosRequestConfig</code> to customize behavior like headers, timeouts, and more.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "request",
                    "label": "Request"
                },
                {
                    "id": "methods",
                    "label": "Methods"
                },
                {
                    "id": "get",
                    "label": "Get"
                },
                {
                    "id": "delete",
                    "label": "Delete"
                },
                {
                    "id": "head",
                    "label": "Head"
                },
                {
                    "id": "post",
                    "label": "Post"
                },
                {
                    "id": "put",
                    "label": "Put"
                },
                {
                    "id": "patch",
                    "label": "Patch"
                },
                {
                    "id": "usage",
                    "label": "Usage"
                }
            ],
            "link": "docs/0-Overview/9-Request.html",
            "links": {}
        }
    },
    "overview/decorators": {
        "prev": {
            "link": "docs/overview/request",
            "title": "Request",
            "desc": "The HttpService class in the @cmmv/http package provides a convenient way to mak..."
        },
        "next": {
            "link": "docs/overview/ecosystem",
            "title": "Ecosystem",
            "desc": "CMMV offers a range of plugins to complement applications, providing additional..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/request\" />\n                    <link rel=\"next\" href=\"/docs/overview/ecosystem\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Decorators\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/request\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/decorators\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/ecosystem\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Decorators</h1><a id=\"decorators\" title=\"Decorators\"></a>\n<p>Custom decorators in <code>@cmmv</code> allow you to extend and modify class behavior dynamically by using <code>Reflect</code> metadata. Here’s how you can create your own decorators:</p>\n<p>Use TypeScript’s <code>ClassDecorator</code>, <code>MethodDecorator</code>, or <code>PropertyDecorator</code> interfaces to define your custom decorators.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">CustomClassDecorator</span>(<span class=\"hljs-params\">options?: <span class=\"hljs-built_in\">any</span></span>): <span class=\"hljs-title class_\">ClassDecorator</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-attr\">target</span>: <span class=\"hljs-built_in\">object</span></span>) =&gt;</span> {\n        <span class=\"hljs-title class_\">Reflect</span>.<span class=\"hljs-title function_\">defineMetadata</span>(<span class=\"hljs-string\">&#x27;custom_metadata&#x27;</span>, options, target);\n    };\n}\n</code></pre>\n             </div>\n<p>This stores metadata (<code>options</code>) associated with the class.</p>\n<p>To access this metadata later, use <code>Reflect.getMetadata()</code>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> metadata = <span class=\"hljs-title class_\">Reflect</span>.<span class=\"hljs-title function_\">getMetadata</span>(<span class=\"hljs-string\">&#x27;custom_metadata&#x27;</span>, <span class=\"hljs-title class_\">MyClass</span>);\n</code></pre>\n             </div>\n<h2>Custom Method</h2><a id=\"custom-method\" title=\"Custom Method\"></a>\n<p>You can define decorators for methods similarly:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">LogExecutionTime</span>(<span class=\"hljs-params\"></span>): <span class=\"hljs-title class_\">MethodDecorator</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">(<span class=\"hljs-params\">target, propertyKey, <span class=\"hljs-attr\">descriptor</span>: <span class=\"hljs-title class_\">PropertyDescriptor</span></span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> originalMethod = descriptor.<span class=\"hljs-property\">value</span>;\n        \n        descriptor.<span class=\"hljs-property\">value</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">...<span class=\"hljs-attr\">args</span>: <span class=\"hljs-built_in\">any</span>[]</span>) {\n            <span class=\"hljs-keyword\">const</span> start = <span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">now</span>();\n            <span class=\"hljs-keyword\">const</span> result = originalMethod.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>, args);\n            <span class=\"hljs-keyword\">const</span> end = <span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">now</span>();\n            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Execution time: <span class=\"hljs-subst\">${end - start}</span>ms`</span>);\n            <span class=\"hljs-keyword\">return</span> result;\n        };\n    };\n}\n</code></pre>\n             </div>\n<p>This method decorator logs the execution time of the method.</p>\n<h2>Property Decorator</h2><a id=\"property-decorator\" title=\"Property Decorator\"></a>\n<p>For property decorators, you can use the following pattern:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">DefaultValue</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">any</span></span>): <span class=\"hljs-title class_\">PropertyDecorator</span> {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">(<span class=\"hljs-params\">target, <span class=\"hljs-attr\">propertyKey</span>: <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-built_in\">symbol</span></span>) =&gt;</span> {\n        <span class=\"hljs-title class_\">Reflect</span>.<span class=\"hljs-title function_\">defineMetadata</span>(\n            <span class=\"hljs-string\">&#x27;default_value&#x27;</span>, value, target, propertyKey\n        );\n    };\n}\n</code></pre>\n             </div>\n<p>Later, retrieve the default value:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> defaultValue = <span class=\"hljs-title class_\">Reflect</span>.<span class=\"hljs-title function_\">getMetadata</span>(\n    <span class=\"hljs-string\">&#x27;default_value&#x27;</span>, target, propertyKey\n);\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>Create the Decorator:</strong> Use <code>Reflect.defineMetadata()</code> to attach metadata to the class, method, or property.</li>\n<li><strong>Use the Decorator:</strong> Apply the decorator to classes, methods, or properties.</li>\n<li><strong>Retrieve Metadata:</strong> Use <code>Reflect.getMetadata()</code> to retrieve the attached metadata at runtime.</li>\n</ul>\n<h2>Contract Decorator</h2><a id=\"contract-decorator\" title=\"Contract Decorator\"></a>\n<p>The <code>@Contract</code> decorator is used to define a contract controller with various options, such as authentication, caching, and proto file paths.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Contract</span>({\n  <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&#x27;UserContract&#x27;</span>,\n  <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&#x27;user.proto&#x27;</span>,\n  <span class=\"hljs-attr\">generateEntities</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">auth</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">cache</span>: { <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">&#x27;userCache&#x27;</span>, <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">300</span> }\n})\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserContract</span> {}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong><code>controllerName (string):</code></strong> Defines the name of the controller to be generated.</li>\n<li><strong><code>controllerCustomPath (string, optional):</code></strong> Custom path for the controller.</li>\n<li><strong><code>protoPath (string):</code></strong> Path to the .proto file for the contract.</li>\n<li><strong><code>protoPackage (string, optional):</code></strong> Package name for the protocol buffer.</li>\n<li><strong><code>directMessage (boolean, optional):</code></strong> If true, enables direct messaging via WebSocket.</li>\n<li><strong><code>generateController (boolean, optional):</code></strong> Automatically generates the controller if set to true.</li>\n<li><strong><code>generateEntities (boolean, optional):</code></strong> Controls whether entities are generated.</li>\n<li><strong><code>auth (boolean, optional):</code></strong> Enables authentication for the controller.</li>\n<li><strong><code>imports (Array&lt;string&gt;, optional):</code></strong> Specifies additional imports required by the controller.</li>\n<li><strong><code>cache (CacheOptions, optional):</code></strong> Defines caching behavior for the contract.</li>\n</ul>\n<h2>ContractField Decorator</h2><a id=\"contractfield-decorator\" title=\"ContractField Decorator\"></a>\n<p>The <code>@ContractField</code> decorator is used to declare fields within a contract and define validation rules, transformations, and database configurations.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@ContractField</span>({\n  <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n  <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">validations</span>: [{ <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;isEmail&#x27;</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid email format&#x27;</span> }]\n})\n<span class=\"hljs-attr\">email</span>: <span class=\"hljs-built_in\">string</span>;\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong><code>protoType (string):</code></strong> Defines the data type in the protocol buffer (e.g., <code>string</code>, <code>int32</code>).</li>\n<li><strong><code>protoRepeated (boolean, optional):</code></strong> Indicates if the field is a repeated (array) type.</li>\n<li><strong><code>defaultValue (any, optional):</code></strong> Specifies the default value for the field.</li>\n<li><strong><code>index (boolean, optional):</code></strong> Enables database indexing for the field.</li>\n<li><strong><code>unique (boolean, optional):</code></strong> Ensures the field has unique values.</li>\n<li><strong><code>exclude (boolean, optional):</code></strong> Excludes the field from the generated contract.</li>\n<li><strong><code>nullable (boolean, optional):</code></strong> Allows null values.<br>\ntoClassOnly (boolean, optional): Restricts field mapping to the class, excluding database/entity.</li>\n<li><strong><code>transform (Function, optional):</code></strong> A custom transformation function for field values.</li>\n<li><strong><code>validations (ValidationOption[], optional):</code></strong> Defines validation rules, such as type checks or custom validation logic.</li>\n</ul>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "decorators",
                    "label": "Decorators"
                },
                {
                    "id": "custom-method",
                    "label": "Custom Method"
                },
                {
                    "id": "property-decorator",
                    "label": "Property Decorator"
                },
                {
                    "id": "contract-decorator",
                    "label": "Contract Decorator"
                },
                {
                    "id": "contractfield-decorator",
                    "label": "ContractField Decorator"
                }
            ],
            "link": "docs/0-Overview/91-Decorators.html",
            "links": {}
        }
    },
    "overview/ecosystem": {
        "prev": {
            "link": "docs/overview/decorators",
            "title": "Decorators",
            "desc": "Custom decorators in @cmmv allow you to extend and modify class behavior dynamic..."
        },
        "next": {
            "link": "docs/overview/vscode",
            "title": "Visual Studio Code",
            "desc": "The CMMV Language Tools extension for Visual Studio Code is now available! You c..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/decorators\" />\n                    <link rel=\"next\" href=\"/docs/overview/vscode\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Ecosystem\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/decorators\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/ecosystem\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/vscode\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Ecosystem</h1><a id=\"ecosystem\" title=\"Ecosystem\"></a>\n<p>CMMV offers a range of plugins to complement applications, providing additional and optimized features for various needs. These plugins extend the framework’s capabilities by integrating communication, storage, caching, and more in a native and well-integrated manner. Below is a list of available plugins at the moment:</p>\n<table>\n<thead>\n<tr>\n<th>Plugin</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/core\" target=\"_blank\" rel=\"nofollow\">@cmmv/core</a></td>\n<td>Core module providing the foundation for building applications, managing modules, services, and contracts.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/http\" target=\"_blank\" rel=\"nofollow\">@cmmv/http</a></td>\n<td>HTTP server management module with support for multiple HTTP adapters, including default, Express, and Fastify.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/protobuf\" target=\"_blank\" rel=\"nofollow\">@cmmv/protobuf</a></td>\n<td>Provides Protobuf support for serialization and deserialization, optimizing binary communication.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/ws\" target=\"_blank\" rel=\"nofollow\">@cmmv/ws</a></td>\n<td>Native WebSocket support for real-time communication between the client and server.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/auth\" target=\"_blank\" rel=\"nofollow\">@cmmv/auth</a></td>\n<td>Handles user authentication and authorization, managing security and access control.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/cache\" target=\"_blank\" rel=\"nofollow\">@cmmv/cache</a></td>\n<td>Caching module to optimize performance by storing temporary data for quick access.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/queue\" target=\"_blank\" rel=\"nofollow\">@cmmv/queue</a></td>\n<td>Manages job queues and background processing tasks to help improve application performance.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/repository\" target=\"_blank\" rel=\"nofollow\">@cmmv/repository</a></td>\n<td>Database management with repositories for handling entities and persistent data access.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/scheduling\" target=\"_blank\" rel=\"nofollow\">@cmmv/scheduling</a></td>\n<td>Module for scheduling tasks and automating routines with task management support.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv/tree/main/packages/view\" target=\"_blank\" rel=\"nofollow\">@cmmv/view</a></td>\n<td>Server-Side Rendering (SSR) engine for rendering views, including its own template engine.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-reactivity\" target=\"_blank\" rel=\"nofollow\">@cmmv/reactivity</a></td>\n<td>Enables reactive data binding and management to create more dynamic applications.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-server/tree/main/packages/server\" target=\"_blank\" rel=\"nofollow\">@cmmv/server</a></td>\n<td>Default HTTP server for high-performance applications, providing more control over server features.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-server/tree/main/packages/server-static\" target=\"_blank\" rel=\"nofollow\">@cmmv/server-static</a></td>\n<td>Serves static files from the file system, enabling faster delivery of assets like HTML, CSS, and JS.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-server/tree/main/packages/body-parser\" target=\"_blank\" rel=\"nofollow\">@cmmv/body-parser</a></td>\n<td>Middleware for parsing incoming request bodies, including support for JSON and URL-encoded payloads.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-server/tree/main/packages/compression\" target=\"_blank\" rel=\"nofollow\">@cmmv/compression</a></td>\n<td>Compression middleware to reduce the size of the response body and improve application performance.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-server/tree/main/packages/cookie-parser\" target=\"_blank\" rel=\"nofollow\">@cmmv/cookie-parser</a></td>\n<td>Parses cookies in requests, making it easier to manage session and user data via cookies.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-server/tree/main/packages/cors\" target=\"_blank\" rel=\"nofollow\">@cmmv/cors</a></td>\n<td>Middleware for enabling Cross-Origin Resource Sharing (CORS), allowing secure cross-origin requests.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-server/tree/main/packages/etag\" target=\"_blank\" rel=\"nofollow\">@cmmv/etag</a></td>\n<td>ETag generation for response caching, improving efficiency by validating cached responses.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-server/tree/main/packages/helmet\" target=\"_blank\" rel=\"nofollow\">@cmmv/helmet</a></td>\n<td>Security middleware to help protect applications by setting various HTTP headers.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-swagger\" target=\"_blank\" rel=\"nofollow\">@cmmv/swagger</a></td>\n<td>Provides API documentation with Swagger integration, automatically generating OpenAPI specifications.</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/andrehrferreira/cmmv-swagger\" target=\"_blank\" rel=\"nofollow\">@cmmv/plugin-vite</a></td>\n<td>Enables Vite to interpret <code>.cmmv</code> files, similar to how Vue files are processed, with full support for CMMV syntax.</td>\n</tr>\n</tbody>\n</table>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "ecosystem",
                    "label": "Ecosystem"
                }
            ],
            "link": "docs/0-Overview/92-Ecosystem.html",
            "links": {}
        }
    },
    "overview/vscode": {
        "prev": {
            "link": "docs/overview/ecosystem",
            "title": "Ecosystem",
            "desc": "CMMV offers a range of plugins to complement applications, providing additional..."
        },
        "next": {
            "link": "docs/overview/vite",
            "title": "Vite",
            "desc": "The CMMV Vite Plugin allows Vite to seamlessly handle .cmmv files in the same wa..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/ecosystem\" />\n                    <link rel=\"next\" href=\"/docs/overview/vite\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Visual Studio Code\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/ecosystem\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/vscode\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/overview/vite\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Visual Studio Code</h1><a id=\"visual-studio-code\" title=\"Visual Studio Code\"></a>\n<p>The CMMV Language Tools extension for Visual Studio Code is now available! You can install it directly from the following sources:</p>\n<ul>\n<li><strong>GitHub:</strong> <a href=\"https://github.com/andrehrferreira/cmmv-language-tools\" target=\"_blank\" rel=\"nofollow\">https://github.com/andrehrferreira/cmmv-language-tools</a></li>\n<li><strong>VS Code Marketplace:</strong> <a href=\"https://marketplace.visualstudio.com/items?itemName=CMMV.cmmvlt\" target=\"_blank\" rel=\"nofollow\">https://marketplace.visualstudio.com/items?itemName=CMMV.cmmvlt</a></li>\n</ul>\n<h2>Features</h2><a id=\"features\" title=\"Features\"></a>\n<h3><code>.cmmv</code> File Syntax Highlighting</h3>\n<p>This extension offers full support for syntax highlighting of <code>.cmmv</code> files. The CMMV file format is a key part of the CMMV framework, and this extension ensures that developers have a smooth experience working with these files.</p>\n<h3>Vue.js 2 &amp; Vue.js 3 Support</h3>\n<p>In addition to the CMMV framework, this extension also integrates the powerful features of the original Vue Language Tools project. This means that you will have full support for Vue.js 2 and Vue.js 3 files, including:</p>\n<h3>Language Server Support</h3>\n<p>Since the <code>.cmmv</code> file syntax is compatible and similar to Vue’s Single File Component (SFC) structure, this extension also provides seamless support for Vue’s Language Server capabilities. This includes:</p>\n<h2>Installation</h2><a id=\"installation\" title=\"Installation\"></a>\n<p>You can install this extension directly from the Visual Studio Code Marketplace:</p>\n<ol>\n<li>Open Visual Studio Code.</li>\n<li>Go to the Extensions panel (or press <code>Ctrl+Shift+X</code>).</li>\n<li>Search for <code>CMMV Language Tools</code> and click Install.</li>\n<li>Alternatively, you can download and install it from the <a href=\"https://marketplace.visualstudio.com/items?itemName=CMMV.cmmvlt\" target=\"_blank\" rel=\"nofollow\">VS Code Marketplace link</a>.</li>\n</ol>\n<p>For manual installation, you can clone the repository and follow the installation steps from the <a href=\"https://github.com/andrehrferreira/cmmv-language-tools\" target=\"_blank\" rel=\"nofollow\">GitHub project</a>.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "visual-studio-code",
                    "label": "Visual Studio Code"
                },
                {
                    "id": "features",
                    "label": "Features"
                },
                {
                    "id": "installation",
                    "label": "Installation"
                }
            ],
            "link": "docs/0-Overview/93-VSCode.html",
            "links": {}
        }
    },
    "overview/vite": {
        "prev": {
            "link": "docs/overview/vscode",
            "title": "Visual Studio Code",
            "desc": "The CMMV Language Tools extension for Visual Studio Code is now available! You c..."
        },
        "next": {
            "link": "docs/contracts/overview",
            "title": "Contracts",
            "desc": "CMMV’s contract system allows defining structured models that are used to auto-g..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/vscode\" />\n                    <link rel=\"next\" href=\"/docs/contracts/overview\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Vite\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/vscode\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/overview/vite\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/contracts/overview\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Vite</h1><a id=\"vite\" title=\"Vite\"></a>\n<p>The CMMV Vite Plugin allows Vite to seamlessly handle <code>.cmmv</code> files in the same way it processes Vue Single File Components (SFCs). With this plugin, developers can write and use <code>.cmmv</code> files directly in their projects, leveraging Vite’s fast development environment.</p>\n<ul>\n<li><strong>GitHub:</strong> <a href=\"https://github.com/andrehrferreira/vite-plugin-cmmv\" target=\"_blank\" rel=\"nofollow\">https://github.com/andrehrferreira/vite-plugin-cmmv</a></li>\n</ul>\n<h2>Installation</h2><a id=\"installation\" title=\"Installation\"></a>\n<p>To use the CMMV Vite Plugin, you can install it via npm:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">npm install @cmmv/plugin-vite --save-dev\n</code></pre>\n             </div>\n<h2>Configuration</h2><a id=\"configuration\" title=\"Configuration\"></a>\n<p>To configure Vite to recognize and process <code>.cmmv</code> files, follow the simple steps below.</p>\n<h3>Step 1: Add the plugin to your Vite configuration</h3>\n<p>In your <code>vite.config.js</code>, import the plugin and add it to the <code>plugins</code> array:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-comment\">// vite.config.js</span>\n<span class=\"hljs-keyword\">import</span> cmmvPlugin <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/plugin-vite&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">plugins</span>: [<span class=\"hljs-title function_\">cmmvPlugin</span>()],\n};\n</code></pre>\n             </div>\n<p>This is all you need to configure Vite to interpret <code>.cmmv</code> files!</p>\n<h3>Example Usage</h3>\n<p>Here’s an example <code>.cmmv</code> file structure. It works similarly to Vue’s Single File Component format:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ message }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Hello CMMV!&#x27;</span>\n    };\n  }\n};\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n</code></pre>\n             </div>\n<p>The <code>.cmmv</code> file above consists of three sections: <code>template</code>, <code>script</code>, and <code>style</code>, which are processed in the same way as Vue components.</p>\n<h3>Example Project</h3>\n<p>For a working example of how to use the <strong>CMMV Vite Plugin</strong>, check out the <a href=\"https://github.com/andrehrferreira/cmmv-reactivity\" target=\"_blank\" rel=\"nofollow\">CMMV Reactivity Project</a>. This project demonstrates how to set up and use the plugin in a real-world scenario, showcasing the power and simplicity of integrating CMMV files into your Vite-powered projects.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Overview"
            ],
            "anchors": [
                {
                    "id": "vite",
                    "label": "Vite"
                },
                {
                    "id": "installation",
                    "label": "Installation"
                },
                {
                    "id": "configuration",
                    "label": "Configuration"
                }
            ],
            "link": "docs/0-Overview/94-Vite.html",
            "links": {}
        }
    },
    "contracts/overview": {
        "prev": {
            "link": "docs/overview/vite",
            "title": "Vite",
            "desc": "The CMMV Vite Plugin allows Vite to seamlessly handle .cmmv files in the same wa..."
        },
        "next": {
            "link": "docs/contracts/validation",
            "title": "Validation",
            "desc": "CMMV supports automatic contract validation using the class-validator (NPM) modu..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/overview/vite\" />\n                    <link rel=\"next\" href=\"/docs/contracts/validation\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Contracts\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/overview/vite\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/contracts/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/contracts/validation\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Contracts</h1><a id=\"contracts\" title=\"Contracts\"></a>\n<p>CMMV’s contract system allows defining structured models that are used to auto-generate APIs, RPCs, and WebSocket routes. Contracts are defined using decorators applied to classes and their fields.</p>\n<p>Contracts are defined using the <code>@Contract</code> and <code>@ContractField</code> decorators. These decorators specify the contract name, file path for protocol buffers, and the type of the contract fields.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&quot;Task&quot;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&quot;src/protos/task.proto&quot;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&quot;task&quot;</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TasksContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({ \n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>, \n        <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span> \n    })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({ \n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>, \n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span> \n    })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({ \n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>, \n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span> \n    })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<h2>@Contract</h2><a id=\"contract\" title=\"@Contract\"></a>\n<p>Defines a contract class with the following options:</p>\n<ul>\n<li><strong>controllerName</strong>: Specifies the contract name.</li>\n<li><strong>controllerCustomPath</strong>: defines a custom path for the Rest controller.</li>\n<li><strong>protoPath</strong>: Specifies the path to the protocol buffer file.</li>\n<li><strong>protoPackage</strong>: defines the namespace of the contract generated in the protocol buffer.</li>\n<li><strong>directMessage</strong>: defines whether RPC calls are direct or whether a crud structure should be created.</li>\n<li><strong>generateController</strong>: defines whether or not transpilers should automatically generate drivers for this contract.</li>\n<li><strong>generateController</strong>: defines access to data that requires authentication.</li>\n</ul>\n<h2>@ContractField</h2><a id=\"contractfield\" title=\"@ContractField\"></a>\n<p>Defines a contract field with options such as:</p>\n<ul>\n<li><strong>protoType</strong>: Field type (<code>string</code>, <code>number</code>, etc.).</li>\n<li><strong>protoRepeated</strong>: defines whether the field is a list.</li>\n<li><strong>defaultValue</strong>: sets a default value when creating the record.</li>\n<li><strong>unique</strong>: Ensures uniqueness.</li>\n<li><strong>index</strong>: defines that the field in question is an index.</li>\n</ul>\n<h2>Supported Field Types</h2><a id=\"supported-field-types\" title=\"Supported Field Types\"></a>\n<p>CMMV supports a variety of field types:</p>\n<ul>\n<li><strong>Basic Types</strong>: <code>string</code>, <code>boolean</code>, <code>int</code>, <code>float</code>, <code>double</code>, <code>bytes</code>, <code>uuid</code></li>\n<li><strong>Numeric Types</strong>: <code>int32</code>, <code>int64</code>, <code>uint32</code>, <code>uint64</code>, <code>sint32</code>, <code>sint64</code>, <code>fixed32</code>, <code>fixed64</code>, <code>sfixed32</code>, <code>sfixed64</code></li>\n<li><strong>Advanced Types</strong>: <code>json</code>, <code>jsonb</code>, <code>simpleArray</code>, <code>simpleJson</code>, <code>any</code></li>\n<li><strong>Date and Time Types</strong>: <code>date</code>, <code>time</code>, <code>timestamp</code></li>\n</ul>\n<p>When the application starts, the system automatically generates controllers, services, and generic entities based on the contract definitions. This process simplifies development by ensuring that common components like CRUD operations are pre-built and ready to use. Each entity and service is created dynamically to match the contract specifications, allowing the developer to focus on custom logic without having to manually define the basic structures. This auto-generation enhances efficiency and consistency throughout the application.</p>\n<h2>HTTP Module</h2><a id=\"http-module\" title=\"HTTP Module\"></a>\n<p>To start a basic REST application using the <code>@cmmv/http</code> and <code>@cmmv/view</code> modules, follow these steps:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs\"\">npm install @cmmv/http @cmmv/view\n</code></pre>\n             </div>\n<p>Set up the application:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ExpressAdapter</span>, <span class=\"hljs-title class_\">ExpressModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/http&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ViewModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/view&quot;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">ExpressAdapter</span>,\n    <span class=\"hljs-attr\">modules</span>: [ \n        <span class=\"hljs-title class_\">ExpressModule</span>,\n        <span class=\"hljs-title class_\">ViewModule</span>\n    ]\n});\n</code></pre>\n             </div>\n<p>To correctly implement a basic CMMV application using either the Express or Fastify adapters, you can use the following structure in your <code>src/index.ts</code> file. The system supports both Express and Fastify for handling HTTP requests, and the correct adapter is selected in the configuration.</p>\n<p>By default, when you start the application, it will be hosted at <code>http://localhost:3000</code>. This can be easily modified by configuring the port and bind address in the application’s configuration file. The configuration settings allow you to change the host, port, and other related properties for the HTTP server. These options will be covered in more detail later when we show the configuration file setup, providing flexibility to adjust your server’s runtime environment.</p>\n<h2>Model</h2><a id=\"model\" title=\"Model\"></a>\n<p>The system will automatically generate the model for your entity in the following format:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">Task</span> {\n    id?: <span class=\"hljs-built_in\">any</span>;\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<p>This Task interface defines the structure of the model, including optional and required fields. The id is optional, and fields such as label, checked, and removed are mandatory with defined types. You can further customize or extend this model based on your application’s needs.</p>\n<p>This base interface, such as the Task interface, will be utilized by other modules, including the repository module, to define entities in the database. By sharing the same interface structure across modules, it ensures consistency and type safety throughout the application. For example, the repository module will use this Task interface to map and handle database operations, making it easier to maintain and scale your application while ensuring that the data model aligns across different layers of the system.</p>\n<h2>Controller</h2><a id=\"controller\" title=\"Controller\"></a>\n<p>The example contract provided above will automatically generate a controller at the path <code>/src/controllers/task.controller.ts</code>. This controller will be structured as follows:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n    \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Telemetry</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">Controller</span>, <span class=\"hljs-title class_\">Get</span>, <span class=\"hljs-title class_\">Post</span>, <span class=\"hljs-title class_\">Put</span>, <span class=\"hljs-title class_\">Delete</span>, \n    <span class=\"hljs-title class_\">Queries</span>, <span class=\"hljs-title class_\">Param</span>, <span class=\"hljs-title class_\">Body</span>, <span class=\"hljs-title class_\">Request</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/task.service&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Task</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../models/task.model&#x27;</span>;\n\n<span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&#x27;task&#x27;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskController</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">taskservice</span>: <span class=\"hljs-title class_\">TaskService</span></span>) {}\n\n    <span class=\"hljs-meta\">@Get</span>()\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-meta\">@Queries</span>() <span class=\"hljs-attr\">queries</span>: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>[]&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::GetAll&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getAll</span>(queries, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::GetAll&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getById</span>(<span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::GetById&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getById</span>(id, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::GetById&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Post</span>()\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Add&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">add</span>(item, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Add&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Put</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">update</span>(\n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, \n        <span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>, \n        <span class=\"hljs-meta\">@Request</span>() req\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Update&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">update</span>(id, item, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Update&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Delete</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">delete</span>(\n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, \n        <span class=\"hljs-meta\">@Request</span>() req\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;{ <span class=\"hljs-attr\">success</span>: <span class=\"hljs-built_in\">boolean</span>, <span class=\"hljs-attr\">affected</span>: <span class=\"hljs-built_in\">number</span> }&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Delete&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">delete</span>(id, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Delete&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n}\n</code></pre>\n             </div>\n<p>You can create your own custom controllers by simply informing the application of their existence during the creation process or by including them via modules. This allows for greater flexibility and customization in your application’s architecture. When you define custom controllers, you can register them within the application module during the application setup phase, ensuring that they integrate smoothly with the core framework, such as HTTP routing or WebSocket handling, while adhering to your project’s specific requirements.</p>\n<h2>Services</h2><a id=\"services\" title=\"Services\"></a>\n<p>Just like the controller, the service layer is also automatically generated by the system. In the absence of persistence modules such as the repository, a placeholder service is created, which temporarily stores records in memory while the application is online. This allows basic operations like adding, updating, and deleting data without a persistent store. Once a repository module is introduced, it overrides the default service, enabling direct interaction with a database, allowing data to be saved, queried, and managed efficiently from persistent storage.</p>\n<p>Here is an example of a service created using the repository module. This service interacts directly with the database using the repository pattern:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n    \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Telemetry</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractService</span>, <span class=\"hljs-title class_\">Service</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Repository</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/repository&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskEntity</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../entities/task.entity&#x27;</span>;\n\n<span class=\"hljs-meta\">@Service</span>(<span class=\"hljs-string\">&quot;task&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskService</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractService</span> {\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> name = <span class=\"hljs-string\">&quot;task&quot;</span>;\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(queries?: <span class=\"hljs-built_in\">any</span>, req?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>[]&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">find</span>();\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getById</span>(<span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, req?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::GetById&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">const</span> item = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">findOneBy</span>({ id });\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::GetById&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n\n        <span class=\"hljs-keyword\">if</span> (!item) \n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;Item not found&#x27;</span>);\n        \n        <span class=\"hljs-keyword\">return</span> item;\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Partial</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt;, req?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::Add&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">save</span>(item);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Add&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">update</span>(\n        <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Partial</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt;, req?: <span class=\"hljs-built_in\">any</span>\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::Update&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">update</span>(id, item);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">findOneBy</span>({ id });\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Update&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">delete</span>(\n        <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, req?: <span class=\"hljs-built_in\">any</span>\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;{ <span class=\"hljs-attr\">success</span>: <span class=\"hljs-built_in\">boolean</span>, <span class=\"hljs-attr\">affected</span>: <span class=\"hljs-built_in\">number</span> }&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::Delete&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">delete</span>(id);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Delete&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">success</span>: result.<span class=\"hljs-property\">affected</span> &gt; <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">affected</span>: result.<span class=\"hljs-property\">affected</span> };\n    }\n}\n</code></pre>\n             </div>\n<h2>More</h2><a id=\"more\" title=\"More\"></a>\n<p>The installation of additional modules, such as RPC, caching, and authentication, will extend the functionality of your application. Each module introduces new capabilities, like enabling remote procedure calls, enhancing security through authentication, or improving performance with caching. For more details, specific documentation for each module is available in the sidebar, where you’ll find comprehensive guides on how to integrate and implement these modules effectively within your application.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Contracts"
            ],
            "anchors": [
                {
                    "id": "contracts",
                    "label": "Contracts"
                },
                {
                    "id": "contract",
                    "label": "@Contract"
                },
                {
                    "id": "contractfield",
                    "label": "@ContractField"
                },
                {
                    "id": "supported-field-types",
                    "label": "Supported Field Types"
                },
                {
                    "id": "http-module",
                    "label": "HTTP Module"
                },
                {
                    "id": "model",
                    "label": "Model"
                },
                {
                    "id": "controller",
                    "label": "Controller"
                },
                {
                    "id": "services",
                    "label": "Services"
                },
                {
                    "id": "more",
                    "label": "More"
                }
            ],
            "link": "docs/2-Contracts/0-Overview.html",
            "links": {}
        }
    },
    "contracts/validation": {
        "prev": {
            "link": "docs/contracts/overview",
            "title": "Contracts",
            "desc": "CMMV’s contract system allows defining structured models that are used to auto-g..."
        },
        "next": {
            "link": "docs/contracts/transform",
            "title": "Transform",
            "desc": "In CMMV, you can transform data within contracts using the transform parameter i..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/contracts/overview\" />\n                    <link rel=\"next\" href=\"/docs/contracts/transform\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Validation\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/contracts/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/contracts/validation\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/contracts/transform\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Validation</h1><a id=\"validation\" title=\"Validation\"></a>\n<p>CMMV supports automatic contract validation using the <code>class-validator</code> (<a href=\"https://www.npmjs.com/package/class-validator\" target=\"_blank\" rel=\"nofollow\">NPM</a>) module. During data insertion and update operations, CMMV can apply validation rules to contract fields, ensuring that data meets the defined criteria before being processed. You can specify validation rules for each field by adding the validations parameter.</p>\n<p>These validations are executed automatically during <code>insert</code> and <code>update</code> operations, and the system will return errors if any validation fails.</p>\n<p>Below is an example of a <code>TasksContract</code>, where each field is validated using different rules:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&#x27;Task&#x27;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&#x27;src/protos/task.proto&#x27;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&#x27;task&#x27;</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TasksContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n        <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">validations</span>: [{ \n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;IsString&quot;</span>,\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid label&quot;</span>\n        }, { \n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;IsNotEmpty&quot;</span>,\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Label cannot be empty&quot;</span>\n        }]\n    })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">validations</span>: [{\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;IsBoolean&quot;</span>,\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid checked type&quot;</span>\n        }]\n    })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">validations</span>: [{\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;IsBoolean&quot;</span>,\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid removed type&quot;</span>\n        }]\n    })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<h2>Structure</h2><a id=\"structure\" title=\"Structure\"></a>\n<p>Each validation rule is configured using the <code>validations</code> parameter, which contains an array of validation objects. Each object can include the following properties:</p>\n<ul>\n<li><strong>type:</strong> The type of validation to apply, such as IsString, IsNotEmpty, IsBoolean, etc.</li>\n<li><strong>message (optional):</strong> A custom error message that will be shown when the validation fails.</li>\n<li><strong>context (optional):</strong> Additional context information that can be included with the validation.</li>\n</ul>\n<h2>Validation Types</h2><a id=\"validation-types\" title=\"Validation Types\"></a>\n<p><code>class-validator</code> provides a wide range of validation types that can be applied to contract fields. Some common types are:</p>\n<table>\n<thead>\n<tr>\n<th><strong>Decorator</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IsDefined</td>\n<td>Checks if value is defined (!== undefined, !== null). This is the only decorator that ignores skipMissingProperties option.</td>\n</tr>\n<tr>\n<td>IsOptional</td>\n<td>Checks if given value is empty (=== null, === undefined) and if so, ignores all the validators on the property.</td>\n</tr>\n<tr>\n<td>Equals</td>\n<td>Checks if value equals (“===”) comparison.</td>\n</tr>\n<tr>\n<td>NotEquals</td>\n<td>Checks if value not equal (“!==”) comparison.</td>\n</tr>\n<tr>\n<td>IsEmpty</td>\n<td>Checks if given value is empty (=== ‘’, === null, === undefined).</td>\n</tr>\n<tr>\n<td>IsNotEmpty</td>\n<td>Checks if given value is not empty (!== ‘’, !== null, !== undefined).</td>\n</tr>\n<tr>\n<td>IsIn</td>\n<td>Checks if value is in an array of allowed values.</td>\n</tr>\n<tr>\n<td>IsNotIn</td>\n<td>Checks if value is not in an array of disallowed values.</td>\n</tr>\n<tr>\n<td>IsBoolean</td>\n<td>Checks if a value is a boolean.</td>\n</tr>\n<tr>\n<td>IsDate</td>\n<td>Checks if the value is a date.</td>\n</tr>\n<tr>\n<td>IsString</td>\n<td>Checks if the value is a string.</td>\n</tr>\n<tr>\n<td>IsNumber</td>\n<td>Checks if the value is a number.</td>\n</tr>\n<tr>\n<td>IsInt</td>\n<td>Checks if the value is an integer number.</td>\n</tr>\n<tr>\n<td>IsArray</td>\n<td>Checks if the value is an array.</td>\n</tr>\n<tr>\n<td>IsEnum</td>\n<td>Checks if the value is a valid enum.</td>\n</tr>\n<tr>\n<td>IsDivisibleBy</td>\n<td>Checks if the value is a number that’s divisible by another.</td>\n</tr>\n<tr>\n<td>IsPositive</td>\n<td>Checks if the value is a positive number greater than zero.</td>\n</tr>\n<tr>\n<td>IsNegative</td>\n<td>Checks if the value is a negative number smaller than zero.</td>\n</tr>\n<tr>\n<td>Min</td>\n<td>Checks if the given number is greater than or equal to given number.</td>\n</tr>\n<tr>\n<td>Max</td>\n<td>Checks if the given number is less than or equal to given number.</td>\n</tr>\n<tr>\n<td>MinDate</td>\n<td>Checks if the value is a date that’s after the specified date.</td>\n</tr>\n<tr>\n<td>MaxDate</td>\n<td>Checks if the value is a date that’s before the specified date.</td>\n</tr>\n<tr>\n<td>IsBooleanString</td>\n<td>Checks if a string is a boolean (e.g. is “true” or “false” or “1”, “0”).</td>\n</tr>\n<tr>\n<td>IsDateString</td>\n<td>Alias for @IsISO8601().</td>\n</tr>\n<tr>\n<td>IsNumberString</td>\n<td>Checks if a string is a number.</td>\n</tr>\n<tr>\n<td>Contains</td>\n<td>Checks if the string contains the seed.</td>\n</tr>\n<tr>\n<td>NotContains</td>\n<td>Checks if the string not contains the seed.</td>\n</tr>\n<tr>\n<td>IsAlpha</td>\n<td>Checks if the string contains only letters (a-zA-Z).</td>\n</tr>\n<tr>\n<td>IsAlphanumeric</td>\n<td>Checks if the string contains only letters and numbers.</td>\n</tr>\n<tr>\n<td>IsDecimal</td>\n<td>Checks if the string is a valid decimal value.</td>\n</tr>\n<tr>\n<td>IsAscii</td>\n<td>Checks if the string contains ASCII chars only.</td>\n</tr>\n<tr>\n<td>IsBase32</td>\n<td>Checks if a string is base32 encoded.</td>\n</tr>\n<tr>\n<td>IsBase58</td>\n<td>Checks if a string is base58 encoded.</td>\n</tr>\n<tr>\n<td>IsBase64</td>\n<td>Checks if a string is base64 encoded.</td>\n</tr>\n<tr>\n<td>IsIBAN</td>\n<td>Checks if a string is an IBAN (International Bank Account Number).</td>\n</tr>\n<tr>\n<td>IsBIC</td>\n<td>Checks if a string is a BIC (Bank Identification Code) or SWIFT code.</td>\n</tr>\n<tr>\n<td>IsByteLength</td>\n<td>Checks if the string’s length (in bytes) falls in a range.</td>\n</tr>\n<tr>\n<td>IsCreditCard</td>\n<td>Checks if the string is a credit card.</td>\n</tr>\n<tr>\n<td>IsCurrency</td>\n<td>Checks if the string is a valid currency amount.</td>\n</tr>\n<tr>\n<td>IsEthereumAddress</td>\n<td>Checks if the string is an Ethereum address using basic regex. Does not validate address checksums.</td>\n</tr>\n<tr>\n<td>IsDataURI</td>\n<td>Checks if the string is a data uri format.</td>\n</tr>\n<tr>\n<td>IsEmail</td>\n<td>Checks if the string is an email.</td>\n</tr>\n<tr>\n<td>IsFQDN</td>\n<td>Checks if the string is a fully qualified domain name (e.g. <a href=\"http://domain.com\" target=\"_blank\" rel=\"nofollow\">domain.com</a>).</td>\n</tr>\n<tr>\n<td>IsHexColor</td>\n<td>Checks if the string is a hexadecimal color.</td>\n</tr>\n<tr>\n<td>IsISBN</td>\n<td>Checks if the string is an ISBN (version 10 or 13).</td>\n</tr>\n<tr>\n<td>IsUUID</td>\n<td>Checks if the string is a UUID (version 3, 4, 5 or all).</td>\n</tr>\n<tr>\n<td>ArrayContains</td>\n<td>Checks if array contains all values from the given array of values.</td>\n</tr>\n<tr>\n<td>ArrayNotEmpty</td>\n<td>Checks if given array is not empty.</td>\n</tr>\n<tr>\n<td>ArrayMinSize</td>\n<td>Checks if the array’s length is greater than or equal to the specified number.</td>\n</tr>\n<tr>\n<td>@Allow()</td>\n<td>Prevents stripping off the property when no other constraint is specified for it.</td>\n</tr>\n</tbody>\n</table>\n<p>When a contract is used in insert or update operations, CMMV automatically converts the incoming data to class instances, applies any transformations, and performs the validation according to the rules defined in the contract. If any field does not meet the validation criteria, the process is halted, and a list of validation errors is returned.</p>\n<p>This process ensures that data is always compliant with the rules defined in the contract, protecting the integrity of the system.</p>\n<h2>Validation in Models</h2><a id=\"validation-in-models\" title=\"Validation in Models\"></a>\n<p>When validations are defined in the contract fields, the CMMV framework automatically adds the corresponding class-validator decorators to the generated model. These decorators perform runtime validation to ensure the data adheres to the defined rules. The model generation process inserts the correct validation decorators above each field, along with any specified validation options, such as custom error messages.</p>\n<p>Here’s an example of how to define a contract with validations:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&#x27;Task&#x27;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&#x27;src/protos/task.proto&#x27;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&#x27;task&#x27;</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TasksContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n        <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">validations</span>: [{ \n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;IsString&quot;</span>,\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid label&quot;</span>\n        }, { \n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;IsNotEmpty&quot;</span>,\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid label&quot;</span>\n        }]\n    })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">validations</span>: [{\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;IsBoolean&quot;</span>,\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid checked type&quot;</span>\n        }]\n    })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">validations</span>: [{\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;IsBoolean&quot;</span>,\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid removed type&quot;</span>\n        }]\n    })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<p>When the contract is processed by the framework, the following model is automatically generated. The decorators from <code>class-validator</code> are added to each field to perform validation according to the specified rules:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">IsString</span>, <span class=\"hljs-title class_\">IsNotEmpty</span>, <span class=\"hljs-title class_\">IsBoolean</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-validator&#x27;</span>;\n        \n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ITask</span> {\n    id?: <span class=\"hljs-built_in\">any</span>;\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Task</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">ITask</span> {\n    id?: <span class=\"hljs-built_in\">any</span>;\n\n    <span class=\"hljs-meta\">@IsString</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid label&quot;</span> })\n    <span class=\"hljs-meta\">@IsNotEmpty</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid label&quot;</span> })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>\n\n    <span class=\"hljs-meta\">@IsBoolean</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid checked type&quot;</span> })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span> = <span class=\"hljs-literal\">false</span>;\n\n    <span class=\"hljs-meta\">@IsBoolean</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid removed type&quot;</span> })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span> = <span class=\"hljs-literal\">false</span>;\n}\n</code></pre>\n             </div>\n<p>This approach ensures that data is validated correctly and that the model is generated dynamically based on the contract definitions, making the framework highly adaptable and efficient for managing validations across various models.</p>\n<h2>Validation in Services</h2><a id=\"validation-in-services\" title=\"Validation in Services\"></a>\n<p>In addition to the generated model, services also undergo changes to ensure that the data being input is properly validated before it’s processed or stored. Both the service generated by <code>@cmmv/http</code> and the repository implementation from <code>@cmmv/repository</code> include built-in validation mechanisms using the <code>class-validator</code> module.</p>\n<p>This validation ensures that all incoming data adheres to the rules specified in the contract fields before any database operations or further business logic are executed.</p>\n<p>Here’s an example of the add function in the service that is generated by the repository:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">ITask</span>, req?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt; {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-title function_\">async</span> (resolve, reject) =&gt; {\n        <span class=\"hljs-keyword\">try</span>{\n            <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::Add&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n                    \n            <span class=\"hljs-comment\">// Convert plain object to class and validate the data</span>\n            <span class=\"hljs-keyword\">const</span> newItem = <span class=\"hljs-title function_\">plainToClass</span>(<span class=\"hljs-title class_\">Task</span>, item, { \n                <span class=\"hljs-attr\">exposeUnsetFields</span>: <span class=\"hljs-literal\">true</span>,\n                <span class=\"hljs-attr\">enableImplicitConversion</span>: <span class=\"hljs-literal\">true</span>\n            }); \n\n            <span class=\"hljs-comment\">// Validate the newItem with class-validator</span>\n            <span class=\"hljs-keyword\">const</span> errors = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">validate</span>(newItem, { \n                <span class=\"hljs-attr\">skipMissingProperties</span>: <span class=\"hljs-literal\">true</span> \n            });\n            \n            <span class=\"hljs-keyword\">if</span> (errors.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>) {\n                <span class=\"hljs-comment\">// If validation fails, return the errors</span>\n                <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Add&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n                <span class=\"hljs-title function_\">reject</span>(errors);\n            } \n            <span class=\"hljs-keyword\">else</span> {                   \n                <span class=\"hljs-comment\">// If validation passes, proceed with the repository</span>\n                <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-property\">insert</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt;(\n                    <span class=\"hljs-title class_\">TaskEntity</span>, newItem\n                );\n                <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Add&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n                <span class=\"hljs-title function_\">resolve</span>(result);                    \n            }\n        }\n        <span class=\"hljs-keyword\">catch</span>(e){ \n            <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Add&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(e); \n            <span class=\"hljs-title function_\">reject</span>(e);\n        }\n    });\n}\n</code></pre>\n             </div>\n<ul>\n<li>\n<p><strong>Validation Step:</strong> Before performing any database operations, the input data is converted into a class instance using <code>plainToClass</code> and then validated using <code>validate</code> from <code>class-validator</code>.</p>\n</li>\n<li>\n<p><strong>Error Handling:</strong> If validation fails, the process halts, and the errors are returned to the caller without proceeding to the database operation.</p>\n</li>\n<li>\n<p><strong>Telemetry Tracking:</strong> Telemetry functions track the beginning and end of the <code>add</code> operation, ensuring that all actions are monitored for performance and logging.</p>\n</li>\n<li>\n<p><strong>Repository Insert:</strong> Once the validation passes, the <code>Repository.insert</code> method inserts the validated data into the database.</p>\n</li>\n</ul>\n<p>This mechanism ensures that all input data is validated in a consistent manner across the system, making it easy to manage and enforce validation rules at the service level, guaranteeing data integrity and reducing the risk of invalid data being stored or processed.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Contracts"
            ],
            "anchors": [
                {
                    "id": "validation",
                    "label": "Validation"
                },
                {
                    "id": "structure",
                    "label": "Structure"
                },
                {
                    "id": "validation-types",
                    "label": "Validation Types"
                },
                {
                    "id": "validation-in-models",
                    "label": "Validation in Models"
                },
                {
                    "id": "validation-in-services",
                    "label": "Validation in Services"
                }
            ],
            "link": "docs/2-Contracts/1-Validation.html",
            "links": {}
        }
    },
    "contracts/transform": {
        "prev": {
            "link": "docs/contracts/validation",
            "title": "Validation",
            "desc": "CMMV supports automatic contract validation using the class-validator (NPM) modu..."
        },
        "next": {
            "link": "docs/contracts/serialization",
            "title": "Serialization",
            "desc": "Serialization and deserialization in a project using class-transformer are cruci..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/contracts/validation\" />\n                    <link rel=\"next\" href=\"/docs/contracts/serialization\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Transform\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/contracts/validation\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/contracts/transform\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/contracts/serialization\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Transform</h1><a id=\"transform\" title=\"Transform\"></a>\n<p>In CMMV, you can <code>transform</code> data within contracts using the transform parameter in the field decorator. The system utilizes the <code>class-transformer</code> (<a href=\"https://www.npmjs.com/package/class-transformer\" target=\"_blank\" rel=\"nofollow\">NPM</a>) library to handle these transformations. This is particularly useful for converting input data into the appropriate format for entity and model classes, which are necessary for interactions with repositories, among other functionalities.</p>\n<ul>\n<li><strong><code>exclude:</code></strong> Removes the field during serialization or deserialization.</li>\n<li><strong><code>toClassOnly:</code></strong> Ensures that the transformation is only applied when converting to a class instance (useful for data integrity).</li>\n<li><strong><code>transform:</code></strong> Allows for custom transformation logic such as encrypting, hashing, adding metadata, or converting dates.</li>\n</ul>\n<p>These transforms enable seamless handling of complex data formats like hashing passwords, generating timestamps, and converting or formatting incoming/outgoing data. Below are a few examples:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> crypto <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;crypto&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&#x27;User&#x27;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&#x27;src/protos/user.proto&#x27;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&#x27;user&#x27;</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UsersContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n        <span class=\"hljs-attr\">validations</span>: [<span class=\"hljs-string\">&quot;IsString&quot;</span>],\n        <span class=\"hljs-comment\">// Example of simple transformation</span>\n        <span class=\"hljs-attr\">transform</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">{ value }</span>) =&gt;</span> value.<span class=\"hljs-title function_\">toUpperCase</span>(),  \n    })\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n        <span class=\"hljs-comment\">// This field will be excluded in output</span>\n        <span class=\"hljs-attr\">exclude</span>: <span class=\"hljs-literal\">false</span>,  \n        <span class=\"hljs-comment\">// Will be processed only when converting to class</span>\n        <span class=\"hljs-attr\">toClassOnly</span>: <span class=\"hljs-literal\">true</span>,  \n        <span class=\"hljs-attr\">transform</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">{ value }</span>) =&gt;</span> \n            crypto.<span class=\"hljs-title function_\">createHash</span>(<span class=\"hljs-string\">&#x27;sha256&#x27;</span>)\n            .<span class=\"hljs-title function_\">update</span>(value).<span class=\"hljs-title function_\">digest</span>(<span class=\"hljs-string\">&#x27;hex&#x27;</span>),  <span class=\"hljs-comment\">// Hash the value</span>\n    })\n    <span class=\"hljs-attr\">password</span>: <span class=\"hljs-built_in\">string</span>;\n}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>Data Security:</strong> You can easily encrypt or hash sensitive fields, such as passwords.</li>\n<li><strong>Data Formatting:</strong> Automatically format dates, strings, or numbers before they are stored in a repository.</li>\n<li><strong>Flexibility:</strong> You have full control over how input data is transformed, ensuring compatibility with backend services and databases.</li>\n</ul>\n<p>These transforms ensure that your contract and data structure remain flexible while allowing control over how data is processed during the request-response lifecycle.</p>\n<h2>Input Data</h2><a id=\"input-data\" title=\"Input Data\"></a>\n<p>Assume you have the following plain JavaScript object as input data:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-json\" lang=\"json\"\"><span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;john doe&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;password&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;mypassword&quot;</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n             </div>\n<p>Here’s what happens when plainToClass(UsersContract, input) is applied:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">{\n    <span class=\"hljs-comment\">// Transformed to uppercase as specified</span>\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;JOHN DOE&quot;</span>,\n    <span class=\"hljs-comment\">// Not included in output due to `exclude` and `toClassOnly` options   </span>\n    <span class=\"hljs-attr\">password</span>: <span class=\"hljs-literal\">undefined</span> \n}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>Name Transformation:</strong></li>\n<li>The <code>name</code> field was converted to uppercase due to the <code>transform</code> function applied: <code>value.toUpperCase()</code>.</li>\n<li><strong>Password Transformation:</strong></li>\n<li>The <code>password</code> field was hashed using SHA-256, but it was excluded from the resulting class because of the <code>exclude: true</code> and <code>toClassOnly: true</code> options. This means the password is hashed when converting to the class instance, but it’s not included in the serialized output.</li>\n</ul>\n<p><strong>Example Without Exclude</strong></p>\n<p>If we remove the <code>exclude: true</code> option for password, it will still be hashed but included in the output:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">{\n    <span class=\"hljs-comment\">// Transformed to uppercase</span>\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;JOHN DOE&quot;</span>,   \n    <span class=\"hljs-comment\">// Hashed password</span>\n    <span class=\"hljs-attr\">password</span>: <span class=\"hljs-string\">&quot;5e884898da28047151d0e56f...&quot;</span>  \n}\n</code></pre>\n             </div>\n<p>In this case, the <code>transform</code> function is applied, and the password is hashed, but it is not excluded from the output anymore. The <code>toClassOnly: true</code> ensures the transformation is only applied when converting to a class.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Contracts"
            ],
            "anchors": [
                {
                    "id": "transform",
                    "label": "Transform"
                },
                {
                    "id": "input-data",
                    "label": "Input Data"
                }
            ],
            "link": "docs/2-Contracts/2-Transform.html",
            "links": {}
        }
    },
    "contracts/serialization": {
        "prev": {
            "link": "docs/contracts/transform",
            "title": "Transform",
            "desc": "In CMMV, you can transform data within contracts using the transform parameter i..."
        },
        "next": {
            "link": "docs/http/overview",
            "title": "Overview",
            "desc": "The CMMV framework introduces its own default server implementation, @cmmv/serve..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/contracts/transform\" />\n                    <link rel=\"next\" href=\"/docs/http/overview\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Serialization\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/contracts/transform\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/contracts/serialization\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/http/overview\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Serialization</h1><a id=\"serialization\" title=\"Serialization\"></a>\n<p>Serialization and deserialization in a project using <code>class-transformer</code> are crucial for converting JavaScript objects into specific class instances and vice versa. In the example above, the <code>Task</code> class, automatically generated by <code>@cmmv/core</code>, can be serialized and validated, ensuring the application processes data safely and with correct typing.</p>\n<p>The goal of serialization is to transform data into appropriate class instances, ensuring the objects being manipulated have the correct properties and types. We use the <code>class-transformer</code> package for serializing and deserializing objects and <code>class-validator</code> to validate the data.</p>\n<p>Here’s an implementation of a <code>Task</code> model that represents a task and uses <code>class-validator</code> and <code>class-transformer</code> to ensure proper serialization and validation of fields:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">IsString</span>, <span class=\"hljs-title class_\">IsNotEmpty</span>, <span class=\"hljs-title class_\">IsBoolean</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-validator&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { plainToClass, classToPlain } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-transformer&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">ITask</span> {\n    id?: <span class=\"hljs-built_in\">any</span>;\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Task</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">ITask</span> {\n    id?: <span class=\"hljs-built_in\">any</span>;\n\n    <span class=\"hljs-meta\">@IsString</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid label&#x27;</span> })\n    <span class=\"hljs-meta\">@IsNotEmpty</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid label&#x27;</span> })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@IsBoolean</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid checked type&#x27;</span> })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span> = <span class=\"hljs-literal\">false</span>;\n\n    <span class=\"hljs-meta\">@IsBoolean</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid removed type&#x27;</span> })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span> = <span class=\"hljs-literal\">false</span>;\n\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">partial</span>: <span class=\"hljs-title class_\">Partial</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt;</span>) {\n        <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">assign</span>(<span class=\"hljs-variable language_\">this</span>, partial);\n    }\n}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong><code>plainToInstance:</code></strong> Converts plain objects (like JSON) into class instances, transforming a received JSON object into an instance of the <code>Task</code> class.</li>\n<li><strong><code>instanceToPlain:</code></strong> Converts a class instance back into a plain object for serialization or sending in an HTTP response.</li>\n</ul>\n<p>Here’s how we convert a plain object representing a task into an instance of the <code>Task</code> class using <code>plainToInstance</code>:</p>\n<h2>Deserializing</h2><a id=\"deserializing\" title=\"Deserializing\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { plainToInstance } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-transformer&#x27;</span>;\n\n<span class=\"hljs-comment\">// Plain object</span>\n<span class=\"hljs-keyword\">const</span> plainTask = {\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Complete report&#x27;</span>,\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-literal\">false</span>,\n};\n\n<span class=\"hljs-comment\">// Convert to a Task class instance</span>\n<span class=\"hljs-keyword\">const</span> taskInstance = <span class=\"hljs-title function_\">plainToInstance</span>(<span class=\"hljs-title class_\">Task</span>, plainTask);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(taskInstance); <span class=\"hljs-comment\">// Instance of Task</span>\n</code></pre>\n             </div>\n<h2>Serializing</h2><a id=\"serializing\" title=\"Serializing\"></a>\n<p>When the application needs to send data to a database or an API, it can serialize the class instance back into a plain object using <code>instanceToPlain</code>.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { instanceToPlain } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-transformer&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> taskInstance = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Task</span>({ <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;Complete report&#x27;</span>, <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-literal\">true</span> });\n\n<span class=\"hljs-comment\">// Convert to a plain object</span>\n<span class=\"hljs-keyword\">const</span> plainTask = <span class=\"hljs-title function_\">instanceToPlain</span>(taskInstance);\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(plainTask); <span class=\"hljs-comment\">// Plain object</span>\n</code></pre>\n             </div>\n<h2>Data Validation</h2><a id=\"data-validation\" title=\"Data Validation\"></a>\n<p>Use validate from <code>class-validator</code> to check if the data is valid:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { validate } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-validator&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> taskInstance = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Task</span>({ <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-string\">&#x27;true&#x27;</span> });\n\n<span class=\"hljs-title function_\">validate</span>(taskInstance).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">errors</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (errors.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Validation failed. Errors: &#x27;</span>, errors);\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Validation succeeded&#x27;</span>);\n    }\n});\n</code></pre>\n             </div>\n<p>By using <code>class-transformer</code> and <code>class-validator</code>, you ensure that class instances are properly validated and easily converted between plain objects and class instances. This provides a strong validation layer and simplifies data handling, especially for APIs and databases.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Contracts"
            ],
            "anchors": [
                {
                    "id": "serialization",
                    "label": "Serialization"
                },
                {
                    "id": "deserializing",
                    "label": "Deserializing"
                },
                {
                    "id": "serializing",
                    "label": "Serializing"
                },
                {
                    "id": "data-validation",
                    "label": "Data Validation"
                }
            ],
            "link": "docs/2-Contracts/3-Serialization.html",
            "links": {}
        }
    },
    "http/overview": {
        "prev": {
            "link": "docs/contracts/serialization",
            "title": "Serialization",
            "desc": "Serialization and deserialization in a project using class-transformer are cruci..."
        },
        "next": {
            "link": "docs/http/controllers",
            "title": "Controllers",
            "desc": "The @cmmv/http module automatically generates REST controllers with standard CRU..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/contracts/serialization\" />\n                    <link rel=\"next\" href=\"/docs/http/controllers\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Overview\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/contracts/serialization\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/http/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/http/controllers\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Overview</h1><a id=\"overview\" title=\"Overview\"></a>\n<p>The CMMV framework introduces its own default server implementation, <code>@cmmv/server</code>, which offers superior performance and seamless integration with the overall CMMV ecosystem. This server is highly optimized and designed to provide built-in support for critical features such as compression, routing, request handling, static file serving, security, and middleware management. Because <code>@cmmv/server</code> is developed as a core part of CMMV, it allows for better control over feature enhancements, bug fixes, and performance improvements, making it the recommended option for most applications.</p>\n<p>The server is flexible and shares many of the same APIs and capabilities as <a href=\"https://expressjs.com/\" target=\"_blank\" rel=\"nofollow\">Express</a> and <a href=\"https://fastify.dev/\" target=\"_blank\" rel=\"nofollow\">Fastify</a>, which ensures an easy transition if you’re familiar with those frameworks. However, <code>@cmmv/server</code> also includes enhanced integration with CMMV’s contracts, modules, and services, providing a more consistent developer experience across different layers of the application.</p>\n<p>Key Features:</p>\n<ul>\n<li><strong>HTTP and HTTPS Support:</strong> The adapter can initialize servers using both HTTP and HTTPS based on configuration.</li>\n<li><strong>Middleware Management:</strong> Preconfigured middlewares such as compression, CORS, Helmet (security), and session handling are included.</li>\n<li><strong>Static File Serving:</strong> Automatically serves static files from the /public directory.</li>\n<li><strong>View Engine:</strong> Supports rendering HTML views using CMMVRenderer, a custom template engine with security options like CSP.</li>\n<li><strong>Controller Registration:</strong> Automatically registers controllers by scanning the ControllerRegistry and mapping HTTP methods (GET, POST, PUT, DELETE) to paths.</li>\n<li><strong>Session and Security Headers:</strong> Adds session management using express-session and security headers like Content Security Policy, XSS Protection, and HSTS.</li>\n<li><strong>Request Tracking:</strong> Each request is assigned a unique requestId for telemetry and monitoring.</li>\n<li><strong>Open Connection Tracking:</strong> Tracks and closes open connections when the server shuts down.</li>\n<li><strong>Error Handling:</strong> Captures and logs errors during request processing, providing detailed error messages.</li>\n</ul>\n<h2>Default Server</h2><a id=\"default-server\" title=\"Default Server\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DefaultAdapter</span>, <span class=\"hljs-title class_\">DefaultHTTPModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">DefaultAdapter</span>,\n    <span class=\"hljs-attr\">modules</span>: [<span class=\"hljs-title class_\">DefaultHTTPModule</span>, ...],\n    <span class=\"hljs-attr\">services</span>: [...],\n    <span class=\"hljs-attr\">contracts</span>: [...],\n});\n</code></pre>\n             </div>\n<h2>Express</h2><a id=\"express\" title=\"Express\"></a>\n<p>In addition to the default server, CMMV also supports Express and Fastify as alternative HTTP adapters, providing flexibility for developers who prefer or need to use these popular frameworks. Both Express and Fastify adapters are fully integrated into the CMMV ecosystem and can be used by simply switching the adapter in the application configuration.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ExpressAdapter</span>, <span class=\"hljs-title class_\">ExpressModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">ExpressAdapter</span>,\n    <span class=\"hljs-attr\">modules</span>: [<span class=\"hljs-title class_\">ExpressModule</span>, ...],\n    <span class=\"hljs-attr\">services</span>: [...],\n    <span class=\"hljs-attr\">contracts</span>: [...],\n});\n</code></pre>\n             </div>\n<p>The adapter registers all controllers automatically from the ControllerRegistry. It matches the controller’s routes to the corresponding HTTP methods (GET, POST, etc.), and processes middleware defined at the controller level.</p>\n<h2>Fastify</h2><a id=\"fastify\" title=\"Fastify\"></a>\n<p>The Fastify Adapter in CMMV provides an alternative to the Express Adapter, allowing for lightweight, high-performance HTTP handling using Fastify’s framework. This adapter integrates key middleware like compression, CORS, helmet for security, and static file serving. It automatically registers controllers and manages the lifecycle of incoming requests. The Fastify Adapter follows the same structure as the Express Adapter, supporting session management and content rendering, while offering a faster, more optimized environment.</p>\n<p>Both Express and Fastify adapters are natively supported, and custom HTTP adapters can be created by extending the AbstractHttpAdapter.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">FastifyAdapter</span>, <span class=\"hljs-title class_\">FastifyModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">FastifyAdapter</span>,\n    <span class=\"hljs-attr\">modules</span>: [<span class=\"hljs-title class_\">FastifyModule</span>, ...],\n    <span class=\"hljs-attr\">services</span>: [...],\n    <span class=\"hljs-attr\">contracts</span>: [...],\n});\n</code></pre>\n             </div>\n<h2>Middlewares</h2><a id=\"middlewares\" title=\"Middlewares\"></a>\n<p>The httpMiddlewares configuration allows you to inject custom middleware into the HTTP adapter (such as Express or Fastify) during the application’s initialization. This provides additional flexibility by letting you apply any middleware functions to handle tasks like logging, request validation, or security checks.</p>\n<p>To use this feature, define an array of middleware functions in the httpMiddlewares property when creating the application.</p>\n<p>Here’s an example where we add the morgan logging middleware to an Express-based CMMV application:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ExpressAdapter</span>, <span class=\"hljs-title class_\">ExpressModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/http&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ViewModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/view&quot;</span>;\n<span class=\"hljs-keyword\">import</span> morgan <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;morgan&quot;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">ExpressAdapter</span>,\n    <span class=\"hljs-attr\">httpMiddlewares</span>: [\n        <span class=\"hljs-title function_\">morgan</span>(<span class=\"hljs-string\">&#x27;dev&#x27;</span>), \n    ],\n    <span class=\"hljs-attr\">modules</span>: [ \n        <span class=\"hljs-title class_\">ExpressModule</span>,\n        <span class=\"hljs-title class_\">ViewModule</span>\n    ]\n});\n</code></pre>\n             </div>\n<p>In this example, the morgan middleware is used to log incoming HTTP requests in the ‘dev’ format. This middleware is passed into the httpMiddlewares configuration, which applies it automatically during the application’s initialization.</p>\n<ul>\n<li>The httpMiddlewares array can include any number of middlewares, and each will be applied in the order they are provided.</li>\n<li>Make sure to import any custom middleware before passing it into the configuration.</li>\n</ul>\n<p>This configuration helps expand the capabilities of your application by allowing you to use any custom or third-party middleware that your chosen HTTP adapter (like Express or Fastify) supports.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "HTTP"
            ],
            "anchors": [
                {
                    "id": "overview",
                    "label": "Overview"
                },
                {
                    "id": "default-server",
                    "label": "Default Server"
                },
                {
                    "id": "express",
                    "label": "Express"
                },
                {
                    "id": "fastify",
                    "label": "Fastify"
                },
                {
                    "id": "middlewares",
                    "label": "Middlewares"
                }
            ],
            "link": "docs/4-HTTP/0-Overview.html",
            "links": {}
        }
    },
    "http/controllers": {
        "prev": {
            "link": "docs/http/overview",
            "title": "Overview",
            "desc": "The CMMV framework introduces its own default server implementation, @cmmv/serve..."
        },
        "next": {
            "link": "docs/http/services",
            "title": "Services",
            "desc": "In @cmmv/core, services play a crucial role in managing business logic, serving..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/http/overview\" />\n                    <link rel=\"next\" href=\"/docs/http/services\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Controllers\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/http/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/http/controllers\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/http/services\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Controllers</h1><a id=\"controllers\" title=\"Controllers\"></a>\n<p>The <code>@cmmv/http</code> module automatically generates REST controllers with standard CRUD operations based on defined contracts. However, you can create custom controllers using a syntax similar to NestJS, with decorators for defining routes and methods. Unlike NestJS, CMMV does not use complex dependency injection. Instead, services like databases, queues, and cache must be implemented as singletons.</p>\n<p>Here’s an example of a custom controller:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> fs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;fs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;path&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">Controller</span>, <span class=\"hljs-title class_\">Get</span>, <span class=\"hljs-title class_\">Param</span>, \n    <span class=\"hljs-title class_\">Response</span>, <span class=\"hljs-title class_\">ServiceRegistry</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DocsService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./docs.service&#x27;</span>;\n\n<span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&quot;docs&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">DocsController</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">docsService</span>: <span class=\"hljs-title class_\">DocsService</span></span>){}\n\n\t<span class=\"hljs-meta\">@Get</span>()\n\t<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">index</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Response</span>() res</span>) {\t\t\n\t\tres.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&quot;views/docs/index&quot;</span>, {\n\t\t\t<span class=\"hljs-attr\">docs</span>: <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">docsService</span>.<span class=\"hljs-title function_\">getDocsStrutucture</span>(),\n\t\t\t<span class=\"hljs-attr\">services</span>: <span class=\"hljs-title class_\">ServiceRegistry</span>.<span class=\"hljs-title function_\">getServicesArr</span>()\n\t\t});\n\t}\n\n\t<span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&quot;:item&quot;</span>)\n\t<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getDoc</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&quot;item&quot;</span>) <span class=\"hljs-attr\">item</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Response</span>() res</span>) {\n\t\t<span class=\"hljs-keyword\">const</span> file = path.<span class=\"hljs-title function_\">resolve</span>(<span class=\"hljs-string\">&quot;./docs/&quot;</span> + item + <span class=\"hljs-string\">&quot;.html&quot;</span>);\n\t\t<span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">docsService</span>.<span class=\"hljs-title function_\">getDocsStrutucture</span>(file);\n\n\t\tres.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&quot;views/docs/index&quot;</span>, {\n\t\t\t<span class=\"hljs-attr\">docs</span>: data,\n\t\t\t<span class=\"hljs-attr\">services</span>: <span class=\"hljs-title class_\">ServiceRegistry</span>.<span class=\"hljs-title function_\">getServicesArr</span>()\n\t\t});\n\t}\n}\n</code></pre>\n             </div>\n<h2>@Controller(prefix: string)</h2><a id=\"controllerprefix-string\" title=\"@Controller(prefix: string)\"></a>\n<p>Defines the controller and the route prefix for all its methods. The prefix parameter is optional, but it defines a base URL for the controller’s routes.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&#x27;tasks&#x27;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskController</span> { ... }\n</code></pre>\n             </div>\n<h2>@Request() / @Req()</h2><a id=\"request--req\" title=\"@Request() / @Req()\"></a>\n<p>Binds the entire request object to the method parameter.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getRequestData</span>(<span class=\"hljs-meta\">@Request</span>() <span class=\"hljs-attr\">req</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">any</span>&gt; {\n    <span class=\"hljs-keyword\">return</span> req;\n}\n</code></pre>\n             </div>\n<h2>@Response() / @Res()</h2><a id=\"response--res\" title=\"@Response() / @Res()\"></a>\n<p>Binds the entire response object to the method parameter, useful for handling custom responses.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">customResponse</span>(<span class=\"hljs-meta\">@Response</span>() <span class=\"hljs-attr\">res</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">void</span>&gt; {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Custom Response&#x27;</span>);\n}\n</code></pre>\n             </div>\n<h2>@Next()</h2><a id=\"next\" title=\"@Next()\"></a>\n<p>Binds the next function in middleware to the method parameter, useful for middleware chaining.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">handleRequest</span>(<span class=\"hljs-meta\">@Next</span>() <span class=\"hljs-attr\">next</span>: <span class=\"hljs-title class_\">Function</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">void</span>&gt; {\n    <span class=\"hljs-title function_\">next</span>();\n}\n</code></pre>\n             </div>\n<h2>@Get(path?: string)</h2><a id=\"getpath-string\" title=\"@Get(path?: string)\"></a>\n<p>Maps an HTTP GET request to a specific method. The optional path argument can define the route, or it will default to the controller’s base route.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n<span class=\"hljs-title function_\">getTaskById</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">getById</span>(id);\n}\n</code></pre>\n             </div>\n<h2>@Post(path?: string)</h2><a id=\"postpath-string\" title=\"@Post(path?: string)\"></a>\n<p>Handles HTTP POST requests. The @Body decorator can be used to access the request body and pass it to the method.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Post</span>()\n<span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">task</span>: <span class=\"hljs-built_in\">any</span></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">add</span>(task);\n}\n</code></pre>\n             </div>\n<h2>@Put(path?: string)</h2><a id=\"putpath-string\" title=\"@Put(path?: string)\"></a>\n<p>Maps an HTTP PUT request to update existing resources. Like @Post, it can accept data through the request body.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Put</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n<span class=\"hljs-title function_\">updateTask</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">task</span>: <span class=\"hljs-built_in\">any</span></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">update</span>(id, task);\n}\n</code></pre>\n             </div>\n<h2>@Delete(path?: string)</h2><a id=\"deletepath-string\" title=\"@Delete(path?: string)\"></a>\n<p>Handles DELETE requests for removing resources by ID.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Delete</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n<span class=\"hljs-title function_\">deleteTask</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">delete</span>(id);\n}\n</code></pre>\n             </div>\n<h2>@Param(param: string)</h2><a id=\"paramparam-string\" title=\"@Param(param: string)\"></a>\n<p>Used to extract parameters from the route. In the example, @Param(‘id’) extracts the id from the request’s route.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n<span class=\"hljs-title function_\">getTaskById</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">getById</span>(id);\n}\n</code></pre>\n             </div>\n<h2>@Body()</h2><a id=\"body\" title=\"@Body()\"></a>\n<p>This decorator extracts the request body and makes it available in the method. It’s commonly used with @Post and @Put for creating and updating data.</p>\n<h2>@Query()</h2><a id=\"query\" title=\"@Query()\"></a>\n<p>Extracts query parameters from the request.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-title function_\">getTasks</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Query</span>(<span class=\"hljs-string\">&#x27;status&#x27;</span>) <span class=\"hljs-attr\">status</span>: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">getByStatus</span>(status);\n}\n</code></pre>\n             </div>\n<h2>@Queries()</h2><a id=\"queries\" title=\"@Queries()\"></a>\n<p>Binds all query parameters to the method parameter.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-meta\">@Queries</span>() <span class=\"hljs-attr\">queries</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>[]&gt; {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">getAll</span>(queries);\n}\n</code></pre>\n             </div>\n<h2>@Header(headerName: string)</h2><a id=\"headerheadername-string\" title=\"@Header(headerName: string)\"></a>\n<p>Binds a specific header value to the method parameter.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">checkHeader</span>(<span class=\"hljs-meta\">@Header</span>(<span class=\"hljs-string\">&#x27;Authorization&#x27;</span>) <span class=\"hljs-attr\">auth</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">boolean</span>&gt; {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">authService</span>.<span class=\"hljs-title function_\">verifyToken</span>(auth);\n}\n</code></pre>\n             </div>\n<h2>@Headers()</h2><a id=\"headers\" title=\"@Headers()\"></a>\n<p>Binds all headers to the method parameter.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getHeaders</span>(<span class=\"hljs-meta\">@Headers</span>() <span class=\"hljs-attr\">headers</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">any</span>&gt; {\n    <span class=\"hljs-keyword\">return</span> headers;\n}\n</code></pre>\n             </div>\n<h2>@Session()</h2><a id=\"session\" title=\"@Session()\"></a>\n<p>Extracts session data and binds it to the method parameter.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getSessionData</span>(<span class=\"hljs-meta\">@Session</span>() <span class=\"hljs-attr\">session</span>: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">any</span>&gt; {\n    <span class=\"hljs-keyword\">return</span> session;\n}\n</code></pre>\n             </div>\n<h2>@Ip()</h2><a id=\"ip\" title=\"@Ip()\"></a>\n<p>Binds the client’s IP address to the method parameter.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getClientIp</span>(<span class=\"hljs-meta\">@Ip</span>() <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">string</span>&gt; {\n    <span class=\"hljs-keyword\">return</span> ip;\n}\n</code></pre>\n             </div>\n<h2>@HostParam()</h2><a id=\"hostparam\" title=\"@HostParam()\"></a>\n<p>Extracts the host information from the request.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Get</span>()\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getHost</span>(<span class=\"hljs-meta\">@HostParam</span>() <span class=\"hljs-attr\">host</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-built_in\">string</span>&gt; {\n    <span class=\"hljs-keyword\">return</span> host;\n}\n</code></pre>\n             </div>\n<h1>Getting up and running</h1><a id=\"getting-up-and-running\" title=\"Getting up and running\"></a>\n<p>To make the controller functional, it needs to be added to a module and called in the application. The process involves creating a module, registering the controller, and ensuring the module is used during application initialization.</p>\n<p>Here is an example of registering a controller inside a module:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Module</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskController</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./controllers/task.controller&#x27;</span>;\n    \n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">let</span> <span class=\"hljs-title class_\">TaskModule</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Module</span>({\n    <span class=\"hljs-attr\">controllers</span>: [<span class=\"hljs-title class_\">TaskController</span>],\n    ...\n});\n</code></pre>\n             </div>\n<p>Once the module is created, you can import and load it into the main application configuration, ensuring the controller is properly initialized and accessible for handling requests.</p>\n<p>The module will automatically handle routing and the controller logic when linked to the application setup. This modular design enables the clean separation of concerns and simplifies adding and managing controllers in the CMMV framework.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "HTTP"
            ],
            "anchors": [
                {
                    "id": "controllers",
                    "label": "Controllers"
                },
                {
                    "id": "controllerprefix-string",
                    "label": "@Controller(prefix: string)"
                },
                {
                    "id": "request--req",
                    "label": "@Request() / @Req()"
                },
                {
                    "id": "response--res",
                    "label": "@Response() / @Res()"
                },
                {
                    "id": "next",
                    "label": "@Next()"
                },
                {
                    "id": "getpath-string",
                    "label": "@Get(path?: string)"
                },
                {
                    "id": "postpath-string",
                    "label": "@Post(path?: string)"
                },
                {
                    "id": "putpath-string",
                    "label": "@Put(path?: string)"
                },
                {
                    "id": "deletepath-string",
                    "label": "@Delete(path?: string)"
                },
                {
                    "id": "paramparam-string",
                    "label": "@Param(param: string)"
                },
                {
                    "id": "body",
                    "label": "@Body()"
                },
                {
                    "id": "query",
                    "label": "@Query()"
                },
                {
                    "id": "queries",
                    "label": "@Queries()"
                },
                {
                    "id": "headerheadername-string",
                    "label": "@Header(headerName: string)"
                },
                {
                    "id": "headers",
                    "label": "@Headers()"
                },
                {
                    "id": "session",
                    "label": "@Session()"
                },
                {
                    "id": "ip",
                    "label": "@Ip()"
                },
                {
                    "id": "hostparam",
                    "label": "@HostParam()"
                },
                {
                    "id": "getting-up-and-running",
                    "label": "Getting up and running"
                }
            ],
            "link": "docs/4-HTTP/1-Controllers.html",
            "links": {}
        }
    },
    "http/services": {
        "prev": {
            "link": "docs/http/controllers",
            "title": "Controllers",
            "desc": "The @cmmv/http module automatically generates REST controllers with standard CRU..."
        },
        "next": {
            "link": "docs/server/overview",
            "title": "Server",
            "desc": "The @cmmv/server is a minimalistic server written in TypeScript, designed to mai..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/http/controllers\" />\n                    <link rel=\"next\" href=\"/docs/server/overview\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Services\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/http/controllers\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/http/services\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/overview\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Services</h1><a id=\"services\" title=\"Services\"></a>\n<p>In <code>@cmmv/core</code>, services play a crucial role in managing business logic, serving as a bridge between the data repositories, cache, and external communication layers like HTTP or RPC. Services are responsible for handling data transformations and ensuring that external communication is model-agnostic, meaning the service works with models and automatically converts them as necessary.</p>\n<p>To create a service, use the <code>@Service</code> decorator. This decorator allows the service to be recognized by the framework and utilized throughout the application.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Service</span>(<span class=\"hljs-string\">&#x27;task&#x27;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskService</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractService</span> {\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> name = <span class=\"hljs-string\">&#x27;task&#x27;</span>;\n    <span class=\"hljs-comment\">// Service methods and logic</span>\n}\n</code></pre>\n             </div>\n<h2>How Services Work</h2><a id=\"how-services-work\" title=\"How Services Work\"></a>\n<ul>\n<li><strong>Input and Output Models:</strong> Services use models (e.g., Task, ITask) to define their input and output. These models are automatically transformed when interacting with repositories or external communication layers.</li>\n<li><strong>Data Handling:</strong> Services interface with the Repository to handle data persistence and retrieval. They are also responsible for validation, caching, and error handling.</li>\n<li><strong>Telemetry:</strong> The service includes telemetry for performance tracking and logging, helping monitor execution times and request identifiers.</li>\n</ul>\n<h2>Using Services</h2><a id=\"using-services\" title=\"Using Services\"></a>\n<p>In <code>@cmmv</code>, since the system doesn’t implement traditional dependency injection, you can easily register services as providers in any module and access them via the constructor of a class. This simplifies the service usage across controllers, gateways, or other components.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/task.service&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Task</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../models/task.model&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Cache</span>, <span class=\"hljs-title class_\">CacheService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/cache&quot;</span>;\n\n<span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&#x27;task&#x27;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskController</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">taskservice</span>: <span class=\"hljs-title class_\">TaskService</span></span>) {}\n\n    <span class=\"hljs-meta\">@Get</span>()\n    <span class=\"hljs-meta\">@Cache</span>(<span class=\"hljs-string\">&quot;task:getAll&quot;</span>, { <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">true</span> })\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-meta\">@Queries</span>() <span class=\"hljs-attr\">queries</span>: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>[]&gt; {\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getAll</span>(queries, req);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n}\n</code></pre>\n             </div>\n<h2>Agnostic</h2><a id=\"agnostic\" title=\"Agnostic\"></a>\n<p>In the <code>@cmmv</code> framework, services are agnostic to the type of controller that invokes them, ensuring they can be used across HTTP controllers, RPC gateways, or other components. Services are automatically generated based on contract configurations and can be extended with the <code>@cmmv/repository</code> module to support database entities or <code>@cmmv/cache</code> for managing and retrieving cached data. While services handle business logic, authentication directives (<code>@cmmv/auth</code>) are applied at the controller or gateway level to ensure secure access. This modular approach allows for flexible and scalable service management.</p>\n<h2>Singleton</h2><a id=\"singleton\" title=\"Singleton\"></a>\n<p>Global access services in <code>@cmmv</code> should be implemented as singletons to ensure consistent behavior and efficient resource usage across the application. Singletons prevent the creation of multiple instances of a service, centralizing operations such as caching and database management. To learn more about the implementation and benefits of singletons in <code>@cmmv</code>, please refer to the documentation available at <a href=\"https://cmmv.io/docs/overview/singleton\" target=\"_blank\" rel=\"nofollow\">CMMV Singleton Documentation</a>. This documentation provides detailed guidance on how to implement and manage singleton services effectively.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "HTTP"
            ],
            "anchors": [
                {
                    "id": "services",
                    "label": "Services"
                },
                {
                    "id": "how-services-work",
                    "label": "How Services Work"
                },
                {
                    "id": "using-services",
                    "label": "Using Services"
                },
                {
                    "id": "agnostic",
                    "label": "Agnostic"
                },
                {
                    "id": "singleton",
                    "label": "Singleton"
                }
            ],
            "link": "docs/4-HTTP/2-Services.html",
            "links": {}
        }
    },
    "server/overview": {
        "prev": {
            "link": "docs/http/services",
            "title": "Services",
            "desc": "In @cmmv/core, services play a crucial role in managing business logic, serving..."
        },
        "next": {
            "link": "docs/server/application",
            "title": "Application",
            "desc": "The Application class is the core component that manages the server’s lifecycle,..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/http/services\" />\n                    <link rel=\"next\" href=\"/docs/server/application\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Server\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/http/services\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/application\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Server</h1><a id=\"server\" title=\"Server\"></a>\n<p>The <code>@cmmv/server</code> is a minimalistic server written in TypeScript, designed to maintain the same structure and methods as <a href=\"https://expressjs.com/\" target=\"_blank\" rel=\"nofollow\">Express</a>, while addressing performance issues and introducing new features for efficient delivery of components and static files.</p>\n<p>This project incorporates code from <a href=\"https://github.com/expressjs/express\" target=\"_blank\" rel=\"nofollow\">Express</a>, <a href=\"https://github.com/koajs/koa\" target=\"_blank\" rel=\"nofollow\">Koa</a>, and <a href=\"https://github.com/fastify/fastify\" target=\"_blank\" rel=\"nofollow\">Fastify</a>, but has been completely rewritten in TypeScript with a focus on modernity and performance. Additionally, it integrates features from Vite to optimize the delivery of components and assets, ensuring a faster and more agile experience for modern applications.</p>\n<p>Due to the complexity of the project, it has been separated into another repository <a href=\"https://github.com/andrehrferreira/cmmv-server\" target=\"_blank\" rel=\"nofollow\">cmmv-server monorepo</a>, which contains multiple packages. In addition to the core server, several modules have been implemented, including:</p>\n<ul>\n<li>body-parser</li>\n<li>compression</li>\n<li>cookie-parser</li>\n<li>cors</li>\n<li>etag</li>\n<li>helmet</li>\n<li>server-static</li>\n</ul>\n<p>Below, we will discuss each module in more detail.</p>\n<p>Currently, the project is in a testing phase and therefore not recommended for production use.</p>\n<h2>Features</h2><a id=\"features\" title=\"Features\"></a>\n<ul>\n<li>Fully rewritten in <strong>TypeScript</strong>.</li>\n<li><strong>Dynamic property definitions</strong> (like <code>Object.defineProperty</code>) were removed to avoid serious performance issues.</li>\n<li><strong>Fastify-inspired hook system</strong> for flexible request lifecycle management.</li>\n<li>Support for <strong>HTTP/2</strong>.</li>\n<li>Compression support for <strong>Brotli</strong>, <strong>gzip</strong>, and <strong>deflate</strong>.</li>\n<li><strong>ETag</strong> implementation using <strong>FNV-1a</strong>.</li>\n<li>Built-in support for cryptographic algorithms such as <strong>MD5</strong>, <strong>SHA-1</strong>, and others from the <code>crypto</code> module.</li>\n<li>Superior performance compared to <strong>Koa</strong>, <strong>Hapi</strong>, and <strong>Express</strong>, and ongoing optimization to achieve performance similar to <strong>Fastify</strong>.</li>\n<li>Full compatibility with all methods provided by <strong>Express.js</strong>.</li>\n</ul>\n<h2>Benchmarks</h2><a id=\"benchmarks\" title=\"Benchmarks\"></a>\n<ul>\n<li><a href=\"https://github.com/fastify/benchmarks\" target=\"_blank\" rel=\"nofollow\">https://github.com/fastify/benchmarks</a></li>\n<li>Machine: linux x64 | 32 vCPUs | 256.6GB Mem</li>\n<li>Node: v20.17.0</li>\n<li>Run: Thu Oct 02 2024 15:23:41 GMT+0000 (Coordinated Universal Time)</li>\n<li>Method: <code>autocannon -c 100 -d 40 -p 10 localhost:3000</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Version</th>\n<th>Router</th>\n<th>Requests/s</th>\n<th>Latency (ms)</th>\n<th>Throughput/Mb</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bare</td>\n<td>v20.17.0</td>\n<td>✗</td>\n<td>45270.4</td>\n<td>21.62</td>\n<td>8.07</td>\n</tr>\n<tr>\n<td>micro</td>\n<td>10.0.1</td>\n<td>✗</td>\n<td>44705.8</td>\n<td>21.93</td>\n<td>7.97</td>\n</tr>\n<tr>\n<td>fastify</td>\n<td>5.0.0</td>\n<td>✓</td>\n<td>44547.8</td>\n<td>22.01</td>\n<td>7.99</td>\n</tr>\n<tr>\n<td>connect</td>\n<td>3.7.0</td>\n<td>✗</td>\n<td>44174.4</td>\n<td>22.18</td>\n<td>7.88</td>\n</tr>\n<tr>\n<td>polka</td>\n<td>0.5.2</td>\n<td>✓</td>\n<td>43791.2</td>\n<td>22.37</td>\n<td>7.81</td>\n</tr>\n<tr>\n<td>rayo</td>\n<td>1.4.6</td>\n<td>✓</td>\n<td>43731.8</td>\n<td>22.41</td>\n<td>7.80</td>\n</tr>\n<tr>\n<td>server-base-router</td>\n<td>7.1.32</td>\n<td>✓</td>\n<td>43117.6</td>\n<td>22.72</td>\n<td>7.69</td>\n</tr>\n<tr>\n<td>server-base</td>\n<td>7.1.32</td>\n<td>✗</td>\n<td>42169.4</td>\n<td>23.24</td>\n<td>7.52</td>\n</tr>\n<tr>\n<td>micro-route</td>\n<td>2.5.0</td>\n<td>✓</td>\n<td>41600.0</td>\n<td>23.55</td>\n<td>7.42</td>\n</tr>\n<tr>\n<td>connect-router</td>\n<td>1.3.8</td>\n<td>✓</td>\n<td>41163.3</td>\n<td>23.85</td>\n<td>7.34</td>\n</tr>\n<tr>\n<td>cmmv</td>\n<td>0.4.0</td>\n<td>✓</td>\n<td>40995.2</td>\n<td>23.92</td>\n<td>7.35</td>\n</tr>\n<tr>\n<td>hono</td>\n<td>4.6.3</td>\n<td>✓</td>\n<td>39738.6</td>\n<td>24.68</td>\n<td>7.09</td>\n</tr>\n<tr>\n<td>polkadot</td>\n<td>1.0.0</td>\n<td>✗</td>\n<td>37472.8</td>\n<td>26.20</td>\n<td>6.68</td>\n</tr>\n<tr>\n<td>koa</td>\n<td>2.15.3</td>\n<td>✗</td>\n<td>37181.4</td>\n<td>26.42</td>\n<td>6.63</td>\n</tr>\n<tr>\n<td>0http</td>\n<td>3.5.3</td>\n<td>✓</td>\n<td>37101.6</td>\n<td>26.47</td>\n<td>6.62</td>\n</tr>\n<tr>\n<td>take-five</td>\n<td>2.0.0</td>\n<td>✓</td>\n<td>35171.4</td>\n<td>27.95</td>\n<td>12.65</td>\n</tr>\n<tr>\n<td>h3</td>\n<td>1.13.0</td>\n<td>✗</td>\n<td>34667.4</td>\n<td>28.35</td>\n<td>6.18</td>\n</tr>\n<tr>\n<td>koa-isomorphic-router</td>\n<td>1.0.1</td>\n<td>✓</td>\n<td>34542.7</td>\n<td>28.46</td>\n<td>6.16</td>\n</tr>\n<tr>\n<td>h3-router</td>\n<td>1.13.0</td>\n<td>✓</td>\n<td>33551.0</td>\n<td>29.31</td>\n<td>5.98</td>\n</tr>\n<tr>\n<td>restana</td>\n<td>4.9.9</td>\n<td>✓</td>\n<td>33532.8</td>\n<td>29.36</td>\n<td>5.98</td>\n</tr>\n<tr>\n<td>koa-router</td>\n<td>12.0.1</td>\n<td>✓</td>\n<td>33426.2</td>\n<td>29.46</td>\n<td>5.96</td>\n</tr>\n<tr>\n<td>microrouter</td>\n<td>3.1.3</td>\n<td>✓</td>\n<td>30049.2</td>\n<td>32.79</td>\n<td>5.36</td>\n</tr>\n<tr>\n<td>hapi</td>\n<td>21.3.10</td>\n<td>✓</td>\n<td>30014.8</td>\n<td>32.82</td>\n<td>5.35</td>\n</tr>\n<tr>\n<td>restify</td>\n<td>11.1.0</td>\n<td>✓</td>\n<td>28548.0</td>\n<td>34.55</td>\n<td>5.15</td>\n</tr>\n<tr>\n<td>fastify-big-json</td>\n<td>5.0.0</td>\n<td>✓</td>\n<td>11675.6</td>\n<td>85.19</td>\n<td>134.34</td>\n</tr>\n<tr>\n<td>express</td>\n<td>5.0.1</td>\n<td>✓</td>\n<td>10058.2</td>\n<td>98.82</td>\n<td>1.79</td>\n</tr>\n<tr>\n<td>express-with-middlewares</td>\n<td>5.0.1</td>\n<td>✓</td>\n<td>8826.8</td>\n<td>112.63</td>\n<td>3.28</td>\n</tr>\n<tr>\n<td>trpc-router</td>\n<td>10.45.2</td>\n<td>✓</td>\n<td>N/A</td>\n<td>N/A</td>\n<td>N/A</td>\n</tr>\n</tbody>\n</table>\n<h2>Installation</h2><a id=\"installation\" title=\"Installation\"></a>\n<p>Install the <code>@cmmv/server</code> package via npm:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install @cmmv/server\n</code></pre>\n             </div>\n<h2>Quick Start</h2><a id=\"quick-start\" title=\"Quick Start\"></a>\n<p>Below is a simple example of how to create a new CMMV application:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv, { json, urlencoded, serverStatic } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>({\n    <span class=\"hljs-comment\">/*http2: true,\n    https: {\n        key: readFileSync(&quot;./cert/private-key.pem&quot;),\n        cert: readFileSync(&quot;./cert/certificate.pem&quot;),\n        passphrase: &quot;1234&quot;\n    }*/</span>\n});\n\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">serverStatic</span>(<span class=\"hljs-string\">&#x27;public&#x27;</span>));\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-string\">&#x27;50mb&#x27;</span> }));\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">urlencoded</span>({ <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-string\">&#x27;50mb&#x27;</span>, <span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">true</span> }));\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Hello World&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">&quot;0.0.0.0&quot;</span>, <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span> })\n.<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">server</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> addr = server.<span class=\"hljs-title function_\">address</span>();\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n        <span class=\"hljs-string\">`Listen on http://<span class=\"hljs-subst\">${addr.address}</span>:<span class=\"hljs-subst\">${addr.port}</span>`</span>,\n    );\n})\n.<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-title class_\">Error</span>(err.<span class=\"hljs-property\">message</span>);\n});\n</code></pre>\n             </div>\n<h2>Application</h2><a id=\"application\" title=\"Application\"></a>\n<p>The Application class is central to the <code>@cmmv/server</code> and provides a flexible foundation for managing HTTP/HTTP2 server instances, routing, middleware, and error handling. It is built on top of Node.js’s <code>EventEmitter</code>, and integrates features such as query parsing, content-type parsers, and HTTP method handlers.</p>\n<p>This class is responsible for managing the lifecycle of HTTP requests, routing them to the correct handlers, and applying middlewares and hooks (such as pre-parsing, on-request, and error handling). The class also supports customizable settings and error handling mechanisms. Here’s a breakdown of its features:</p>\n<p><em><strong>Features:</strong></em></p>\n<ul>\n<li><strong>HTTP/HTTP2 Support:</strong> The <code>Application</code> class can create either HTTP or HTTP2 servers, supporting both regular and secure requests.</li>\n<li><strong>Routing:</strong> Offers full routing capabilities for different HTTP methods (<code>GET</code>, <code>POST</code>, etc.) via the <code>Router</code> class.</li>\n<li><strong>Middleware:</strong> Supports chaining middlewares via the <code>use()</code> method, including handling arrays of middlewares.</li>\n<li><strong>Error Handling:</strong> Custom error handling through <code>setErrorHandler</code> that allows defining specific error-handling logic.</li>\n<li><strong>View Rendering:</strong> Uses the <code>View</code> class for rendering templates. It supports custom view engines that can be registered via <code>app.engine()</code>.</li>\n<li><strong>Hooks:</strong> Manages lifecycle hooks like <code>onRequest</code>, <code>preParsing</code>, <code>onError</code>, and more, which can be used to customize request handling.</li>\n<li><strong>Configuration Options:</strong> Configurable server settings like timeouts, body limits, and HTTP2 support.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>http2</code></td>\n<td>Enables HTTP2 support. When <code>true</code>, the server instance will use HTTP2 for communication.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>https</code></td>\n<td>Configuration for HTTPS (including keys and certificates). Required for secure HTTP2.</td>\n<td><code>object</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td><code>connectionTimeout</code></td>\n<td>The time (in milliseconds) the server will wait before closing idle connections.</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>keepAliveTimeout</code></td>\n<td>The time (in milliseconds) the server will wait for a keep-alive connection before closing it.</td>\n<td><code>number</code></td>\n<td><code>72000</code></td>\n</tr>\n<tr>\n<td><code>maxRequestsPerSocket</code></td>\n<td>The maximum number of requests allowed per socket.</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>requestTimeout</code></td>\n<td>The time (in milliseconds) the server will wait for the request to complete before timing out.</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>bodyLimit</code></td>\n<td>The maximum size (in bytes) for the request body.</td>\n<td><code>number</code></td>\n<td><code>1048576</code></td>\n</tr>\n<tr>\n<td><code>maxHeaderSize</code></td>\n<td>The maximum size (in bytes) for the request headers.</td>\n<td><code>number</code></td>\n<td><code>16384</code></td>\n</tr>\n<tr>\n<td><code>insecureHTTPParser</code></td>\n<td>Enables the use of an insecure HTTP parser that accepts non-standard HTTP requests.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>joinDuplicateHeaders</code></td>\n<td>Combines duplicate HTTP headers into a single header if set to <code>true</code>.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>querystringParser</code></td>\n<td>Custom query string parsing function. Must be a function if provided.</td>\n<td><code>function</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td><code>serverFactory</code></td>\n<td>A custom function for creating the server instance, useful for advanced configurations like clustering.</td>\n<td><code>function</code></td>\n<td><code>undefined</code></td>\n</tr>\n</tbody>\n</table>\n<p>This table lists the configuration options available when creating an instance of the <code>Application</code> class, which can be used to fine-tune its behavior for different environments and use cases.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">cmmv</span>({\n    <span class=\"hljs-attr\">http2</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">https</span>: {\n        <span class=\"hljs-attr\">key</span>: fs.<span class=\"hljs-title function_\">readFileSync</span>(<span class=\"hljs-string\">&#x27;./key.pem&#x27;</span>),\n        <span class=\"hljs-attr\">cert</span>: fs.<span class=\"hljs-title function_\">readFileSync</span>(<span class=\"hljs-string\">&#x27;./cert.pem&#x27;</span>)\n    },\n    <span class=\"hljs-attr\">requestTimeout</span>: <span class=\"hljs-number\">30000</span>\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">8080</span>, <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span> });\n</code></pre>\n             </div>\n<p>This example creates a secure HTTP2 server using the <code>Application</code> class with custom request timeouts and listens on port 8080. The flexibility of the <code>Application</code> class allows for dynamic middleware registration, custom hooks, and full control over server behavior.</p>\n<h2>Router</h2><a id=\"router\" title=\"Router\"></a>\n<p>The <code>Router</code> class is responsible for defining, registering, and handling routes in the <code>@cmmv/server</code>. It uses the <a href=\"https://github.com/delvedor/find-my-way\" target=\"_blank\" rel=\"nofollow\"><code>find-my-way</code></a> module to manage HTTP method routing, and it provides an abstraction for setting up routes using various HTTP methods (GET, POST, PUT, DELETE, etc.).</p>\n<p>By utilizing <code>find-my-way</code>, the <code>Router</code> class ensures efficient routing, supporting features such as route param handling, middleware stacking, and dynamic route resolution. This router supports all major HTTP methods and allows flexible route definitions.</p>\n<p>Features of the <code>Router</code>:</p>\n<ul>\n<li><strong>Route Management:</strong> Allows registering routes for all HTTP methods, including custom methods like <code>BIND</code>, <code>MKCOL</code>, and more.</li>\n<li><strong>Middleware Support:</strong> Supports middleware stacking for each route, allowing the addition of multiple handlers per route.</li>\n<li><strong>Parameter Handlers:</strong> Provides a mechanism to handle parameters within routes via the <code>param()</code> method, similar to how Express handles route parameters.</li>\n<li><strong>Dynamic Path Handling:</strong> Efficiently resolves dynamic paths and can apply multiple middlewares to the same route.</li>\n<li><strong>Error Handling:</strong> Includes mechanisms to ensure valid route handlers are defined, with error handling for missing or invalid handlers.</li>\n<li><strong>Compatibility:</strong> While it provides an API similar to Express.js for route definitions, it does not depend on Express and operates independently.</li>\n</ul>\n<p>The <code>find-my-way</code> library is a high-performance HTTP router that matches requests to registered routes. It provides features such as:</p>\n<ul>\n<li><strong>Dynamic Routing:</strong> Supports dynamic path segments and parameters (e.g., <code>/users/:id</code>).</li>\n<li><strong>Multiple Methods:</strong> Routes can be registered for any HTTP method (GET, POST, etc.).</li>\n<li><strong>Case Sensitivity:</strong> Routes are case-insensitive by default but can be configured otherwise.</li>\n<li><strong>Performance:</strong> Designed for efficiency, it supports fast lookup times for large numbers of routes.</li>\n<li><strong>Middleware Stack:</strong> Allows attaching an array of middleware functions to a single route.</li>\n</ul>\n<p>The Router class provides methods for each HTTP method and allows route definitions. Below is a table summarizing the methods and their functionality:</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n<th>Example Usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>acl()</code></td>\n<td>Registers a route for the ACL method.</td>\n<td><code>router.acl('/resources', handler)</code></td>\n</tr>\n<tr>\n<td><code>bind()</code></td>\n<td>Registers a route for the BIND method.</td>\n<td><code>router.bind('/binding', handler)</code></td>\n</tr>\n<tr>\n<td><code>checkout()</code></td>\n<td>Registers a route for the CHECKOUT method.</td>\n<td><code>router.checkout('/checkout', handler)</code></td>\n</tr>\n<tr>\n<td><code>connect()</code></td>\n<td>Registers a route for the CONNECT method.</td>\n<td><code>router.connect('/connect', handler)</code></td>\n</tr>\n<tr>\n<td><code>copy()</code></td>\n<td>Registers a route for the COPY method.</td>\n<td><code>router.copy('/copy', handler)</code></td>\n</tr>\n<tr>\n<td><code>delete()</code></td>\n<td>Registers a route for the DELETE method.</td>\n<td><code>router.delete('/resource/:id', handler)</code></td>\n</tr>\n<tr>\n<td><code>get()</code></td>\n<td>Registers a route for the GET method. Also registers HEAD by default.</td>\n<td><code>router.get('/users', handler)</code></td>\n</tr>\n<tr>\n<td><code>head()</code></td>\n<td>Registers a route for the HEAD method.</td>\n<td><code>router.head('/headers', handler)</code></td>\n</tr>\n<tr>\n<td><code>link()</code></td>\n<td>Registers a route for the LINK method.</td>\n<td><code>router.link('/link', handler)</code></td>\n</tr>\n<tr>\n<td><code>lock()</code></td>\n<td>Registers a route for the LOCK method.</td>\n<td><code>router.lock('/lock', handler)</code></td>\n</tr>\n<tr>\n<td><code>m-search()</code></td>\n<td>Registers a route for the M-SEARCH method.</td>\n<td><code>router['m-search']('/search', handler)</code></td>\n</tr>\n<tr>\n<td><code>merge()</code></td>\n<td>Registers a route for the MERGE method.</td>\n<td><code>router.merge('/merge', handler)</code></td>\n</tr>\n<tr>\n<td><code>mkactivity()</code></td>\n<td>Registers a route for the MKACTIVITY method.</td>\n<td><code>router.mkactivity('/activity', handler)</code></td>\n</tr>\n<tr>\n<td><code>mkcalendar()</code></td>\n<td>Registers a route for the MKCALENDAR method.</td>\n<td><code>router.mkcalendar('/calendar', handler)</code></td>\n</tr>\n<tr>\n<td><code>mkcol()</code></td>\n<td>Registers a route for the MKCOL method.</td>\n<td><code>router.mkcol('/col', handler)</code></td>\n</tr>\n<tr>\n<td><code>move()</code></td>\n<td>Registers a route for the MOVE method.</td>\n<td><code>router.move('/move', handler)</code></td>\n</tr>\n<tr>\n<td><code>notify()</code></td>\n<td>Registers a route for the NOTIFY method.</td>\n<td><code>router.notify('/notify', handler)</code></td>\n</tr>\n<tr>\n<td><code>options()</code></td>\n<td>Registers a route for the OPTIONS method.</td>\n<td><code>router.options('/options', handler)</code></td>\n</tr>\n<tr>\n<td><code>patch()</code></td>\n<td>Registers a route for the PATCH method.</td>\n<td><code>router.patch('/update', handler)</code></td>\n</tr>\n<tr>\n<td><code>post()</code></td>\n<td>Registers a route for the POST method.</td>\n<td><code>router.post('/submit', handler)</code></td>\n</tr>\n<tr>\n<td><code>propfind()</code></td>\n<td>Registers a route for the PROPFIND method.</td>\n<td><code>router.propfind('/find', handler)</code></td>\n</tr>\n<tr>\n<td><code>proppatch()</code></td>\n<td>Registers a route for the PROPPATCH method.</td>\n<td><code>router.proppatch('/patch', handler)</code></td>\n</tr>\n<tr>\n<td><code>purge()</code></td>\n<td>Registers a route for the PURGE method.</td>\n<td><code>router.purge('/purge', handler)</code></td>\n</tr>\n<tr>\n<td><code>put()</code></td>\n<td>Registers a route for the PUT method.</td>\n<td><code>router.put('/resource', handler)</code></td>\n</tr>\n<tr>\n<td><code>rebind()</code></td>\n<td>Registers a route for the REBIND method.</td>\n<td><code>router.rebind('/rebind', handler)</code></td>\n</tr>\n<tr>\n<td><code>report()</code></td>\n<td>Registers a route for the REPORT method.</td>\n<td><code>router.report('/report', handler)</code></td>\n</tr>\n<tr>\n<td><code>search()</code></td>\n<td>Registers a route for the SEARCH method.</td>\n<td><code>router.search('/search', handler)</code></td>\n</tr>\n<tr>\n<td><code>source()</code></td>\n<td>Registers a route for the SOURCE method.</td>\n<td><code>router.source('/source', handler)</code></td>\n</tr>\n<tr>\n<td><code>subscribe()</code></td>\n<td>Registers a route for the SUBSCRIBE method.</td>\n<td><code>router.subscribe('/subscribe', handler)</code></td>\n</tr>\n<tr>\n<td><code>trace()</code></td>\n<td>Registers a route for the TRACE method.</td>\n<td><code>router.trace('/trace', handler)</code></td>\n</tr>\n<tr>\n<td><code>unbind()</code></td>\n<td>Registers a route for the UNBIND method.</td>\n<td><code>router.unbind('/unbind', handler)</code></td>\n</tr>\n<tr>\n<td><code>unlink()</code></td>\n<td>Registers a route for the UNLINK method.</td>\n<td><code>router.unlink('/unlink', handler)</code></td>\n</tr>\n<tr>\n<td><code>unlock()</code></td>\n<td>Registers a route for the UNLOCK method.</td>\n<td><code>router.unlock('/unlock', handler)</code></td>\n</tr>\n<tr>\n<td><code>unsubscribe()</code></td>\n<td>Registers a route for the UNSUBSCRIBE method.</td>\n<td><code>router.unsubscribe('/unsubscribe', handler)</code></td>\n</tr>\n</tbody>\n</table>\n<p>Example</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Initialize router</span>\n<span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Router</span>();\n\n<span class=\"hljs-comment\">// Register GET route</span>\nrouter.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/users&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;List of users&#x27;</span>);\n});\n\n<span class=\"hljs-comment\">// Register POST route</span>\nrouter.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&#x27;/users&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;User created&#x27;</span>);\n});\n\n<span class=\"hljs-comment\">// Register PUT route</span>\nrouter.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-string\">&#x27;/users/:id&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">`User <span class=\"hljs-subst\">${req.params.id}</span> updated`</span>);\n});\n\n<span class=\"hljs-comment\">// Register DELETE route</span>\nrouter.<span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-string\">&#x27;/users/:id&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">`User <span class=\"hljs-subst\">${req.params.id}</span> deleted`</span>);\n});\n</code></pre>\n             </div>\n<p>In this example, the <code>Router</code> class is used to define routes for handling different HTTP methods such as GET, POST, PUT, and DELETE. Each route accepts a request (<code>req</code>) and a response (<code>res</code>), allowing handlers to manage incoming requests and send appropriate responses.</p>\n<p>Exemple in Application</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\n<span class=\"hljs-keyword\">const</span> host = <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>;\n<span class=\"hljs-keyword\">const</span> port = <span class=\"hljs-number\">3000</span>;\n\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view engine&#x27;</span>, <span class=\"hljs-string\">&#x27;pug&#x27;</span>);\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/view&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) {\n    res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;index&#x27;</span>, { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Hey&#x27;</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Hello there!&#x27;</span> });\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Hello World&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/json&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">hello</span>: <span class=\"hljs-string\">&#x27;world&#x27;</span> });\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;User &#x27;</span> + req.<span class=\"hljs-property\">params</span>.<span class=\"hljs-property\">id</span>);\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/users&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">json</span>(req.<span class=\"hljs-property\">query</span>);\n});\n\napp.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&#x27;/test&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">body</span>);\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;ok&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ host, port });\n</code></pre>\n             </div>\n<h2>Static</h2><a id=\"static\" title=\"Static\"></a>\n<p>The <code>@cmmv/server-static</code> middleware is used to serve static files from a specified directory or directories. It is designed to handle requests for static content such as HTML, CSS, JavaScript, images, or any other assets. The middleware offers several configuration options for file serving behavior, including caching, compression, custom headers, and more.</p>\n<p>Once the middleware is initialized, it listens for requests matching the specified prefix and serves files from the root directory (or multiple directories) as configured.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>root</code></td>\n<td>Specifies the root directory (or directories) from which static files will be served.</td>\n<td><code>string</code> or <code>string[]</code></td>\n<td><code>undefined</code> (Required)</td>\n</tr>\n<tr>\n<td><code>prefix</code></td>\n<td>URL prefix for serving static files. Files will be served from <code>prefix + path</code> (e.g., <code>/static/myfile.js</code>).</td>\n<td><code>string</code></td>\n<td><code>'/'</code></td>\n</tr>\n<tr>\n<td><code>maxAge</code></td>\n<td>Sets the Cache-Control max-age directive in milliseconds. Determines how long files should be cached by the client.</td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>cacheControl</code></td>\n<td>Enables or disables the Cache-Control header. When enabled, cache headers will be automatically set based on the <code>maxAge</code> option.</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>dotfiles</code></td>\n<td>Defines how to handle dotfiles (files starting with <code>.</code>). Options are <code>'allow'</code>, <code>'deny'</code>, or <code>'ignore'</code>.</td>\n<td><code>'allow'</code>, <code>'deny'</code>, <code>'ignore'</code></td>\n<td><code>'allow'</code></td>\n</tr>\n<tr>\n<td><code>serverDotfiles</code></td>\n<td>If enabled, the server will serve dotfiles from the root directory.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>index</code></td>\n<td>Specifies the default file to serve when a directory is requested. Can be a string (e.g., <code>'index.html'</code>) or <code>false</code> to disable index file serving.</td>\n<td><code>string</code> or <code>boolean</code></td>\n<td><code>'index.html'</code></td>\n</tr>\n<tr>\n<td><code>fallthrough</code></td>\n<td>When <code>true</code>, allows requests to fall through to the next middleware if a file is not found. If <code>false</code>, a 404 error will be returned.</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>redirect</code></td>\n<td>Redirects requests to directories that don’t end with a <code>/</code> by adding a trailing slash.</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>immutable</code></td>\n<td>When set to <code>true</code>, serves files with the <code>Cache-Control: immutable</code> directive, indicating that the files will never change.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>lastModified</code></td>\n<td>Enables or disables the Last-Modified header. When enabled, it sets the Last-Modified header based on the file’s last modified time.</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>etag</code></td>\n<td>Enables or disables the generation of ETag headers, which can be used for cache validation.</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>extensions</code></td>\n<td>File extensions to try when a file is not found (e.g., serving <code>file.html</code> when the request is for <code>file</code>). Can be an array of strings.</td>\n<td><code>string[]</code> or <code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>acceptRanges</code></td>\n<td>Enables support for HTTP range requests, useful for media streaming.</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>preCompressed</code></td>\n<td>If <code>true</code>, the middleware will attempt to serve pre-compressed files (e.g., <code>.br</code> or <code>.gz</code> files) if available.</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>allowedPath</code></td>\n<td>A function that can be used to filter or restrict access to specific paths. The function receives <code>pathname</code>, <code>root</code>, and <code>req</code> as parameters and returns <code>true</code> to allow the path or <code>false</code> to reject it.</td>\n<td><code>Function</code></td>\n<td><code>undefined</code></td>\n</tr>\n<tr>\n<td><code>setHeaders</code></td>\n<td>A custom function to set headers for the response. It receives <code>res</code>, <code>path</code>, and <code>stat</code> as parameters and can modify headers before the response is sent.</td>\n<td><code>Function</code></td>\n<td><code>null</code></td>\n</tr>\n</tbody>\n</table>\n<p>This middleware is not compatible with Express because its internal workings differ significantly from Express’s static file server. One major change is the removal of directory listing support. Instead, the middleware verifies existing files and creates routes at the application’s startup, resulting in improved efficiency.</p>\n<p>It leverages <a href=\"https://github.com/fastify/send\" target=\"_blank\" rel=\"nofollow\"><code>@fastify/send</code></a> and <a href=\"https://github.com/fastify/accept-negotiator\" target=\"_blank\" rel=\"nofollow\"><code>@fastify/accept-negotiator</code></a> to deliver files efficiently. Additionally, it supports add-ons like <code>@cmmv/etag</code> and <code>@cmmv/compression</code> for enhanced static file delivery, offering cache control through the use of <code>lastModified</code> and <code>ETag</code> headers. These features provide a more optimized and performant static file server compared to traditional approaches.</p>\n<h2>JSON</h2><a id=\"json\" title=\"JSON\"></a>\n<p>The <code>@cmmv/body-parser</code> middleware in cmmv-server serves as a built-in function designed to handle incoming requests with JSON payloads. Similar to Express, this middleware parses the request body and attaches the parsed data to the <code>req.body</code> object, making it easily accessible for further processing.</p>\n<p>This middleware specifically parses JSON data, and only processes requests where the <code>Content-Type: application/json</code> or <code>application/vnd.api+json</code> header matches the specified type option. It supports any Unicode encoding and can automatically inflate compressed requests using gzip or deflate.</p>\n<p>After the middleware runs, the parsed JSON data is available in <code>req.body</code>. If there’s no body to parse, the <code>Content-Type</code> doesn’t match, or an error occurs, req.body will be an empty object (<code>{}</code>).</p>\n<p>Since <code>req.body</code> is populated from user-provided input, it is important to note that all properties and values in the object are untrusted. They should be carefully validated before being used. For instance, attempting to access <code>req.body.foo.toString()</code> could result in errors if <code>foo</code> is undefined, not a string, or if the <code>toString</code> method has been overridden or replaced by malicious input.</p>\n<p>The following table outlines the options available for configuring this middleware, offering customization over its behavior to suit various application needs.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>inflate</code></td>\n<td>Enables or disables handling deflated (compressed) bodies. When disabled, deflated bodies are rejected.</td>\n<td>Boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>limit</code></td>\n<td>Controls the maximum request body size. If this is a number, the value specifies the number of bytes; if it is a string, the value is passed to the <code>bytes</code> library for parsing.</td>\n<td>Mixed</td>\n<td><code>&quot;100kb&quot;</code></td>\n</tr>\n<tr>\n<td><code>reviver</code></td>\n<td>The <code>reviver</code> option is passed directly to <code>JSON.parse</code> as the second argument. It allows custom transformation of parsed JSON data. More details can be found in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#using_the_reviver_parameter\" target=\"_blank\" rel=\"nofollow\">MDN documentation on JSON.parse</a>.</td>\n<td>Function</td>\n<td><code>null</code></td>\n</tr>\n<tr>\n<td><code>strict</code></td>\n<td>Enables or disables only accepting arrays and objects as valid JSON. When disabled, the middleware will accept anything that <code>JSON.parse</code> accepts.</td>\n<td>Boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Determines the media type the middleware will parse. This can be a string, array of strings, or a function. If not a function, the value is passed directly to the <code>type-is</code> library and can be an extension (e.g., <code>json</code>), a MIME type (e.g., <code>application/json</code>), or a wildcard MIME type (e.g., <code>*/json</code>). If a function, it is called as <code>fn(req)</code> and parses when it returns <code>true</code>.</td>\n<td>Mixed</td>\n<td><code>&quot;application/json&quot;</code></td>\n</tr>\n<tr>\n<td><code>verify</code></td>\n<td>If provided, this function is called as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is the raw request body. The parsing can be aborted by throwing an error from within this function.</td>\n<td>Function</td>\n<td><code>undefined</code></td>\n</tr>\n</tbody>\n</table>\n<h2>Raw</h2><a id=\"raw\" title=\"Raw\"></a>\n<p>This middleware processes incoming request payloads and converts them into a Buffer, leveraging functionality inspired by <code>body-parser</code>. It is designed specifically to handle bodies as Buffers and only processes requests where the <code>Content-Type: application/octet-stream</code> or <code>application/vnd+octets</code> header matches the defined type option.</p>\n<p>The parser is capable of handling any Unicode encoding and supports automatic decompression for gzip and deflate encoded requests.</p>\n<p>After the middleware runs, a Buffer containing the parsed data is assigned to the <code>req.body</code> property. If no body is found, the <code>Content-Type</code> doesn’t match, or an error occurs, <code>req.body</code> will either default to an empty object ({}) or remain unchanged if another parser has already processed it.</p>\n<p>Since <code>req.body</code> is populated based on user input, it is crucial to validate any properties and values before using them. For example, calling <code>req.body.toString()</code> might lead to errors if <code>req.body</code> has been altered by multiple parsers. It is highly recommended to verify that <code>req.body</code> is a Buffer before performing any buffer-specific operations.</p>\n<p>The following table provides an overview of the optional configuration options:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>inflate</code></td>\n<td>Enables or disables handling deflated (compressed) bodies. When disabled, deflated bodies are rejected.</td>\n<td>Boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>limit</code></td>\n<td>Controls the maximum request body size. If this is a number, it specifies the number of bytes. If it is a string, the value is passed to the <code>bytes</code> library for parsing.</td>\n<td>Mixed</td>\n<td><code>&quot;100kb&quot;</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Determines the media type the middleware will parse. This can be a string, array of strings, or a function. If it’s not a function, it’s passed to the <code>type-is</code> library and can be an extension (e.g., <code>bin</code>), a MIME type (e.g., <code>application/octet-stream</code>), or a wildcard MIME type (e.g., <code>application/*</code>).</td>\n<td>Mixed</td>\n<td><code>&quot;application/octet-stream&quot;</code></td>\n</tr>\n<tr>\n<td><code>verify</code></td>\n<td>A function called as <code>verify(req, res, buf, encoding)</code> where <code>buf</code> is the raw request body and <code>encoding</code> is its encoding. Throwing an error from this function aborts the parsing process.</td>\n<td>Function</td>\n<td><code>undefined</code></td>\n</tr>\n</tbody>\n</table>\n<h2>Text</h2><a id=\"text\" title=\"Text\"></a>\n<p>This middleware processes incoming request payloads by converting them into a string, utilizing functionality from the <code>body-parser</code> module.</p>\n<p>It provides middleware that parses all bodies as strings, only processing requests where the <code>Content-Type: text/plain</code> header aligns with the specified type. It handles various Unicode encodings and supports automatic decompression of gzip and deflate encodings.</p>\n<p>After the middleware runs, a new string representation of the parsed data is assigned to the <code>req.body</code> object. If there is no body to parse, the Content-Type does not match, or an error occurs, <code>req.body</code> will default to an empty object (<code>{}</code>).</p>\n<p>Since the structure of req.body is based on user input, it is important to treat it as untrusted. Each property and value must be validated before use. For instance, attempting to call <code>req.body.trim()</code> could lead to errors if req.body is not a string. Therefore, it’s advisable to ensure that <code>req.body</code> is a string before using string methods.</p>\n<p>The following table outlines the available configuration options:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>defaultCharset</code></td>\n<td>Specifies the default character set for the text content when the charset is not included in the <code>Content-Type</code> header of the request.</td>\n<td>String</td>\n<td><code>&quot;utf-8&quot;</code></td>\n</tr>\n<tr>\n<td><code>inflate</code></td>\n<td>Controls whether or not compressed (deflated) request bodies should be handled. If disabled, compressed bodies will be rejected.</td>\n<td>Boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>limit</code></td>\n<td>Sets the maximum allowed size for the request body. When provided as a number, the value is treated as the number of bytes. If provided as a string, it is parsed using the <code>bytes</code> library.</td>\n<td>Mixed</td>\n<td><code>&quot;100kb&quot;</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Defines the media type the middleware should parse. This option can be a string, an array of strings, or a function. If not a function, the value is passed to the <code>type-is</code> library and can be an extension (e.g., <code>txt</code>), a MIME type (e.g., <code>text/plain</code>), or a wildcard pattern (e.g., <code>text/*</code>). If a function, it is called as <code>fn(req)</code> and the request is parsed if it returns a truthy value.</td>\n<td>Mixed</td>\n<td><code>&quot;text/plain&quot;</code></td>\n</tr>\n<tr>\n<td><code>verify</code></td>\n<td>If provided, this function is invoked as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is the raw request body in Buffer form, and <code>encoding</code> is the encoding of the request. Parsing can be stopped by throwing an error within this function.</td>\n<td>Function</td>\n<td><code>undefined</code></td>\n</tr>\n</tbody>\n</table>\n<h2>Urlencoded</h2><a id=\"urlencoded\" title=\"Urlencoded\"></a>\n<p>This middleware is designed to parse incoming requests that contain urlencoded payloads. It is based on the functionality provided by body-parser.</p>\n<p>The middleware only processes urlencoded bodies, specifically looking for requests where the <code>Content-Type: application/x-www-form-urlencoded</code> header matches the specified type option. This parser accepts bodies encoded in UTF-8 and supports automatic decompression for requests compressed with gzip or deflate.</p>\n<p>After the middleware processes a request, it populates the req.body object with the parsed data. If no body is found, the Content-Type doesn’t match, or an error occurs, <code>req.body</code> will be set to an empty object ({}). The object will contain key-value pairs, where values can either be strings or arrays (when extended: false), or any data type (when extended: true).</p>\n<p>Since <code>req.body</code> is populated based on user input, it is important to validate all properties and values before using them. For example, calling <code>req.body.foo.toString()</code> might cause errors if foo is not a string, or if it is undefined. Therefore, it is advisable to check the type of <code>req.body</code> values before performing any operations on them.</p>\n<p>The following table outlines the available configuration options for the middleware:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>extended</code></td>\n<td>Allows you to choose between parsing URL-encoded data with the <code>querystring</code> library (when <code>false</code>) or the <code>qs</code> library (when <code>true</code>). The “extended” syntax allows for more complex objects and arrays to be encoded into URL-encoded format.</td>\n<td>Boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>inflate</code></td>\n<td>Enables or disables support for handling compressed (deflated) request bodies. If disabled, compressed bodies will be rejected.</td>\n<td>Boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>limit</code></td>\n<td>Sets the maximum allowed size for the request body. If provided as a number, it specifies the number of bytes. If provided as a string, it will be parsed by the <code>bytes</code> library.</td>\n<td>Mixed</td>\n<td><code>&quot;100kb&quot;</code></td>\n</tr>\n<tr>\n<td><code>parameterLimit</code></td>\n<td>Controls the maximum number of parameters that can be present in the URL-encoded data. If the request exceeds this limit, an error will be thrown.</td>\n<td>Number</td>\n<td><code>1000</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Defines which media types the middleware will process. This can be specified as a string, array of strings, or a function. If not a function, this value is passed to the <code>type-is</code> library and can be an extension (e.g., <code>urlencoded</code>), a MIME type (e.g., <code>application/x-www-form-urlencoded</code>), or a wildcard pattern.</td>\n<td>Mixed</td>\n<td><code>&quot;application/x-www-form-urlencoded&quot;</code></td>\n</tr>\n<tr>\n<td><code>verify</code></td>\n<td>A function that is invoked as <code>verify(req, res, buf, encoding)</code>, where <code>buf</code> is the raw request body in Buffer form. Throwing an error from this function will stop the parsing process.</td>\n<td>Function</td>\n<td><code>undefined</code></td>\n</tr>\n</tbody>\n</table>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "server",
                    "label": "Server"
                },
                {
                    "id": "features",
                    "label": "Features"
                },
                {
                    "id": "benchmarks",
                    "label": "Benchmarks"
                },
                {
                    "id": "installation",
                    "label": "Installation"
                },
                {
                    "id": "quick-start",
                    "label": "Quick Start"
                },
                {
                    "id": "application",
                    "label": "Application"
                },
                {
                    "id": "router",
                    "label": "Router"
                },
                {
                    "id": "static",
                    "label": "Static"
                },
                {
                    "id": "json",
                    "label": "JSON"
                },
                {
                    "id": "raw",
                    "label": "Raw"
                },
                {
                    "id": "text",
                    "label": "Text"
                },
                {
                    "id": "urlencoded",
                    "label": "Urlencoded"
                }
            ],
            "link": "docs/3-Server/0-Overview.html",
            "links": {}
        }
    },
    "server/application": {
        "prev": {
            "link": "docs/server/overview",
            "title": "Server",
            "desc": "The @cmmv/server is a minimalistic server written in TypeScript, designed to mai..."
        },
        "next": {
            "link": "docs/server/hooks",
            "title": "Hooks",
            "desc": "The hook system in this server framework is designed to follow a similar lifecyc..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/overview\" />\n                    <link rel=\"next\" href=\"/docs/server/hooks\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Application\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/application\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/hooks\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Application</h1><a id=\"application\" title=\"Application\"></a>\n<p>The <code>Application</code> class is the core component that manages the server’s lifecycle, routes, and middleware. It acts as the entry point for configuring routes, applying middleware, and handling HTTP requests and responses. This class is designed to be flexible, allowing developers to define various route-handling mechanisms and middleware functions that enhance the server’s capabilities.</p>\n<p>The <code>Application</code> class in this system is heavily inspired by frameworks like Express, but it is designed to improve performance and add support for modern HTTP features like HTTP2. It also integrates additional middleware and optimizations such as compression and caching mechanisms.</p>\n<h2>app.addRoute()</h2><a id=\"appaddroute\" title=\"app.addRoute()\"></a>\n<p>The <code>addRoute</code> method allows the application to register specific routes with corresponding handlers. This method takes a configuration object as its parameter, which includes the HTTP method, the route path, and the handler function. The addRoute method ensures that each route is mapped properly within the internal router and can handle requests accordingly.</p>\n<p>Exemple:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addRoute</span>({\n  <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>,\n  <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/users&#x27;</span>,\n  <span class=\"hljs-attr\">handler</span>: <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">users</span>: [<span class=\"hljs-string\">&#x27;John&#x27;</span>, <span class=\"hljs-string\">&#x27;Jane&#x27;</span>] });\n  }\n});\n</code></pre>\n             </div>\n<p>This example registers a GET route at the /users URL, with a handler that responds with a JSON object.</p>\n<h2>app.use()</h2><a id=\"appuse\" title=\"app.use()\"></a>\n<p>The <code>use</code> method is used to apply middleware functions to the application. Middleware functions are executed in the order they are registered, allowing for various operations such as request validation, logging, and response modifications.</p>\n<p><code>use</code> can also handle sub-applications or routers, making it a powerful tool for structuring large applications into smaller components.</p>\n<p>Exemple:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, next</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${req.method}</span> <span class=\"hljs-subst\">${req.url}</span>`</span>);\n  <span class=\"hljs-title function_\">next</span>(); <span class=\"hljs-comment\">// Pass control to the next middleware/route</span>\n});\n</code></pre>\n             </div>\n<p>In this example, every incoming request is logged before passing control to the next middleware or route handler.</p>\n<h2>app.render()</h2><a id=\"apprender\" title=\"app.render()\"></a>\n<p>The <code>render</code> method is responsible for rendering views in the application. It allows dynamic HTML templates to be rendered with data passed in by the application. This method typically works with template engines like Pug, which are registered via the <code>app.set()</code> method.</p>\n<p>Exemple:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;email&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, html</span>) {\n  <span class=\"hljs-comment\">// ...</span>\n})\n\napp.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;email&#x27;</span>, { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;Tobi&#x27;</span> }, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, html</span>) {\n  <span class=\"hljs-comment\">// ...</span>\n})\n</code></pre>\n             </div>\n<h2>app.route()</h2><a id=\"approute\" title=\"app.route()\"></a>\n<p>The <code>route</code> method provides a mechanism to define a route handler for a specific HTTP method and path. Unlike <code>addRoute</code>, which directly registers the handler, <code>route</code> returns an object where you can chain methods for configuring the route further.</p>\n<p>Exemple:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> userRoute = app.<span class=\"hljs-title function_\">route</span>(<span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>);\n\nuserRoute.<span class=\"hljs-property\">stack</span>.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n  res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">`User ID: <span class=\"hljs-subst\">${req.params.id}</span>`</span>);\n});\n</code></pre>\n             </div>\n<p>This example creates a <code>GET</code> route for <code>/user/:id</code> and registers a handler that responds with the user ID provided in the URL. The <code>route</code> method is especially useful when you need more control over how the route is handled, allowing for greater flexibility.</p>\n<h2>app.engine()</h2><a id=\"appengine\" title=\"app.engine()\"></a>\n<p>The <code>engine</code> method is used to register a template engine with the application for rendering dynamic views. Template engines allow HTML files to be dynamically populated with data before being served to the client.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><code>ext:</code> The file extension for which the engine should be registered. It can be a string representing the extension (e.g., <code>'ejs'</code> or <code>'pug'</code>).</li>\n<li><code>fn:</code> The callback function responsible for rendering the template. This function typically accepts the file path, options, and a callback to render the view.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">engine</span>(<span class=\"hljs-string\">&#x27;pug&#x27;</span>, <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;pug&#x27;</span>).<span class=\"hljs-property\">__express</span>);\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view engine&#x27;</span>, <span class=\"hljs-string\">&#x27;pug&#x27;</span>);\n</code></pre>\n             </div>\n<h2>app.set()</h2><a id=\"appset\" title=\"app.set()\"></a>\n<p>The <code>set</code> method is used to configure application settings. It can be used to either assign a value to a setting or retrieve the current value of a setting.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>setting:</strong> The name of the setting (e.g., <code>'view engine'</code>, <code>'env'</code>, <code>'etag'</code>).</li>\n<li><strong>val:</strong> The value to assign to the setting.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;env&#x27;</span>, <span class=\"hljs-string\">&#x27;production&#x27;</span>);\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view engine&#x27;</span>, <span class=\"hljs-string\">&#x27;pug&#x27;</span>);\n</code></pre>\n             </div>\n<p>In this example, the environment is set to <code>'production'</code>, and the view engine is set to <code>'pug'</code>.</p>\n<p><strong>Special Settings:</strong></p>\n<ul>\n<li><code>'etag':</code> Configures the ETag generation mechanism for caching.</li>\n<li><code>'query parser':</code> Sets how the query string should be parsed.</li>\n<li><code>'trust proxy':</code> Determines if the app should trust reverse proxies.</li>\n</ul>\n<h2>app.param()</h2><a id=\"appparam\" title=\"app.param()\"></a>\n<p>The <code>param</code> method is used to define route parameter preprocessing. This is useful for middleware that performs actions on specific route parameters before the request is processed.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><code>name:</code> The name of the route parameter, or an array of parameter names.</li>\n<li><code>fn:</code> A callback function to handle the route parameter. The callback receives <code>(req, res, next, value)</code>.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, next, id</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Received ID: <span class=\"hljs-subst\">${id}</span>`</span>);\n  <span class=\"hljs-title function_\">next</span>();\n});\n</code></pre>\n             </div>\n<p>This example logs the <code>id</code> parameter whenever a route that includes <code>:id</code> is hit.</p>\n<h2>app.path()</h2><a id=\"apppath\" title=\"app.path()\"></a>\n<p>The <code>path</code> method returns the application’s absolute pathname. If the application is mounted at a specific path (e.g., <code>/admin</code>), it will return the full mount path, including any parent application mounts.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> admin = <span class=\"hljs-title function_\">express</span>();\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-string\">&#x27;/admin&#x27;</span>, admin);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(admin.<span class=\"hljs-title function_\">path</span>());  <span class=\"hljs-comment\">// Outputs: &#x27;/admin&#x27;</span>\n</code></pre>\n             </div>\n<h2>app.enabled()</h2><a id=\"appenabled\" title=\"app.enabled()\"></a>\n<p>The <code>enabled</code> method checks if a specific setting is enabled (i.e., truthy). It returns <code>true</code> if the setting is enabled, and <code>false</code> if it is not.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>, <span class=\"hljs-literal\">true</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(app.<span class=\"hljs-title function_\">enabled</span>(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>));  <span class=\"hljs-comment\">// Outputs: true</span>\n</code></pre>\n             </div>\n<h2>app.disabled()</h2><a id=\"appdisabled\" title=\"app.disabled()\"></a>\n<p>The <code>disabled</code> method checks if a specific setting is disabled (i.e., falsy). It returns <code>true</code> if the setting is disabled, and <code>false</code> if it is not.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>, <span class=\"hljs-literal\">false</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(app.<span class=\"hljs-title function_\">disabled</span>(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>));  <span class=\"hljs-comment\">// Outputs: true</span>\n</code></pre>\n             </div>\n<h2>app.enable()</h2><a id=\"appenable\" title=\"app.enable()\"></a>\n<p>The <code>enable</code> method enables a specific setting, making it truthy.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">enable</span>(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(app.<span class=\"hljs-title function_\">enabled</span>(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>));  <span class=\"hljs-comment\">// Outputs: true</span>\n</code></pre>\n             </div>\n<h2>app.disable()</h2><a id=\"appdisable\" title=\"app.disable()\"></a>\n<p>The <code>disable</code> method disables a specific setting, making it falsy.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">disable</span>(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(app.<span class=\"hljs-title function_\">disabled</span>(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>));  <span class=\"hljs-comment\">// Outputs: true</span>\n</code></pre>\n             </div>\n<h2>app.setErrorHandler()</h2><a id=\"appseterrorhandler\" title=\"app.setErrorHandler()\"></a>\n<p>The <code>setErrorHandler</code> method sets a global error handler for the application. This handler will be invoked whenever an error occurs during request processing. The default error handler will be overridden by the one provided in this method.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">setErrorHandler</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">error, req, res</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&#x27;Error occurred:&#x27;</span>, error);\n  res.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">500</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">error</span>: <span class=\"hljs-string\">&#x27;Internal Server Error&#x27;</span> });\n});\n</code></pre>\n             </div>\n<h2>app.addHook()</h2><a id=\"appaddhook\" title=\"app.addHook()\"></a>\n<p>The <code>addHook</code> method allows you to attach hooks to specific lifecycle events during the request-response cycle. You can add hooks for events such as <code>onSend</code>, <code>preSerialization</code>, <code>onError</code>, and more.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onSend&#x27;</span>, <span class=\"hljs-title function_\">async</span> (request, response, payload) =&gt; {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Response being sent for URL:&#x27;</span>, request.<span class=\"hljs-property\">url</span>);\n});\n</code></pre>\n             </div>\n<p>This example adds a hook for the onSend event that logs a message just before the response is sent to the client.</p>\n<h2>app.addContentTypeParser()</h2><a id=\"appaddcontenttypeparser\" title=\"app.addContentTypeParser()\"></a>\n<p>The <code>addContentTypeParser</code> method registers a custom content-type parser for handling different types of request bodies. It allows the application to parse specific content types such as XML, YAML, etc.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addContentTypeParser</span>(<span class=\"hljs-string\">&#x27;application/xml&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, body, done</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> parsed = <span class=\"hljs-title function_\">parseXml</span>(body); <span class=\"hljs-comment\">// Custom XML parsing logic</span>\n  <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, parsed);\n});\n</code></pre>\n             </div>\n<p>This example registers a custom parser for application/xml content type that converts XML into a usable JavaScript object.</p>\n<h2>app.contentTypeParser()</h2><a id=\"appcontenttypeparser\" title=\"app.contentTypeParser()\"></a>\n<p>The <code>contentTypeParser</code> method is used internally to process incoming request bodies based on the registered content-type parsers. It finds the parser for the given content type and applies it to the request body.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">contentTypeParser</span>(<span class=\"hljs-string\">&#x27;application/json&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, next</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">body</span>); <span class=\"hljs-comment\">// Process parsed JSON body</span>\n  <span class=\"hljs-title function_\">next</span>();\n}, req, res);\n</code></pre>\n             </div>\n<p>This example processes requests with a content type of application/json and logs the parsed body.</p>\n<h2>app.METHOD</h2><a id=\"appmethod\" title=\"app.METHOD\"></a>\n<p>The <code>app.METHOD()</code> functions in the framework allow you to define routes based on specific HTTP methods, such as <code>GET</code>, <code>PUT</code>, <code>POST</code>, and <code>DELETE</code>. Each HTTP method corresponds to a method call on the application object, for example, <code>app.get()</code>, <code>app.post()</code>, <code>app.put()</code>, etc. These methods handle incoming requests by routing them to the appropriate callback based on the HTTP method and URL.</p>\n<p>While the documentation focuses primarily on the most common methods (<code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>), other HTTP methods like <code>PATCH</code>, <code>OPTIONS</code>, and <code>HEAD</code> are supported in the same way. You can define routes using any standard HTTP method by using the corresponding function on the app object.</p>\n<p>For HTTP methods that are not valid JavaScript variable names (e.g., <code>M-SEARCH</code>), you can use bracket notation to define the route. For example:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app[<span class=\"hljs-string\">&#x27;m-search&#x27;</span>](<span class=\"hljs-string\">&#x27;/&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res</span>) {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;M-SEARCH request&#x27;</span>);\n});\n</code></pre>\n             </div>\n<p>Additionally, when defining a route with <code>app.get()</code>, the framework automatically handles <code>HEAD</code> requests for the same path, unless you explicitly define <code>app.head()</code> for that path.</p>\n<p>The <code>app.all()</code> function is special in that it routes requests of all HTTP methods to a specific path. This is not derived from any one HTTP method, making it useful for middleware or handling any type of request at a given route.</p>\n<p>For more detailed information on routing and the various HTTP methods supported, see the routing guide in the documentation.</p>\n<table style=\"border: 0px; background: none\">\n<tbody><tr>\n<td style=\"background: none; border: 0px;\">\n<ul>\n<li><code>checkout</code></li>\n<li><code>copy</code></li>\n<li><code>delete</code></li>\n<li><code>get</code></li>\n<li><code>head</code></li>\n<li><code>lock</code></li>\n<li><code>merge</code></li>\n<li><code>mkactivity</code></li>\n</ul>\n</td>\n<td style=\"background: none; border: 0px;\">\n<ul>\n<li><code>mkcol</code></li>\n<li><code>move</code></li>\n<li><code>m-search</code></li>\n<li><code>notify</code></li>\n<li><code>options</code></li>\n<li><code>patch</code></li>\n<li><code>post</code></li>\n</ul>\n</td>\n<td style=\"background: none; border: 0px;\">\n<ul>\n<li><code>purge</code></li>\n<li><code>put</code></li>\n<li><code>report</code></li>\n<li><code>search</code></li>\n<li><code>subscribe</code></li>\n<li><code>trace</code></li>\n<li><code>unlock</code></li>\n<li><code>unsubscribe</code></li>\n</ul>\n</td>\n</tr>\n</tbody></table>\n<h2>app.listen</h2><a id=\"applisten\" title=\"app.listen\"></a>\n<p>The <code>listen()</code> method starts the server on the specified host and port, returning a Promise that resolves when the server successfully starts listening for incoming connections, or rejects if an error occurs.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> listenOptions = { <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span> };\n\napp.<span class=\"hljs-title function_\">listen</span>(listenOptions)\n.<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">server</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> attr = server.<span class=\"hljs-title function_\">address</span>();\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Server is listening at <span class=\"hljs-subst\">${attr.address}</span>:<span class=\"hljs-subst\">${attr.port}</span>`</span>);\n})\n.<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&#x27;Failed to start the server:&#x27;</span>, err);\n});\n</code></pre>\n             </div>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "application",
                    "label": "Application"
                },
                {
                    "id": "appaddroute",
                    "label": "app.addRoute()"
                },
                {
                    "id": "appuse",
                    "label": "app.use()"
                },
                {
                    "id": "apprender",
                    "label": "app.render()"
                },
                {
                    "id": "approute",
                    "label": "app.route()"
                },
                {
                    "id": "appengine",
                    "label": "app.engine()"
                },
                {
                    "id": "appset",
                    "label": "app.set()"
                },
                {
                    "id": "appparam",
                    "label": "app.param()"
                },
                {
                    "id": "apppath",
                    "label": "app.path()"
                },
                {
                    "id": "appenabled",
                    "label": "app.enabled()"
                },
                {
                    "id": "appdisabled",
                    "label": "app.disabled()"
                },
                {
                    "id": "appenable",
                    "label": "app.enable()"
                },
                {
                    "id": "appdisable",
                    "label": "app.disable()"
                },
                {
                    "id": "appseterrorhandler",
                    "label": "app.setErrorHandler()"
                },
                {
                    "id": "appaddhook",
                    "label": "app.addHook()"
                },
                {
                    "id": "appaddcontenttypeparser",
                    "label": "app.addContentTypeParser()"
                },
                {
                    "id": "appcontenttypeparser",
                    "label": "app.contentTypeParser()"
                },
                {
                    "id": "appmethod",
                    "label": "app.METHOD"
                },
                {
                    "id": "applisten",
                    "label": "app.listen"
                }
            ],
            "link": "docs/3-Server/1-Application.html",
            "links": {}
        }
    },
    "server/hooks": {
        "prev": {
            "link": "docs/server/application",
            "title": "Application",
            "desc": "The Application class is the core component that manages the server’s lifecycle,..."
        },
        "next": {
            "link": "docs/server/request",
            "title": "Request",
            "desc": "The req object represents the incoming HTTP request and provides access to vario..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/application\" />\n                    <link rel=\"next\" href=\"/docs/server/request\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Hooks\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/application\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/hooks\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/request\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Hooks</h1><a id=\"hooks\" title=\"Hooks\"></a>\n<p>The hook system in this server framework is designed to follow a similar lifecycle as that of <a href=\"https://fastify.dev/docs/latest/Reference/Hooks/\" target=\"_blank\" rel=\"nofollow\">Fastify</a> but with hooks attached to the application. Hooks are functions that are executed at specific points in the request lifecycle, allowing for customizable behavior during the handling of a request. This system enables you to intercept and manipulate requests, responses, or errors at key points during the lifecycle.</p>\n<p>Each hook is attached to the application and can be defined using the <code>addHook()</code> method. The order in which hooks are called depends on the hook type. Below, we’ll cover three specific hooks: <code>onRequest</code>, <code>preParsing</code>, and <code>onRequestAbort</code>.</p>\n<h2>onRequest</h2><a id=\"onrequest\" title=\"onRequest\"></a>\n<p>The <code>onRequest</code> hook is executed right at the beginning of the request lifecycle, before any parsing of the request. This is the ideal place to perform operations such as authentication, logging, or setting up required request data.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onRequest&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, done</span>) =&gt;</span> {\n    <span class=\"hljs-title function_\">done</span>()\n});\n</code></pre>\n             </div>\n<p>Or <code>async/await</code>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onRequest&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">asyncMethod</span>()\n});\n</code></pre>\n             </div>\n<h2>preParsing</h2><a id=\"preparsing\" title=\"preParsing\"></a>\n<p>The <code>preParsing</code> hook is called after the <code>onRequest</code> hook, but before the request body or query parameters are parsed. It is ideal for cases where you need to manipulate or validate the raw request stream before parsing it (e.g., custom decompression or encryption).</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;preParsing&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Request is about to be parsed&#x27;</span>);\n    <span class=\"hljs-comment\">// Modify or inspect the raw request stream here</span>\n});\n</code></pre>\n             </div>\n<h2>onRequestAbort</h2><a id=\"onrequestabort\" title=\"onRequestAbort\"></a>\n<p>The <code>onRequestAbort</code> hook is triggered when the client aborts the request, typically due to a timeout or the client closing the connection before the server sends the response. This is useful for cleanup operations, such as canceling database queries or logging aborted requests.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onRequestAbort&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Request aborted: <span class=\"hljs-subst\">${req.id}</span>`</span>);\n    <span class=\"hljs-comment\">// Perform any cleanup tasks here</span>\n});\n</code></pre>\n             </div>\n<h2>onError</h2><a id=\"onerror\" title=\"onError\"></a>\n<p>The <code>onError</code> hook is triggered whenever an error occurs during the processing of a request. This hook provides an opportunity to log the error, transform it into a more meaningful response, or handle different types of errors in a custom way.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onError&#x27;</span>, <span class=\"hljs-title function_\">async</span> (error, req, res, done) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&#x27;Error occurred:&#x27;</span>, error);\n    res.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">500</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;An internal error occurred&#x27;</span> });\n    <span class=\"hljs-title function_\">done</span>();\n});\n</code></pre>\n             </div>\n<h2>onSend</h2><a id=\"onsend\" title=\"onSend\"></a>\n<p>The <code>onSend</code> hook is triggered just before the response is sent to the client, after the request has been processed. This is useful for modifying the response body, headers, or performing final checks before sending the response.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onSend&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res, payload) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Response is about to be sent&#x27;</span>);\n    <span class=\"hljs-comment\">// Modify the payload or headers</span>\n    res.<span class=\"hljs-title function_\">setHeader</span>(<span class=\"hljs-string\">&#x27;X-Custom-Header&#x27;</span>, <span class=\"hljs-string\">&#x27;CustomValue&#x27;</span>);\n    <span class=\"hljs-keyword\">return</span> payload;  <span class=\"hljs-comment\">// The modified or original payload to send</span>\n});\n</code></pre>\n             </div>\n<h2>onResponse</h2><a id=\"onresponse\" title=\"onResponse\"></a>\n<p>The <code>onResponse</code> hook is executed after the response has been fully sent to the client. This is useful for logging request and response information, performing cleanup tasks, or triggering analytics.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onResponse&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Response sent for request <span class=\"hljs-subst\">${req.id}</span>`</span>);\n    <span class=\"hljs-comment\">// Perform any post-response tasks such as logging</span>\n});\n</code></pre>\n             </div>\n<h2>onTimeout</h2><a id=\"ontimeout\" title=\"onTimeout\"></a>\n<p>The <code>onTimeout</code> hook is called when the request times out due to exceeding the allowed time for processing. This can happen when the server takes too long to respond. The hook is useful for logging timeout events or triggering alternative behavior when timeouts occur.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onTimeout&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Request timed out: <span class=\"hljs-subst\">${req.id}</span>`</span>);\n    res.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">408</span>).<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Request Timeout&#x27;</span> });\n});\n</code></pre>\n             </div>\n<h2>onListen</h2><a id=\"onlisten\" title=\"onListen\"></a>\n<p>The <code>onListen</code> hook is triggered when the server starts listening for requests on the specified port and host. It provides an opportunity to perform tasks like logging that the server has started or performing any post-startup operations.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onListen&#x27;</span>, <span class=\"hljs-title function_\">async</span> (server) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Server is now listening on <span class=\"hljs-subst\">${server.address().port}</span>`</span>);\n});\n</code></pre>\n             </div>\n<h2>onReady</h2><a id=\"onready\" title=\"onReady\"></a>\n<p>The <code>onReady</code> hook is called when the application is fully initialized and ready to handle incoming requests. This is useful for performing any operations that need to occur once the server is completely prepared, such as preloading data, checking system health, or logging a readiness event.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onReady&#x27;</span>, <span class=\"hljs-title function_\">async</span> () =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Application is ready to accept requests&#x27;</span>);\n});\n</code></pre>\n             </div>\n<h2>onClose</h2><a id=\"onclose\" title=\"onClose\"></a>\n<p>The <code>onClose</code> hook is triggered when the server is about to close or shut down. This is useful for cleanup tasks, such as closing database connections, releasing resources, or logging shutdown events.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onClose&#x27;</span>, <span class=\"hljs-title function_\">async</span> (server) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Server is shutting down&#x27;</span>);\n    <span class=\"hljs-comment\">// Perform cleanup tasks</span>\n});\n</code></pre>\n             </div>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "hooks",
                    "label": "Hooks"
                },
                {
                    "id": "onrequest",
                    "label": "onRequest"
                },
                {
                    "id": "preparsing",
                    "label": "preParsing"
                },
                {
                    "id": "onrequestabort",
                    "label": "onRequestAbort"
                },
                {
                    "id": "onerror",
                    "label": "onError"
                },
                {
                    "id": "onsend",
                    "label": "onSend"
                },
                {
                    "id": "onresponse",
                    "label": "onResponse"
                },
                {
                    "id": "ontimeout",
                    "label": "onTimeout"
                },
                {
                    "id": "onlisten",
                    "label": "onListen"
                },
                {
                    "id": "onready",
                    "label": "onReady"
                },
                {
                    "id": "onclose",
                    "label": "onClose"
                }
            ],
            "link": "docs/3-Server/2-Hooks.html",
            "links": {}
        }
    },
    "server/request": {
        "prev": {
            "link": "docs/server/hooks",
            "title": "Hooks",
            "desc": "The hook system in this server framework is designed to follow a similar lifecyc..."
        },
        "next": {
            "link": "docs/server/response",
            "title": "Response",
            "desc": "The res object represents the HTTP response in a server-side application and is..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/hooks\" />\n                    <link rel=\"next\" href=\"/docs/server/response\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Request\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/hooks\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/request\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/response\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Request</h1><a id=\"request\" title=\"Request\"></a>\n<p>The <code>req</code> object represents the incoming HTTP request and provides access to various properties and methods, such as the request’s query string, parameters, body, HTTP headers, and more. In this documentation, as well as by common convention, this object is referred to as req (with the HTTP response object being res). However, the actual names used for these objects can be defined by the parameters in the callback function you’re working within.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) {\n  res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;User: &#x27;</span> + req.<span class=\"hljs-property\">params</span>.<span class=\"hljs-property\">id</span>);\n});\n</code></pre>\n             </div>\n<p>Alternatively, you could name the parameters differently, like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">request, response</span>) {\n  response.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;User: &#x27;</span> + request.<span class=\"hljs-property\">params</span>.<span class=\"hljs-property\">id</span>);\n});\n</code></pre>\n             </div>\n<p>The <code>req</code> object extends Node.js’s core <code>http.IncomingMessage</code> object, which means it inherits all the built-in properties and methods of Node’s request object. In addition, the <code>req</code> object includes a number of added functionalities specific to HTTP request handling in your application, making it more powerful and easier to work with.</p>\n<h2>Properties</h2><a id=\"properties\" title=\"Properties\"></a>\n<h2>req.query</h2><a id=\"reqquery\" title=\"req.query\"></a>\n<p>Returns the parsed query string as an object. The query string is automatically parsed using the query parser (e.g., qs library).</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// URL: /search?name=John&amp;age=30</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">query</span>);  <span class=\"hljs-comment\">// { name: &#x27;John&#x27;, age: &#x27;30&#x27; }</span>\n</code></pre>\n             </div>\n<h2>req.querystring</h2><a id=\"reqquerystring\" title=\"req.querystring\"></a>\n<p>Returns the raw query string from the URL.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// URL: /search?name=John&amp;age=30</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">querystring</span>);  <span class=\"hljs-comment\">// &quot;name=John&amp;age=30&quot;</span>\n</code></pre>\n             </div>\n<h2>req.search</h2><a id=\"reqsearch\" title=\"req.search\"></a>\n<p>Returns the search string, which is the query string prefixed with a question mark (<code>?</code>).</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// URL: /search?name=John&amp;age=30</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">search</span>);  <span class=\"hljs-comment\">// &quot;?name=John&amp;age=30&quot;</span>\n</code></pre>\n             </div>\n<h2>req.socket</h2><a id=\"reqsocket\" title=\"req.socket\"></a>\n<p>Returns the request socket object, which represents the underlying connection.</p>\n<h2>req.protocol</h2><a id=\"reqprotocol\" title=\"req.protocol\"></a>\n<p>Returns the protocol used in the request (<code>http</code> or <code>https</code>). If the application is behind a proxy, it will also check the <code>X-Forwarded-Proto</code> header if the <code>trust proxy</code> setting is enabled.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">protocol</span>);  <span class=\"hljs-comment\">// &quot;https&quot;</span>\n</code></pre>\n             </div>\n<h2>req.headers</h2><a id=\"reqheaders\" title=\"req.headers\"></a>\n<p>Returns the request headers as an object.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">headers</span>[<span class=\"hljs-string\">&#x27;content-type&#x27;</span>]);  <span class=\"hljs-comment\">// &quot;application/json&quot;</span>\n</code></pre>\n             </div>\n<h2>req.url</h2><a id=\"requrl\" title=\"req.url\"></a>\n<p>Returns the request URL.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">url</span>);  <span class=\"hljs-comment\">// &quot;/search?name=John&amp;age=30&quot;</span>\n</code></pre>\n             </div>\n<h2>req.origin</h2><a id=\"reqorigin\" title=\"req.origin\"></a>\n<p>Returns the origin of the request, including the protocol and host.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">origin</span>);  <span class=\"hljs-comment\">// &quot;https://example.com&quot;</span>\n</code></pre>\n             </div>\n<h2>req.href</h2><a id=\"reqhref\" title=\"req.href\"></a>\n<p>Returns the full request URL, including the origin and original URL.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">href</span>);  <span class=\"hljs-comment\">// &quot;https://example.com/search?name=John&amp;age=30&quot;</span>\n</code></pre>\n             </div>\n<h2>req.secure</h2><a id=\"reqsecure\" title=\"req.secure\"></a>\n<p>Returns the HTTP method of the request (e.g., <code>GET</code>, <code>POST</code>, etc.).</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">method</span>);  <span class=\"hljs-comment\">// &quot;GET&quot;</span>\n</code></pre>\n             </div>\n<h2>req.path</h2><a id=\"reqpath\" title=\"req.path\"></a>\n<p>Returns the path of the request URL without the query string.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// URL: /search?name=John</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">path</span>);  <span class=\"hljs-comment\">// &quot;/search&quot;</span>\n</code></pre>\n             </div>\n<h2>req.host</h2><a id=\"reqhost\" title=\"req.host\"></a>\n<p>Returns the host name from the request, considering the <code>X-Forwarded-Host</code> header if the <code>trust proxy</code> setting is enabled.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">host</span>);  <span class=\"hljs-comment\">// &quot;example.com&quot;</span>\n</code></pre>\n             </div>\n<h2>req.hostname</h2><a id=\"reqhostname\" title=\"req.hostname\"></a>\n<p>Returns the hostname from the <code>Host</code> header, excluding the port number.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">hostname</span>);  <span class=\"hljs-comment\">// &quot;example.com&quot;</span>\n</code></pre>\n             </div>\n<h2>req.URL</h2><a id=\"requrl\" title=\"req.URL\"></a>\n<p>Returns a parsed URL object from the WHATWG URL API.</p>\n<h2>req.fresh</h2><a id=\"reqfresh\" title=\"req.fresh\"></a>\n<p>Returns <code>true</code> if the request is considered “fresh”, meaning the response has not changed since the last request (based on <code>Last-Modified</code> and/or <code>ETag</code> headers).</p>\n<h2>req.stale</h2><a id=\"reqstale\" title=\"req.stale\"></a>\n<p>Returns <code>true</code> if the request is considered “stale”, meaning the resource has changed since the last request.</p>\n<h2>req.idempotent</h2><a id=\"reqidempotent\" title=\"req.idempotent\"></a>\n<p>Returns <code>true</code> if the request method is idempotent (<code>GET</code>, <code>HEAD</code>, <code>PUT</code>, <code>DELETE</code>, etc.).</p>\n<h2>req.ip</h2><a id=\"reqip\" title=\"req.ip\"></a>\n<p>Returns the remote IP address of the request, considering the <code>trust proxy</code> setting.</p>\n<h2>req.ips</h2><a id=\"reqips\" title=\"req.ips\"></a>\n<p>Returns an array of IP addresses, with the client IP first, followed by any proxy addresses (when <code>trust proxy</code> is enabled).</p>\n<h2>req.length</h2><a id=\"reqlength\" title=\"req.length\"></a>\n<p>Returns the <code>Content-Length</code> header value as a number if present.</p>\n<h2>req.subdomains</h2><a id=\"reqsubdomains\" title=\"req.subdomains\"></a>\n<p>Returns an array of subdomains from the request’s hostname. The subdomains are determined by the <code>subdomain offset</code> setting.</p>\n<h2>req.xhr</h2><a id=\"reqxhr\" title=\"req.xhr\"></a>\n<p>Returns <code>true</code> if the request was made using an XMLHttpRequest (i.e., an Ajax request).</p>\n<h2>req.cookies</h2><a id=\"reqcookies\" title=\"req.cookies\"></a>\n<p>Returns the cookies sent by the client.</p>\n<h2>req.signedCookies</h2><a id=\"reqsignedcookies\" title=\"req.signedCookies\"></a>\n<p>Returns the signed cookies sent by the client.</p>\n<h2>Methods</h2><a id=\"methods\" title=\"Methods\"></a>\n<h2>req.header()</h2><a id=\"reqheader\" title=\"req.header()\"></a>\n<p>Alias for <code>req.get()</code>. Returns the value of the specified request header field.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">req.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>);  <span class=\"hljs-comment\">// &quot;application/json&quot;</span>\n</code></pre>\n             </div>\n<h2>req.get()</h2><a id=\"reqget\" title=\"req.get()\"></a>\n<p>Returns the value of the specified request header field.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">req.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>);  <span class=\"hljs-comment\">// &quot;application/json&quot;</span>\n</code></pre>\n             </div>\n<h2>req.accepts()</h2><a id=\"reqaccepts\" title=\"req.accepts()\"></a>\n<p>Checks if the specified MIME types are acceptable based on the Accept header. Returns the best match or <code>undefined</code>.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">req.<span class=\"hljs-title function_\">accepts</span>(<span class=\"hljs-string\">&#x27;html&#x27;</span>);  <span class=\"hljs-comment\">// &quot;html&quot;</span>\n</code></pre>\n             </div>\n<h2>req.acceptsEncodings()</h2><a id=\"reqacceptsencodings\" title=\"req.acceptsEncodings()\"></a>\n<p>Checks if the specified encodings are acceptable based on the <code>Accept-Encoding</code> header.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">req.<span class=\"hljs-title function_\">acceptsEncodings</span>(<span class=\"hljs-string\">&#x27;gzip&#x27;</span>);  <span class=\"hljs-comment\">// &quot;gzip&quot;</span>\n</code></pre>\n             </div>\n<h2>req.acceptsCharsets()</h2><a id=\"reqacceptscharsets\" title=\"req.acceptsCharsets()\"></a>\n<p>Checks if the specified charsets are acceptable based on the <code>Accept-Charset</code> header.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">req.<span class=\"hljs-title function_\">acceptsCharsets</span>(<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>);  <span class=\"hljs-comment\">// &quot;utf-8&quot;</span>\n</code></pre>\n             </div>\n<h2>req.acceptsLanguages()</h2><a id=\"reqacceptslanguages\" title=\"req.acceptsLanguages()\"></a>\n<p>Checks if the specified languages are acceptable based on the <code>Accept-Language</code> header.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">req.<span class=\"hljs-title function_\">acceptsLanguages</span>(<span class=\"hljs-string\">&#x27;en&#x27;</span>);  <span class=\"hljs-comment\">// &quot;en&quot;</span>\n</code></pre>\n             </div>\n<h2>req.range()</h2><a id=\"reqrange\" title=\"req.range()\"></a>\n<p>Parses the Range header and returns an array of ranges, or <code>-1</code> if unsatisfiable, or <code>-2</code> if invalid.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">req.<span class=\"hljs-title function_\">range</span>(<span class=\"hljs-number\">1000</span>);  <span class=\"hljs-comment\">// [{ start: 0, end: 999 }]</span>\n</code></pre>\n             </div>\n<h2>req.is()</h2><a id=\"reqis\" title=\"req.is()\"></a>\n<p>Checks if the request’s <code>Content-Type</code> matches the specified MIME type.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">req.<span class=\"hljs-title function_\">is</span>(<span class=\"hljs-string\">&#x27;json&#x27;</span>);  <span class=\"hljs-comment\">// &quot;json&quot;</span>\n</code></pre>\n             </div>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "request",
                    "label": "Request"
                },
                {
                    "id": "properties",
                    "label": "Properties"
                },
                {
                    "id": "reqquery",
                    "label": "req.query"
                },
                {
                    "id": "reqquerystring",
                    "label": "req.querystring"
                },
                {
                    "id": "reqsearch",
                    "label": "req.search"
                },
                {
                    "id": "reqsocket",
                    "label": "req.socket"
                },
                {
                    "id": "reqprotocol",
                    "label": "req.protocol"
                },
                {
                    "id": "reqheaders",
                    "label": "req.headers"
                },
                {
                    "id": "requrl",
                    "label": "req.url"
                },
                {
                    "id": "reqorigin",
                    "label": "req.origin"
                },
                {
                    "id": "reqhref",
                    "label": "req.href"
                },
                {
                    "id": "reqsecure",
                    "label": "req.secure"
                },
                {
                    "id": "reqpath",
                    "label": "req.path"
                },
                {
                    "id": "reqhost",
                    "label": "req.host"
                },
                {
                    "id": "reqhostname",
                    "label": "req.hostname"
                },
                {
                    "id": "requrl",
                    "label": "req.URL"
                },
                {
                    "id": "reqfresh",
                    "label": "req.fresh"
                },
                {
                    "id": "reqstale",
                    "label": "req.stale"
                },
                {
                    "id": "reqidempotent",
                    "label": "req.idempotent"
                },
                {
                    "id": "reqip",
                    "label": "req.ip"
                },
                {
                    "id": "reqips",
                    "label": "req.ips"
                },
                {
                    "id": "reqlength",
                    "label": "req.length"
                },
                {
                    "id": "reqsubdomains",
                    "label": "req.subdomains"
                },
                {
                    "id": "reqxhr",
                    "label": "req.xhr"
                },
                {
                    "id": "reqcookies",
                    "label": "req.cookies"
                },
                {
                    "id": "reqsignedcookies",
                    "label": "req.signedCookies"
                },
                {
                    "id": "methods",
                    "label": "Methods"
                },
                {
                    "id": "reqheader",
                    "label": "req.header()"
                },
                {
                    "id": "reqget",
                    "label": "req.get()"
                },
                {
                    "id": "reqaccepts",
                    "label": "req.accepts()"
                },
                {
                    "id": "reqacceptsencodings",
                    "label": "req.acceptsEncodings()"
                },
                {
                    "id": "reqacceptscharsets",
                    "label": "req.acceptsCharsets()"
                },
                {
                    "id": "reqacceptslanguages",
                    "label": "req.acceptsLanguages()"
                },
                {
                    "id": "reqrange",
                    "label": "req.range()"
                },
                {
                    "id": "reqis",
                    "label": "req.is()"
                }
            ],
            "link": "docs/3-Server/3-Request.html",
            "links": {}
        }
    },
    "server/response": {
        "prev": {
            "link": "docs/server/request",
            "title": "Request",
            "desc": "The req object represents the incoming HTTP request and provides access to vario..."
        },
        "next": {
            "link": "docs/server/content-parser",
            "title": "Content Type Parser",
            "desc": "One of the powerful features of the @cmmv/server framework is its ability to cre..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/request\" />\n                    <link rel=\"next\" href=\"/docs/server/content-parser\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Response\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/request\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/response\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/content-parser\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Response</h1><a id=\"response\" title=\"Response\"></a>\n<p>The <code>res</code> object represents the HTTP response in a server-side application and is responsible for managing and sending responses back to the client. This object allows you to set status codes, headers, cookies, and more. It is an enhanced version of the standard Node.js <code>ServerResponse</code> object, providing additional features for greater control over the response.  <code>res</code> object is commonly used to send various types of responses—such as HTML, JSON, or files—to the client. By convention, the <code>res</code> object refers to the response (and req refers to the request), but its name can be different depending on the parameters used in your callback function.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) {\n  res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;user &#x27;</span> + req.<span class=\"hljs-property\">params</span>.<span class=\"hljs-property\">id</span>);\n});\n</code></pre>\n             </div>\n<p>You can also name the parameters differently, like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">request, response</span>) {\n  response.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;user &#x27;</span> + request.<span class=\"hljs-property\">params</span>.<span class=\"hljs-property\">id</span>);\n});\n</code></pre>\n             </div>\n<p>The res object not only supports all built-in methods and properties of Node’s core <code>ServerResponse</code> but also offers additional capabilities, making it easier to manage the HTTP lifecycle in modern applications.</p>\n<h2>Properties</h2><a id=\"properties\" title=\"Properties\"></a>\n<h3>res.socket</h3>\n<p>Returns the request socket.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res.<span class=\"hljs-property\">socket</span>);\n</code></pre>\n             </div>\n<h3>res.status</h3>\n<p>Retrieves the HTTP status code of the response.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res.<span class=\"hljs-property\">status</span>); <span class=\"hljs-comment\">// Outputs the status code</span>\n</code></pre>\n             </div>\n<h3>res.now</h3>\n<p>Returns the current timestamp in milliseconds.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res.<span class=\"hljs-property\">now</span>); <span class=\"hljs-comment\">// Outputs the current timestamp</span>\n</code></pre>\n             </div>\n<h3>res.elapsedTime</h3>\n<p>Returns the elapsed time in milliseconds since the response started.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res.<span class=\"hljs-property\">elapsedTime</span>); <span class=\"hljs-comment\">// Outputs the time elapsed</span>\n</code></pre>\n             </div>\n<h3>res.sent</h3>\n<p>Checks if the response has already been sent.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">if</span> (res.<span class=\"hljs-property\">sent</span>) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Response already sent&#x27;</span>);\n}\n</code></pre>\n             </div>\n<h3>res.headerSent</h3>\n<p>Returns <code>true</code> if the headers have already been sent.</p>\n<h3>res.writable</h3>\n<p>Returns <code>true</code> if the response is still writable (not ended).</p>\n<h3>res.message (get/set)</h3>\n<p>Retrieves the HTTP status message of the response.</p>\n<h3>res.body (get/set)</h3>\n<p>Returns/set the response body, Can accept different types such as string, Buffer, Object, Stream.</p>\n<h3>res.length (get/set)</h3>\n<p>Returns the length of the response content. / Sets the Content-Length header to n.</p>\n<h3>res.status (get/set)</h3>\n<p>Sets the HTTP status code for the response.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-property\">status</span> = <span class=\"hljs-number\">404</span>;\n</code></pre>\n             </div>\n<h3>res.lastModified (get/set)</h3>\n<p>Sets the <code>Last-Modified</code> header using a string or a <code>Date</code>.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-property\">lastModified</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();\n</code></pre>\n             </div>\n<h2>Methods</h2><a id=\"methods\" title=\"Methods\"></a>\n<h2>res.has(field)</h2><a id=\"reshasfield\" title=\"res.has(field)\"></a>\n<p>Checks if a specific header is present in the response.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">if</span> (res.<span class=\"hljs-title function_\">has</span>(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>)) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Content-Type header is set&#x27;</span>);\n}\n</code></pre>\n             </div>\n<h2>res.remove(field)</h2><a id=\"resremovefield\" title=\"res.remove(field)\"></a>\n<p>Removes a specific header from the response.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">remove</span>(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>);\n</code></pre>\n             </div>\n<h2>res.hijack()</h2><a id=\"reshijack\" title=\"res.hijack()\"></a>\n<p>Marks the response as hijacked.</p>\n<h2>res.code(code)</h2><a id=\"rescodecode\" title=\"res.code(code)\"></a>\n<p>Sets the HTTP status code and returns the response for chaining.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">code</span>(<span class=\"hljs-number\">200</span>);\n</code></pre>\n             </div>\n<h2>res.links(links)</h2><a id=\"reslinkslinks\" title=\"res.links(links)\"></a>\n<p>Sets the <code>Link</code> header field with the given <code>links</code> object.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">links</span>({\n  <span class=\"hljs-attr\">next</span>: <span class=\"hljs-string\">&#x27;http://example.com/page2&#x27;</span>,\n  <span class=\"hljs-attr\">last</span>: <span class=\"hljs-string\">&#x27;http://example.com/page5&#x27;</span>\n});\n</code></pre>\n             </div>\n<h2>res.header(field, val)</h2><a id=\"resheaderfield-val\" title=\"res.header(field, val)\"></a>\n<p>Sets a header field to a specific value.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">header</span>(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>, <span class=\"hljs-string\">&#x27;application/json&#x27;</span>);\n</code></pre>\n             </div>\n<h2>res.get(field)</h2><a id=\"resgetfield\" title=\"res.get(field)\"></a>\n<p>Retrieves the value of a specific header.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(res.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>));\n</code></pre>\n             </div>\n<h2>res.type(type)</h2><a id=\"restypetype\" title=\"res.type(type)\"></a>\n<p>Sets the <code>Content-Type</code> based on the provided type.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">type</span>(<span class=\"hljs-string\">&#x27;json&#x27;</span>);\n</code></pre>\n             </div>\n<h2>res.sendStatus(statusCode)</h2><a id=\"ressendstatusstatuscode\" title=\"res.sendStatus(statusCode)\"></a>\n<p>Sends the HTTP status code with the standard message.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">sendStatus</span>(<span class=\"hljs-number\">404</span>);\n</code></pre>\n             </div>\n<h2>res.send(payload)</h2><a id=\"ressendpayload\" title=\"res.send(payload)\"></a>\n<p>Sends the response with the provided payload.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">send</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Hello World&#x27;</span> });\n</code></pre>\n             </div>\n<h2>res.json(obj)</h2><a id=\"resjsonobj\" title=\"res.json(obj)\"></a>\n<p>Sends a JSON response.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">user</span>: <span class=\"hljs-string\">&#x27;John&#x27;</span> });\n</code></pre>\n             </div>\n<h2>res.jsonp(obj)</h2><a id=\"resjsonpobj\" title=\"res.jsonp(obj)\"></a>\n<p>Sends a JSONP response with callback support.</p>\n<h2>res.sendFile(path, opt, cb)</h2><a id=\"ressendfilepath-opt-cb\" title=\"res.sendFile(path, opt, cb)\"></a>\n<p>The <code>res.sendFile()</code> function is used to transfer the file located at a given <code>path</code> to the client. It automatically sets the <code>Content-Type</code> response header based on the file extension and triggers a callback when the file transfer is complete or if an error occurs. This method is particularly useful for serving static files or dynamically serving files in response to requests.</p>\n<p>Here’s an overview of how <code>res.sendFile()</code> works, along with additional options that can be used to control file serving behavior.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>maxAge</code></td>\n<td>number/string</td>\n<td><code>0</code></td>\n<td>Specifies the <code>Cache-Control</code> max-age property in milliseconds or a string (converted by <code>ms</code>). Used to set how long the file is cached by clients.</td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>string</td>\n<td><code>undefined</code></td>\n<td>The root directory from which relative file paths are resolved. Without <code>root</code>, the <code>path</code> must be an absolute path.</td>\n</tr>\n<tr>\n<td><code>headers</code></td>\n<td>object</td>\n<td><code>{}</code></td>\n<td>Object containing custom headers that will be added to the response when the file is served.</td>\n</tr>\n<tr>\n<td><code>dotfiles</code></td>\n<td>string</td>\n<td><code>'ignore'</code></td>\n<td>Determines how dotfiles (files or directories starting with a dot, like <code>.gitignore</code>) are handled. Can be set to <code>'allow'</code>, <code>'deny'</code>, or <code>'ignore'</code>.</td>\n</tr>\n<tr>\n<td><code>etag</code></td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>Whether to generate an <code>ETag</code> header for the file.</td>\n</tr>\n<tr>\n<td><code>lastModified</code></td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>Whether to set the <code>Last-Modified</code> header for the file.</td>\n</tr>\n<tr>\n<td><code>cacheControl</code></td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>Enables or disables setting the <code>Cache-Control</code> header in the response.</td>\n</tr>\n<tr>\n<td><code>acceptRanges</code></td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>Allows partial content (via the <code>Range</code> header). This enables clients to request parts of the file, especially for video and audio streaming.</td>\n</tr>\n<tr>\n<td><code>immutable</code></td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>When set to <code>true</code>, adds <code>Cache-Control: immutable</code> to the response, indicating the file will never change and can be cached indefinitely.</td>\n</tr>\n</tbody>\n</table>\n<h2>res.download(path, filename, opt, cb)</h2><a id=\"resdownloadpath-filename-opt-cb\" title=\"res.download(path, filename, opt, cb)\"></a>\n<p>The <code>res.download()</code> method is used to transfer the file located at the specified <code>path</code> as an attachment. This prompts the client to download the file. You can optionally provide a different filename for the downloaded file, and a callback function to handle any errors that may occur during the transfer.</p>\n<p>This method also accepts an <code>options</code> object similar to the one used with <code>res.sendFile()</code>. The <code>Content-Disposition</code> header is automatically set to signal that the file should be downloaded as an attachment, overriding any previously set <code>Content-Disposition</code> headers.</p>\n<p>Internally, this method uses <code>res.sendFile()</code> to handle the file transfer.</p>\n<h2>res.end(payload, encoding, cb)</h2><a id=\"resendpayload-encoding-cb\" title=\"res.end(payload, encoding, cb)\"></a>\n<p>Ends the response process.</p>\n<h2>res.format(obj)</h2><a id=\"resformatobj\" title=\"res.format(obj)\"></a>\n<p>Responds to the request by calling the appropriate callback from the object <code>obj</code> based on the <code>Accept</code> header.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">format</span>({\n  <span class=\"hljs-string\">&#x27;text/plain&#x27;</span>: <span class=\"hljs-function\">() =&gt;</span> res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Plain text&#x27;</span>),\n  <span class=\"hljs-string\">&#x27;application/json&#x27;</span>: <span class=\"hljs-function\">() =&gt;</span> res.<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;JSON&#x27;</span> })\n});\n</code></pre>\n             </div>\n<h2>res.vary(field)</h2><a id=\"resvaryfield\" title=\"res.vary(field)\"></a>\n<p>Adds the given field to the <code>Vary</code> header.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">vary</span>(<span class=\"hljs-string\">&#x27;Accept-Encoding&#x27;</span>);\n</code></pre>\n             </div>\n<h2>res.attachment(filename)</h2><a id=\"resattachmentfilename\" title=\"res.attachment(filename)\"></a>\n<p>Sets the <code>Content-Disposition</code> header to attachment and sets the file name.</p>\n<h2>res.append(field, val)</h2><a id=\"resappendfield-val\" title=\"res.append(field, val)\"></a>\n<p>Appends a value to a specific header.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">append</span>(<span class=\"hljs-string\">&#x27;Link&#x27;</span>, [<span class=\"hljs-string\">&#x27;&lt;http://localhost/&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;&lt;http://localhost:3000/&gt;&#x27;</span>]);\nres.<span class=\"hljs-title function_\">append</span>(<span class=\"hljs-string\">&#x27;Set-Cookie&#x27;</span>, <span class=\"hljs-string\">&#x27;foo=bar; Path=/; HttpOnly&#x27;</span>);\nres.<span class=\"hljs-title function_\">append</span>(<span class=\"hljs-string\">&#x27;Warning&#x27;</span>, <span class=\"hljs-string\">&#x27;199 Miscellaneous warning&#x27;</span>);\n</code></pre>\n             </div>\n<h2>res.location(url)</h2><a id=\"reslocationurl\" title=\"res.location(url)\"></a>\n<p>Sets the <code>Location</code> header to the given URL.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">location</span>(<span class=\"hljs-string\">&#x27;/foo/bar&#x27;</span>).;\nres.<span class=\"hljs-title function_\">location</span>(<span class=\"hljs-string\">&#x27;http://example.com&#x27;</span>);\nres.<span class=\"hljs-title function_\">location</span>(<span class=\"hljs-string\">&#x27;../login&#x27;</span>);\n</code></pre>\n             </div>\n<h2>res.redirect(url, alt)</h2><a id=\"resredirecturl-alt\" title=\"res.redirect(url, alt)\"></a>\n<p>Performs a 302 redirect to the specified URL.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">redirect</span>(<span class=\"hljs-string\">&#x27;back&#x27;</span>);\n<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">redirect</span>(<span class=\"hljs-string\">&#x27;back&#x27;</span>, <span class=\"hljs-string\">&#x27;/index.html&#x27;</span>);\n<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">redirect</span>(<span class=\"hljs-string\">&#x27;/login&#x27;</span>);\n<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">redirect</span>(<span class=\"hljs-string\">&#x27;http://google.com&#x27;</span>);\n</code></pre>\n             </div>\n<h2>res.clearCookie(name, options)</h2><a id=\"resclearcookiename-options\" title=\"res.clearCookie(name, options)\"></a>\n<p>Clears the cookie with the given name.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">clearCookie</span>(<span class=\"hljs-string\">&#x27;session_id&#x27;</span>);\n</code></pre>\n             </div>\n<h2>res.cookie(name, value, options)</h2><a id=\"rescookiename-value-options\" title=\"res.cookie(name, value, options)\"></a>\n<p>The <code>res.cookie()</code> method is used to set a cookie with a specified name and value. It allows you to define additional options to control the behavior of the cookie, such as its expiration time, security flags, and more. The method is chainable, meaning you can call it multiple times in a single response.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Set a cookie that expires in 15 minutes</span>\nres.<span class=\"hljs-title function_\">cookie</span>(<span class=\"hljs-string\">&#x27;rememberme&#x27;</span>, <span class=\"hljs-string\">&#x27;1&#x27;</span>, { \n    <span class=\"hljs-attr\">expires</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(<span class=\"hljs-title class_\">Date</span>.<span class=\"hljs-title function_\">now</span>() + <span class=\"hljs-number\">900000</span>), \n    <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span> \n});\n\n<span class=\"hljs-comment\">// Set a cookie with max-age of 15 minutes (in milliseconds)</span>\nres.<span class=\"hljs-title function_\">cookie</span>(<span class=\"hljs-string\">&#x27;rememberme&#x27;</span>, <span class=\"hljs-string\">&#x27;1&#x27;</span>, { \n    <span class=\"hljs-attr\">maxAge</span>: <span class=\"hljs-number\">900000</span>, \n    <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span> \n});\n</code></pre>\n             </div>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>maxAge</code></td>\n<td>number</td>\n<td><code>undefined</code></td>\n<td>Specifies the cookie’s <code>max-age</code> in milliseconds. If set, it overrides the <code>expires</code> option.</td>\n</tr>\n<tr>\n<td><code>expires</code></td>\n<td>Date</td>\n<td><code>undefined</code></td>\n<td>Sets the cookie’s expiration date. Use <code>maxAge</code> as an alternative for setting relative expiration time.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>string</td>\n<td><code>'/'</code></td>\n<td>Defines the URL path for which the cookie is valid. Defaults to the root path <code>/</code>.</td>\n</tr>\n<tr>\n<td><code>domain</code></td>\n<td>string</td>\n<td><code>undefined</code></td>\n<td>Specifies the domain for which the cookie is valid.</td>\n</tr>\n<tr>\n<td><code>secure</code></td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>Marks the cookie as secure, ensuring it is only sent over HTTPS.</td>\n</tr>\n<tr>\n<td><code>httpOnly</code></td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>Marks the cookie as HTTP-only, meaning it can’t be accessed via JavaScript in the browser.</td>\n</tr>\n<tr>\n<td><code>signed</code></td>\n<td>boolean</td>\n<td><code>false</code></td>\n<td>Indicates whether the cookie should be signed. Requires a secret to be set in <code>cookieParser()</code>.</td>\n</tr>\n<tr>\n<td><code>sameSite</code></td>\n<td>boolean/string</td>\n<td><code>false</code></td>\n<td>Restricts how the cookie is sent across sites. Can be <code>'strict'</code>, <code>'lax'</code>, or <code>true</code> (which sets to <code>'strict'</code>).</td>\n</tr>\n</tbody>\n</table>\n<h2>res.render(view, opt, cb)</h2><a id=\"resrenderview-opt-cb\" title=\"res.render(view, opt, cb)\"></a>\n<p>Renders a view template with the provided options and an optional callback function. If a callback is provided, it is executed once the view has been rendered, and no automatic response is sent. If no callback is provided, the method sends a default response with a status code of <code>200</code> and content type <code>text/html</code>.</p>\n<p><strong>Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/about&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;about&#x27;</span>, { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;About Us&#x27;</span>, <span class=\"hljs-attr\">company</span>: <span class=\"hljs-string\">&#x27;MyCompany&#x27;</span> });\n});\n</code></pre>\n             </div>\n<p><strong>Callback Example:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/custom-view&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;custom&#x27;</span>, { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Custom Page&#x27;</span> }, <span class=\"hljs-function\">(<span class=\"hljs-params\">err, html</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (err) \n            <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">500</span>).<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Error rendering the page.&#x27;</span>);\n        \n        res.<span class=\"hljs-title function_\">send</span>(html);\n    });\n});\n</code></pre>\n             </div>\n<p>In this example, a custom callback function is provided. If an error occurs during rendering, the callback handles it by sending a <code>500</code> status code and error message to the client.</p>\n<h2>Response Compatibility</h2><a id=\"response-compatibility\" title=\"Response Compatibility\"></a>\n<h3>res.trailer(key, fn)</h3>\n<p>Sets a trailer header with the provided key and function.</p>\n<h3>res.flushHeaders()</h3>\n<p>Flushes the response headers.</p>\n<h3>res.getHeaderNames()</h3>\n<p>Returns an array of the names of the headers currently set in the response.</p>\n<h3>res.getHeaders()</h3>\n<p>Returns the response headers object.</p>\n<h3>res.hasHeader(name)</h3>\n<p>Checks if a specific header is present in the response.</p>\n<h3>res.removeHeader(name)</h3>\n<p>Removes a specific header from the response.</p>\n<h3>res.setTimeout(msecs, cb)</h3>\n<p>Sets a timeout for the response.</p>\n<h3>res.uncork()</h3>\n<p>Uncorks the response stream.</p>\n<h3>res.writeEarlyHints(hints, callback)</h3>\n<p>Writes HTTP/1.1 103 Early Hints with the provided hints object.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "response",
                    "label": "Response"
                },
                {
                    "id": "properties",
                    "label": "Properties"
                },
                {
                    "id": "methods",
                    "label": "Methods"
                },
                {
                    "id": "reshasfield",
                    "label": "res.has(field)"
                },
                {
                    "id": "resremovefield",
                    "label": "res.remove(field)"
                },
                {
                    "id": "reshijack",
                    "label": "res.hijack()"
                },
                {
                    "id": "rescodecode",
                    "label": "res.code(code)"
                },
                {
                    "id": "reslinkslinks",
                    "label": "res.links(links)"
                },
                {
                    "id": "resheaderfield-val",
                    "label": "res.header(field, val)"
                },
                {
                    "id": "resgetfield",
                    "label": "res.get(field)"
                },
                {
                    "id": "restypetype",
                    "label": "res.type(type)"
                },
                {
                    "id": "ressendstatusstatuscode",
                    "label": "res.sendStatus(statusCode)"
                },
                {
                    "id": "ressendpayload",
                    "label": "res.send(payload)"
                },
                {
                    "id": "resjsonobj",
                    "label": "res.json(obj)"
                },
                {
                    "id": "resjsonpobj",
                    "label": "res.jsonp(obj)"
                },
                {
                    "id": "ressendfilepath-opt-cb",
                    "label": "res.sendFile(path, opt, cb)"
                },
                {
                    "id": "resdownloadpath-filename-opt-cb",
                    "label": "res.download(path, filename, opt, cb)"
                },
                {
                    "id": "resendpayload-encoding-cb",
                    "label": "res.end(payload, encoding, cb)"
                },
                {
                    "id": "resformatobj",
                    "label": "res.format(obj)"
                },
                {
                    "id": "resvaryfield",
                    "label": "res.vary(field)"
                },
                {
                    "id": "resattachmentfilename",
                    "label": "res.attachment(filename)"
                },
                {
                    "id": "resappendfield-val",
                    "label": "res.append(field, val)"
                },
                {
                    "id": "reslocationurl",
                    "label": "res.location(url)"
                },
                {
                    "id": "resredirecturl-alt",
                    "label": "res.redirect(url, alt)"
                },
                {
                    "id": "resclearcookiename-options",
                    "label": "res.clearCookie(name, options)"
                },
                {
                    "id": "rescookiename-value-options",
                    "label": "res.cookie(name, value, options)"
                },
                {
                    "id": "resrenderview-opt-cb",
                    "label": "res.render(view, opt, cb)"
                },
                {
                    "id": "response-compatibility",
                    "label": "Response Compatibility"
                }
            ],
            "link": "docs/3-Server/4-Response.html",
            "links": {}
        }
    },
    "server/content-parser": {
        "prev": {
            "link": "docs/server/response",
            "title": "Response",
            "desc": "The res object represents the HTTP response in a server-side application and is..."
        },
        "next": {
            "link": "docs/server/http2",
            "title": "HTTP2",
            "desc": "The @cmmv/server framework natively supports HTTP/2, which offers significant pe..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/response\" />\n                    <link rel=\"next\" href=\"/docs/server/http2\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Content Type Parser\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/response\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/content-parser\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/http2\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Content Type Parser</h1><a id=\"content-type-parser\" title=\"Content Type Parser\"></a>\n<p>One of the powerful features of the <code>@cmmv/server</code> framework is its ability to create and register middleware parsers that handle specific content types. Unlike traditional middleware systems (such as in Express), the middleware designed for parsing is only executed if the request’s <code>Content-Type</code> matches the specific type you have registered. This ensures that your application processes the request body efficiently and only when required.</p>\n<p>In this documentation, we will cover how to create generic middleware for parsing specific data types, focusing on the use of the <code>addContentTypeParser</code> function. This function allows you to register custom parsers for different content types.</p>\n<p>In web applications, different content types often require different parsing strategies. For example:</p>\n<ul>\n<li>JSON data should be parsed into JavaScript objects.</li>\n<li>XML or CSV may need special handling to parse correctly.</li>\n<li>Multipart form data may require a different strategy to extract files and fields.</li>\n</ul>\n<p>The <code>addContentTypeParser</code> function lets you register middleware to handle specific content types. This ensures that your parser is executed only when the content type matches what you defined.</p>\n<h2>Steps to Create</h2><a id=\"steps-to-create\" title=\"Steps to Create\"></a>\n<p><strong>1. Using <code>addContentTypeParser</code> to Register the Parser</strong></p>\n<p>To create a custom parser, you need to call the <code>addContentTypeParser</code> function within your application. This function accepts the content type(s) to be parsed and the handler function that defines the parsing behavior.</p>\n<p>The handler function should always be asynchronous, as it will typically perform I/O operations like reading the request body or processing files.</p>\n<p><strong>2. Defining the Asynchronous Handler Function</strong></p>\n<p>The handler function is where the actual parsing takes place. This function receives the request (<code>req</code>), response (<code>res</code>), and the raw body payload, which it processes and attaches to the req.body object.</p>\n<p>Here’s an example of how to create and register a custom parser for application/json content type using <code>addContentTypeParser</code>.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\n\n<span class=\"hljs-comment\">// Register a custom content type parser for &#x27;application/json&#x27;</span>\napp.<span class=\"hljs-title function_\">addContentTypeParser</span>(<span class=\"hljs-string\">&#x27;application/json&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res, payload) =&gt; {\n    <span class=\"hljs-comment\">// Convert the raw payload (buffer) into a string</span>\n    <span class=\"hljs-keyword\">const</span> bodyString = payload.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>);\n\n    <span class=\"hljs-comment\">// Parse the string into a JavaScript object</span>\n    <span class=\"hljs-keyword\">try</span> {\n        req.<span class=\"hljs-property\">body</span> = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(bodyString);\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;Invalid JSON payload&#x27;</span>);\n    }\n});\n</code></pre>\n             </div>\n<h2>Registering Multiple Parsers</h2><a id=\"registering-multiple-parsers\" title=\"Registering Multiple Parsers\"></a>\n<p>You can register multiple parsers for different content types in your application. Here’s an example that registers parsers for both <code>application/json</code> and <code>text/xml</code> content types.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> xml2js <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;xml2js&#x27;</span>;\n\n<span class=\"hljs-comment\">// Register a JSON parser</span>\napp.<span class=\"hljs-title function_\">addContentTypeParser</span>(<span class=\"hljs-string\">&#x27;application/json&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res, payload) =&gt; {\n    <span class=\"hljs-keyword\">const</span> jsonData = payload.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>);\n    <span class=\"hljs-keyword\">try</span> {\n        req.<span class=\"hljs-property\">body</span> = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(jsonData);\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;Invalid JSON payload&#x27;</span>);\n    }\n});\n\n<span class=\"hljs-comment\">// Register an XML parser</span>\napp.<span class=\"hljs-title function_\">addContentTypeParser</span>(<span class=\"hljs-string\">&#x27;text/xml&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res, payload) =&gt; {\n    <span class=\"hljs-keyword\">const</span> xmlData = payload.<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>);\n    <span class=\"hljs-keyword\">try</span> {\n        req.<span class=\"hljs-property\">body</span> = <span class=\"hljs-keyword\">await</span> xml2js.<span class=\"hljs-title function_\">parseStringPromise</span>(xmlData);\n    } <span class=\"hljs-keyword\">catch</span> (err) {\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;Invalid XML payload&#x27;</span>);\n    }\n});\n</code></pre>\n             </div>\n<p>The <code>addContentTypeParser</code> method in <code>@cmmv/server</code> provides a powerful way to create middleware that handles specific content types, allowing for flexible and efficient request body parsing. By registering custom parsers that only trigger for their respective content types, you can improve the performance and security of your application.</p>\n<p>With asynchronous handler functions, your middleware can handle complex data parsing, such as JSON, XML, or CSV, while maintaining non-blocking operations, making the framework ideal for high-performance server applications.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "content-type-parser",
                    "label": "Content Type Parser"
                },
                {
                    "id": "steps-to-create",
                    "label": "Steps to Create"
                },
                {
                    "id": "registering-multiple-parsers",
                    "label": "Registering Multiple Parsers"
                }
            ],
            "link": "docs/3-Server/5-Content Parser.html",
            "links": {}
        }
    },
    "server/http2": {
        "prev": {
            "link": "docs/server/content-parser",
            "title": "Content Type Parser",
            "desc": "One of the powerful features of the @cmmv/server framework is its ability to cre..."
        },
        "next": {
            "link": "docs/server/middleware",
            "title": "Middleware",
            "desc": "The middleware system in @cmmv/server offers flexibility and powerful integratio..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/content-parser\" />\n                    <link rel=\"next\" href=\"/docs/server/middleware\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"HTTP2\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/content-parser\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/http2\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/middleware\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>HTTP2</h1><a id=\"http2\" title=\"HTTP2\"></a>\n<p>The <code>@cmmv/server</code> framework natively supports HTTP/2, which offers significant performance improvements over HTTP/1.1 by allowing multiplexed streams, header compression, and server push. These features are ideal for applications that need faster page load times and better resource utilization, especially in modern web applications.</p>\n<p>HTTP/2 is particularly useful for reducing latency, improving page load performance, and enhancing the overall efficiency of the client-server communication.</p>\n<p>Enabling HTTP/2 in @cmmv/server<br>\nTo enable HTTP/2, you simply need to configure the server with the http2 option set to true. Additionally, you will need to provide SSL certificates since HTTP/2 requires HTTPS for browser support.</p>\n<p>Here’s an example of how to implement HTTP/2 support in @cmmv/server:</p>\n<p><strong>Example with HTTP/2</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { readFileSync } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;node:fs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>({\n    <span class=\"hljs-attr\">http2</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// Enable HTTP/2</span>\n    <span class=\"hljs-attr\">https</span>: {\n        <span class=\"hljs-attr\">key</span>: <span class=\"hljs-title function_\">readFileSync</span>(<span class=\"hljs-string\">&#x27;./cert/private-key.pem&#x27;</span>),  \n        <span class=\"hljs-attr\">cert</span>: <span class=\"hljs-title function_\">readFileSync</span>(<span class=\"hljs-string\">&#x27;./cert/certificate.pem&#x27;</span>), \n        <span class=\"hljs-attr\">passphrase</span>: <span class=\"hljs-string\">&#x27;1234&#x27;</span>                           \n    }\n});\n\n<span class=\"hljs-keyword\">const</span> host = <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>;\n<span class=\"hljs-keyword\">const</span> port = <span class=\"hljs-number\">3000</span>;\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Hello HTTP/2 World!&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ host, port })\n.<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">server</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n        <span class=\"hljs-string\">`HTTP/2 server running on https://<span class=\"hljs-subst\">${server.address().address}</span>:<span class=\"hljs-subst\">${server.address().port}</span>`</span>\n    );\n})\n.<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(err.<span class=\"hljs-property\">message</span>);\n});\n</code></pre>\n             </div>\n<p><a href=\"https://datatracker.ietf.org/doc/html/rfc7301\" target=\"_blank\" rel=\"nofollow\">ALPN negotiation</a> allows support for both HTTPS and HTTP/2 over the same socket. Node core req and res objects can be either HTTP/1 or HTTP/2:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>({\n    <span class=\"hljs-attr\">http2</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// Enable HTTP/2</span>\n    <span class=\"hljs-attr\">https</span>: {\n        <span class=\"hljs-attr\">allowHTTP1</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// fallback support for HTTP1</span>\n        <span class=\"hljs-attr\">key</span>: <span class=\"hljs-title function_\">readFileSync</span>(<span class=\"hljs-string\">&#x27;./cert/private-key.pem&#x27;</span>),  \n        <span class=\"hljs-attr\">cert</span>: <span class=\"hljs-title function_\">readFileSync</span>(<span class=\"hljs-string\">&#x27;./cert/certificate.pem&#x27;</span>), \n        <span class=\"hljs-attr\">passphrase</span>: <span class=\"hljs-string\">&#x27;1234&#x27;</span>                           \n    }\n});\n</code></pre>\n             </div>\n<p>You can test your new server with:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npx h2url https://localhost:3000\n</code></pre>\n             </div>\n<h2>Self-Signed SSL Certificate</h2><a id=\"self-signed-ssl-certificate\" title=\"Self-Signed SSL Certificate\"></a>\n<p>To test HTTP/2 locally with <code>@cmmv/server</code>, you need an SSL certificate because browsers require HTTPS to support HTTP/2. Here’s how to generate a self-signed certificate for your localhost environment.</p>\n<p>Steps to Create a Self-Signed SSL Certificate<br>\nYou can use OpenSSL, which is a free and open-source tool, to generate the necessary SSL files (private key and certificate) for local development. Follow the steps below:</p>\n<p><strong>1. Install OpenSSL</strong><br>\nIf you don’t already have OpenSSL installed, you can download and install it from here or through a package manager like <code>brew</code> on macOS or <code>apt-get</code> on Linux.</p>\n<p>For macOS:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">brew install openssl\n</code></pre>\n             </div>\n<p>For Linux (Ubuntu/Debian):</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\"><span class=\"hljs-built_in\">sudo</span> apt-get install openssl\n</code></pre>\n             </div>\n<p><strong>2. Generate a Private Key</strong></p>\n<p>First, you need to create a private key that will be used to sign the SSL certificate.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">openssl genpkey -algorithm RSA -out private-key.pem -aes256\n</code></pre>\n             </div>\n<p><strong>3. Create a Self-Signed Certificate</strong></p>\n<p>Now that you have a private key, you can create the SSL certificate.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">openssl req -new -x509 -key private-key.pem -out certificate.pem -days 365\n</code></pre>\n             </div>\n<p>This command will generate a self-signed certificate named <code>certificate.pem</code> that’s valid for 365 days. The <code>-subj</code> parameter provides the necessary certificate information, such as the Common Name (<code>CN</code>), which should be <code>localhost</code>.</p>\n<p><strong>4. Bypass Browser Warnings (Optional)</strong></p>\n<p>Since the certificate is self-signed, most browsers will display a security warning. To bypass this:</p>\n<ul>\n<li><strong>Chrome:</strong> Navigate to <code>chrome://flags/#allow-insecure-localhost</code> and enable the flag that allows insecure localhost.</li>\n<li><strong>Firefox:</strong> Click “Advanced” and then “Add Exception” when the warning appears.</li>\n</ul>\n<p><strong>5. Use the Certificate in <code>@cmmv/server</code></strong></p>\n<p>Now, you can use the generated <code>private-key.pem</code> and certificate.pem files in your <code>@cmmv/server</code> configuration as shown below:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { readFileSync } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;node:fs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>({\n    <span class=\"hljs-attr\">http2</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">https</span>: {\n        <span class=\"hljs-attr\">key</span>: <span class=\"hljs-title function_\">readFileSync</span>(<span class=\"hljs-string\">&#x27;./cert/private-key.pem&#x27;</span>),\n        <span class=\"hljs-attr\">cert</span>: <span class=\"hljs-title function_\">readFileSync</span>(<span class=\"hljs-string\">&#x27;./cert/certificate.pem&#x27;</span>),\n        <span class=\"hljs-attr\">passphrase</span>: <span class=\"hljs-string\">&#x27;your-passphrase&#x27;</span>\n    }\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Hello, HTTP/2 with HTTPS!&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span> })\n.<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">server</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`HTTP/2 server running on https://localhost:3000`</span>);\n})\n.<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&#x27;Error starting the server:&#x27;</span>, err);\n});\n</code></pre>\n             </div>\n<p>Now your local server will run with HTTP/2 and SSL encryption!</p>\n<h2>Plain or insecure</h2><a id=\"plain-or-insecure\" title=\"Plain or insecure\"></a>\n<p>If you are building microservices, you can connect to HTTP2 in plain text, however, this is not supported by browsers.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { readFileSync } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;node:fs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>({ <span class=\"hljs-attr\">http2</span>: <span class=\"hljs-literal\">true</span> });\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Hello, HTTP/2 without HTTPS!&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>, <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span> })\n.<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">server</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`HTTP/2 server running on https://localhost:3000`</span>);\n})\n.<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(<span class=\"hljs-string\">&#x27;Error starting the server:&#x27;</span>, err);\n});\n</code></pre>\n             </div>\n<p>You can test your new server with:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npx h2url http://localhost:3000\n</code></pre>\n             </div>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "http2",
                    "label": "HTTP2"
                },
                {
                    "id": "self-signed-ssl-certificate",
                    "label": "Self-Signed SSL Certificate"
                },
                {
                    "id": "plain-or-insecure",
                    "label": "Plain or insecure"
                }
            ],
            "link": "docs/3-Server/6-HTTP2.html",
            "links": {}
        }
    },
    "server/middleware": {
        "prev": {
            "link": "docs/server/http2",
            "title": "HTTP2",
            "desc": "The @cmmv/server framework natively supports HTTP/2, which offers significant pe..."
        },
        "next": {
            "link": "docs/server/view-engine",
            "title": null,
            "desc": "View Engine\nIn web applications, the view engine is responsible for rendering te..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/http2\" />\n                    <link rel=\"next\" href=\"/docs/server/view-engine\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Middleware\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/http2\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/middleware\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/server/view-engine\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Middleware</h1><a id=\"middleware\" title=\"Middleware\"></a>\n<p>The middleware system in <code>@cmmv/server</code> offers flexibility and powerful integration for processing HTTP requests and responses. Similar to Express, it provides hooks and integration points that allow developers to modify the behavior of requests as they flow through the system. However, the middleware in <code>@cmmv/server</code> also introduces new behaviors and optimizations, particularly through its use of hooks.</p>\n<p>This system allows for the implementation of essential middleware functions such as ETag, Body-Parser, Compression, Cookie-Parser, CORS, Helmet, and Server-Static, each of which follows a common pattern. Some of these middlewares, like ETag, are fully compatible with Express. Others, such as Server-Static, have custom implementations that introduce specific behavior changes, making them incompatible with Express.</p>\n<p>The core design of middleware in <code>@cmmv/server</code> revolves around hooks, which are triggered at various points in the request-response lifecycle. This design allows for more precise and efficient processing of requests.</p>\n<h2>Sample</h2><a id=\"sample\" title=\"Sample\"></a>\n<p>ETag middleware is used to manage ETag headers for caching purposes. ETags are a mechanism for cache validation and are generated based on the content of the response body. If the content hasn’t changed between requests, the server can respond with a 304 Not Modified status, improving performance.</p>\n<p>Here’s an example of the ETag middleware implemented in <code>@cmmv/server</code>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">EtagMiddleware</span> {\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-attr\">middlewareName</span>: <span class=\"hljs-built_in\">string</span> = <span class=\"hljs-string\">&#x27;etag&#x27;</span>;\n\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-attr\">options</span>: <span class=\"hljs-title class_\">ETagOptions</span>;\n\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\">options?: <span class=\"hljs-title class_\">ETagOptions</span></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">options</span> = {\n            <span class=\"hljs-attr\">algorithm</span>: options?.<span class=\"hljs-property\">algorithm</span> || <span class=\"hljs-string\">&#x27;sha1&#x27;</span>,\n            <span class=\"hljs-attr\">weak</span>: <span class=\"hljs-title class_\">Boolean</span>(options?.<span class=\"hljs-property\">weak</span> === <span class=\"hljs-literal\">true</span>),\n        };\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">process</span>(<span class=\"hljs-params\">req, res, next</span>) {\n        <span class=\"hljs-keyword\">if</span> (req.<span class=\"hljs-property\">app</span> &amp;&amp; <span class=\"hljs-keyword\">typeof</span> req.<span class=\"hljs-property\">app</span>.<span class=\"hljs-property\">addHook</span> == <span class=\"hljs-string\">&#x27;function&#x27;</span>)\n            req.<span class=\"hljs-property\">app</span>.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onSend&#x27;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">onCall</span>.<span class=\"hljs-title function_\">bind</span>(<span class=\"hljs-variable language_\">this</span>));\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">onCall</span>.<span class=\"hljs-title function_\">call</span>(<span class=\"hljs-variable language_\">this</span>, req, res, res.<span class=\"hljs-property\">body</span>, next);\n    }\n\n    <span class=\"hljs-title function_\">onCall</span>(<span class=\"hljs-params\">req, res, payload, done</span>) {\n        <span class=\"hljs-keyword\">const</span> hash = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">buildHashFn</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">options</span>.<span class=\"hljs-property\">algorithm</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">options</span>.<span class=\"hljs-property\">weak</span>);\n        <span class=\"hljs-keyword\">let</span> etag = res.<span class=\"hljs-title function_\">getHeader</span>(<span class=\"hljs-string\">&#x27;etag&#x27;</span>);\n        <span class=\"hljs-keyword\">let</span> newPayload;\n\n        <span class=\"hljs-keyword\">if</span> (!etag) {\n            <span class=\"hljs-keyword\">if</span> (!(<span class=\"hljs-keyword\">typeof</span> payload === <span class=\"hljs-string\">&#x27;string&#x27;</span> || payload <span class=\"hljs-keyword\">instanceof</span> <span class=\"hljs-title class_\">Buffer</span>)) {\n                <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, newPayload);\n                <span class=\"hljs-keyword\">return</span>;\n            }\n\n            etag = <span class=\"hljs-title function_\">hash</span>(payload);\n            res.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;etag&#x27;</span>, etag);\n        }\n\n        <span class=\"hljs-keyword\">if</span> (\n            req.<span class=\"hljs-property\">headers</span>[<span class=\"hljs-string\">&#x27;if-none-match&#x27;</span>] === etag ||\n            req.<span class=\"hljs-property\">headers</span>[<span class=\"hljs-string\">&#x27;if-none-match&#x27;</span>] === <span class=\"hljs-string\">&#x27;W/&#x27;</span> + etag ||\n            <span class=\"hljs-string\">&#x27;W/&#x27;</span> + req.<span class=\"hljs-property\">headers</span>[<span class=\"hljs-string\">&#x27;if-none-match&#x27;</span>] === etag\n        ) {\n            res.<span class=\"hljs-title function_\">code</span>(<span class=\"hljs-number\">304</span>);\n            newPayload = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n        }\n\n        <span class=\"hljs-title function_\">done</span>(<span class=\"hljs-literal\">null</span>, newPayload);\n    }\n\n    <span class=\"hljs-title function_\">buildHashFn</span>(<span class=\"hljs-params\">algorithm = <span class=\"hljs-string\">&#x27;sha1&#x27;</span>, weak = <span class=\"hljs-literal\">false</span></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">validateAlgorithm</span>(algorithm);\n\n        <span class=\"hljs-keyword\">const</span> prefix = weak ? <span class=\"hljs-string\">&#x27;W/&quot;&#x27;</span> : <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>;\n\n        <span class=\"hljs-keyword\">if</span> (algorithm === <span class=\"hljs-string\">&#x27;fnv1a&#x27;</span>)\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-params\">payload</span> =&gt;</span> prefix + <span class=\"hljs-title function_\">fnv1a</span>(payload).<span class=\"hljs-title function_\">toString</span>(<span class=\"hljs-number\">36</span>) + <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>;\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-params\">payload</span> =&gt;</span>\n            prefix +\n            <span class=\"hljs-title function_\">createHash</span>(algorithm).<span class=\"hljs-title function_\">update</span>(payload).<span class=\"hljs-title function_\">digest</span>(<span class=\"hljs-string\">&#x27;base64&#x27;</span>) +\n            <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>;\n    }\n\n    <span class=\"hljs-title function_\">validateAlgorithm</span>(<span class=\"hljs-params\">algorithm</span>) {\n        <span class=\"hljs-keyword\">if</span> (algorithm === <span class=\"hljs-string\">&#x27;fnv1a&#x27;</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-title function_\">createHash</span>(algorithm);\n        } <span class=\"hljs-keyword\">catch</span> (e) {\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">TypeError</span>(<span class=\"hljs-string\">`Algorithm <span class=\"hljs-subst\">${algorithm}</span> not supported.`</span>);\n        }\n    }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">options?: <span class=\"hljs-title class_\">ETagOptions</span></span>) {\n    <span class=\"hljs-keyword\">const</span> middleware = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">EtagMiddleware</span>(options);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, next</span>) =&gt;</span> middleware.<span class=\"hljs-title function_\">process</span>(req, res, next);\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> etag = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">options?: <span class=\"hljs-title class_\">ETagOptions</span></span>) {\n    <span class=\"hljs-keyword\">const</span> middleware = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">EtagMiddleware</span>(options);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, next</span>) =&gt;</span> middleware.<span class=\"hljs-title function_\">process</span>(req, res, next);\n};\n</code></pre>\n             </div>\n<p>The middleware system in <code>@cmmv/server</code> is designed to offer both compatibility with Express and enhancements that provide better control over the request-response cycle. By leveraging hooks and selective execution, the system ensures that middleware only runs when necessary, leading to better performance.</p>\n<p>While most middleware is compatible with Express, some—like Server-Static—introduce specific behavior changes. This system is designed to be flexible and modular, allowing you to implement custom middleware easily, integrate existing middleware, and optimize your application’s performance.</p>\n<p>Additionally, all middlewares implemented for <code>@cmmv/server</code> must return a promise, ensuring they fit into the asynchronous lifecycle of the framework. When possible, compatible versions of middleware are provided for use in Express applications.</p>\n<h2>Compression</h2><a id=\"compression\" title=\"Compression\"></a>\n<p>The <code>@cmmv/compression</code> middleware provides HTTP response compression for your server, supporting gzip, deflate, and brotli encodings. Compression reduces the size of the response body, which improves the speed and efficiency of content delivery to the client. It can be used in both <code>@cmmv/server</code> and Express environments with some variations in implementation.</p>\n<p>This middleware integrates seamlessly with the request lifecycle, applying compression to responses based on content type, size, and the client’s Accept-Encoding header. The middleware automatically handles large payloads and dynamically adjusts encoding for different content types.</p>\n<p><strong>Installation</strong></p>\n<p>To install the <code>@cmmv/compression</code> middleware, run the following command:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">npm install @cmmv/compression\n</code></pre>\n             </div>\n<p><strong>Usage</strong></p>\n<p>When using <code>@cmmv/server</code>, the compression middleware must be added as part of the middleware chain. Here’s an example of how to use it:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> compression <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/compression&#x27;</span>;\n\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">compression</span>({ \n    <span class=\"hljs-attr\">threshold</span>: <span class=\"hljs-number\">1024</span>, \n    <span class=\"hljs-attr\">cacheEnabled</span>: <span class=\"hljs-literal\">true</span> \n}));\n</code></pre>\n             </div>\n<p>The <code>@cmmv/compression</code> middleware comes with a range of options to control how and when compression is applied. Below is a list of available options:</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>threshold</code></td>\n<td><code>number</code> or <code>string</code></td>\n<td><code>1024</code></td>\n<td>Specifies the minimum response size (in bytes) required for compression to be applied. Smaller responses are not compressed. Accepts human-readable string values such as ‘1kb’.</td>\n</tr>\n<tr>\n<td><code>cacheEnabled</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>Enables caching of compressed responses to improve performance on repeated requests. Responses will be stored in memory for the specified duration.</td>\n</tr>\n<tr>\n<td><code>cacheTimeout</code></td>\n<td><code>number</code></td>\n<td><code>60000 (1 min)</code></td>\n<td>Sets the timeout (in milliseconds) after which cached compressed responses are purged from the memory cache. Only applicable if <code>cacheEnabled</code> is <code>true</code>.</td>\n</tr>\n<tr>\n<td><code>algorithm</code></td>\n<td><code>string</code></td>\n<td><code>'sha1'</code></td>\n<td>Specifies the hashing algorithm used to generate an ETag for caching validation. Supported values include <code>sha1</code>, <code>md5</code>, and <code>fnv1a</code>.</td>\n</tr>\n<tr>\n<td><code>weak</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>Indicates whether the ETag should be marked as “weak”, meaning it provides less strict validation for cache revalidation.</td>\n</tr>\n<tr>\n<td><code>level</code></td>\n<td><code>number</code></td>\n<td><code>zlib.constants.Z_DEFAULT_COMPRESSION</code></td>\n<td>Specifies the compression level for zlib-based algorithms. Accepts a value between <code>0</code> (no compression) and <code>9</code> (maximum compression).</td>\n</tr>\n<tr>\n<td><code>memLevel</code></td>\n<td><code>number</code></td>\n<td><code>8</code></td>\n<td>Controls the memory usage for compression (higher values use more memory but provide better compression). Accepts values between <code>1</code> and <code>9</code>.</td>\n</tr>\n<tr>\n<td><code>strategy</code></td>\n<td><code>number</code></td>\n<td><code>zlib.constants.Z_DEFAULT_STRATEGY</code></td>\n<td>Specifies the compression strategy to be used by zlib algorithms. Common strategies include <code>Z_FILTERED</code>, <code>Z_HUFFMAN_ONLY</code>, and <code>Z_RLE</code>.</td>\n</tr>\n<tr>\n<td><code>filter</code></td>\n<td><code>function</code></td>\n<td><code>shouldCompress</code></td>\n<td>A function to determine whether or not a response should be compressed based on its content type or other factors.</td>\n</tr>\n<tr>\n<td><code>flush</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>Enables the manual flushing of compression buffers. When enabled, the server can force a flush when necessary (for example, when streaming responses).</td>\n</tr>\n<tr>\n<td><code>chunkSize</code></td>\n<td><code>number</code></td>\n<td><code>16384</code></td>\n<td>Defines the chunk size used for compression streams. Smaller chunk sizes result in more frequent writes but can impact performance.</td>\n</tr>\n<tr>\n<td><code>windowBits</code></td>\n<td><code>number</code></td>\n<td><code>15</code></td>\n<td>Specifies the size of the compression window (in bits). A larger window size provides better compression but uses more memory.</td>\n</tr>\n</tbody>\n</table>\n<h2>Cookie-Parser</h2><a id=\"cookie-parser\" title=\"Cookie-Parser\"></a>\n<p>The <code>@cmmv/cookie-parser</code> middleware is designed to parse cookies in HTTP requests, both signed and unsigned, and make them available in the <code>req.cookies</code> object. It supports both <code>CMMV</code> and Express, providing seamless integration with either framework.</p>\n<p><strong>Installation</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">npm install @cmmv/cookie-parser\n</code></pre>\n             </div>\n<p><strong>Usage</strong></p>\n<p>In CMMV, the middleware is used by registering it with the app using hooks. It will automatically parse cookies on incoming requests and make them available in the <code>req.cookies</code> and <code>req.signedCookies</code> objects.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> cookieParser <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/cookie-parser&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\n\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">cookieParser</span>({ <span class=\"hljs-attr\">secret</span>: <span class=\"hljs-string\">&#x27;mySecretKey&#x27;</span> }));\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/cookies&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">send</span>({\n        <span class=\"hljs-attr\">cookies</span>: req.<span class=\"hljs-property\">cookies</span>,\n        <span class=\"hljs-attr\">signedCookies</span>: req.<span class=\"hljs-property\">signedCookies</span>,\n    });\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span> });\n</code></pre>\n             </div>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td><code>string</code></td>\n<td></td>\n<td>The name of the cookie to parse.</td>\n</tr>\n<tr>\n<td><code>secret</code></td>\n<td><code>string</code>/<code>string[]</code></td>\n<td><code>[]</code></td>\n<td>A string or array of strings used to sign and verify cookies. This ensures the integrity of signed cookies.</td>\n</tr>\n<tr>\n<td><code>decode</code></td>\n<td><code>function</code></td>\n<td></td>\n<td>A custom decoder function for parsing cookies. If not provided, the default <code>decodeURIComponent</code> is used.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td><code>string</code></td>\n<td><code>'/'</code></td>\n<td>Defines the URL path that must exist for the cookie to be included in requests.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example for Signed Cookies</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">app.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">cookieParser</span>({ <span class=\"hljs-attr\">secret</span>: <span class=\"hljs-string\">&#x27;mySecretKey&#x27;</span> }));\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/set-cookie&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">cookie</span>(<span class=\"hljs-string\">&#x27;name&#x27;</span>, <span class=\"hljs-string\">&#x27;value&#x27;</span>, { <span class=\"hljs-attr\">signed</span>: <span class=\"hljs-literal\">true</span> });\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Cookie set&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/get-cookie&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    res.<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">signedCookies</span>: req.<span class=\"hljs-property\">signedCookies</span> });\n});\n</code></pre>\n             </div>\n<h2>Cors</h2><a id=\"cors\" title=\"Cors\"></a>\n<p>The CORS (Cross-Origin Resource Sharing) middleware allows you to enable cross-origin resource sharing for your applications by setting appropriate HTTP headers. It is based on the Express CORS middleware but has been adapted to support asynchronous hooks for the CMMV server environment, making it fully compatible with @cmmv/server while maintaining compatibility with Express wherever possible.</p>\n<p><strong>Installation</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">npm install @cmmv/cors\n</code></pre>\n             </div>\n<p><strong>Usage</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> cors <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/cors&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">cors</span>());\napp.<span class=\"hljs-title function_\">listen</span>({ <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span> });\n</code></pre>\n             </div>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>origin</code></td>\n<td><code>string</code> or <code>function</code></td>\n<td><code>*</code></td>\n<td>Specifies the origin that is allowed to access the resource. Can be a string, array, or function.</td>\n</tr>\n<tr>\n<td><code>methods</code></td>\n<td><code>string</code> or <code>string[]</code></td>\n<td><code>'GET,HEAD,PUT,PATCH,POST,DELETE'</code></td>\n<td>Specifies the HTTP methods allowed for cross-origin requests.</td>\n</tr>\n<tr>\n<td><code>preflightContinue</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>If <code>true</code>, the middleware will not short-circuit preflight requests and will pass them to the next handler.</td>\n</tr>\n<tr>\n<td><code>optionsSuccessStatus</code></td>\n<td><code>number</code></td>\n<td><code>204</code></td>\n<td>The status code sent for successful OPTIONS requests (preflight). Some legacy browsers use 204 for success.</td>\n</tr>\n<tr>\n<td><code>credentials</code></td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n<td>If <code>true</code>, the Access-Control-Allow-Credentials header will be set to <code>true</code>.</td>\n</tr>\n<tr>\n<td><code>maxAge</code></td>\n<td><code>number</code></td>\n<td><code>0</code></td>\n<td>Specifies the time in seconds that browsers are allowed to cache preflight responses.</td>\n</tr>\n<tr>\n<td><code>headers</code></td>\n<td><code>string</code> or <code>string[]</code></td>\n<td><code>undefined</code></td>\n<td>Specifies which headers are allowed to be sent in a request.</td>\n</tr>\n<tr>\n<td><code>allowedHeaders</code></td>\n<td><code>string</code> or <code>string[]</code></td>\n<td><code>undefined</code></td>\n<td>Specifies the headers that can be used in the actual request. Defaults to the request’s <code>Access-Control-Request-Headers</code>.</td>\n</tr>\n<tr>\n<td><code>exposedHeaders</code></td>\n<td><code>string</code> or <code>string[]</code></td>\n<td><code>undefined</code></td>\n<td>Specifies which headers are exposed to the browser. Defaults to none.</td>\n</tr>\n</tbody>\n</table>\n<h2>Etag</h2><a id=\"etag\" title=\"Etag\"></a>\n<p>The CMMV ETag middleware automatically adds an <code>ETag</code> header to HTTP responses, helping with cache validation by generating a unique hash for each response payload. This middleware is based on the Fastify ETag implementation but adapted to work within the CMMV framework. The ETag header allows browsers and other clients to determine whether the content has changed since the last request, reducing bandwidth usage and improving performance.</p>\n<p>This middleware is designed to support both CMMV and Express environments. For CMMV, the default export returns a promise, and for Express, a separate etag function is available.</p>\n<p><strong>Installation</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">npm install @cmmv/etag\n</code></pre>\n             </div>\n<p><strong>Usage</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> etag <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/etag&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">etag</span>());\napp.<span class=\"hljs-title function_\">listen</span>({ <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span> });\n</code></pre>\n             </div>\n<p>The <code>ETagOptions</code> interface provides several configuration options to customize the behavior of the ETag middleware.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>algorithm</td>\n<td>string</td>\n<td>‘sha1’</td>\n<td>Specifies the hashing algorithm to use for generating the ETag. Supported values include ‘sha1’, ‘md5’, and ‘fnv1a’.</td>\n</tr>\n<tr>\n<td>weak</td>\n<td>boolean</td>\n<td>false</td>\n<td>If true, the middleware generates weak ETags (prefixed with W/). Weak ETags allow for more lenient cache validation.</td>\n</tr>\n</tbody>\n</table>\n<h2>Helmet</h2><a id=\"helmet\" title=\"Helmet\"></a>\n<p>The <code>@cmmv/helmet</code> middleware is designed to enhance the security of web applications by setting various HTTP headers. It provides support for content security policies, security headers like <code>X-Frame-Options</code>, <code>Strict-Transport-Security</code>, and more. This middleware is built with flexibility in mind, allowing you to customize its behavior based on your application’s requirements. It follows a similar implementation pattern to the popular <code>helmet</code> library and includes native integration with CMMV while maintaining compatibility with Express when possible.</p>\n<p>This middleware automatically configures HTTP security headers for better protection against common vulnerabilities such as cross-site scripting (XSS) attacks, clickjacking, and data sniffing.</p>\n<p><strong>Installation</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">npm install @cmmv/helmet\n</code></pre>\n             </div>\n<p><strong>Usage</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> helmet <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/helmet&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">helmet</span>({\n    <span class=\"hljs-attr\">contentSecurityPolicy</span>: {\n        <span class=\"hljs-attr\">directives</span>: {\n        <span class=\"hljs-attr\">defaultSrc</span>: [<span class=\"hljs-string\">&quot;&#x27;self&#x27;&quot;</span>],\n        <span class=\"hljs-attr\">scriptSrc</span>: [<span class=\"hljs-string\">&quot;&#x27;self&#x27;&quot;</span>, <span class=\"hljs-string\">&quot;https://trustedscripts.com&quot;</span>],\n        },\n    },\n    <span class=\"hljs-attr\">hsts</span>: {\n        <span class=\"hljs-attr\">maxAge</span>: <span class=\"hljs-number\">31536000</span>, <span class=\"hljs-comment\">// Force HTTPS for one year</span>\n    },\n    <span class=\"hljs-attr\">frameguard</span>: {\n        <span class=\"hljs-attr\">action</span>: <span class=\"hljs-string\">&#x27;deny&#x27;</span>, <span class=\"hljs-comment\">// Disallow iframes entirely</span>\n    }\n}));\napp.<span class=\"hljs-title function_\">listen</span>({ <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">3000</span> });\n</code></pre>\n             </div>\n<p>The <code>HelmetMiddleware</code> allows for configuring various HTTP headers and security policies. Below is the list of available options:</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>contentSecurityPolicy</code></td>\n<td>object or boolean</td>\n<td>Enabled with default policies</td>\n<td>Configures the Content Security Policy (CSP) header. Can be disabled by setting it to <code>false</code> or customized by providing an object.</td>\n</tr>\n<tr>\n<td><code>frameguard</code></td>\n<td>object or boolean</td>\n<td><code>SAMEORIGIN</code></td>\n<td>Sets the <code>X-Frame-Options</code> header to prevent clickjacking.</td>\n</tr>\n<tr>\n<td><code>dnsPrefetchControl</code></td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>Controls the <code>X-DNS-Prefetch-Control</code> header to improve privacy.</td>\n</tr>\n<tr>\n<td><code>expectCt</code></td>\n<td>object or boolean</td>\n<td><code>false</code></td>\n<td>Adds the <code>Expect-CT</code> header to enforce Certificate Transparency requirements.</td>\n</tr>\n<tr>\n<td><code>hsts</code></td>\n<td>object or boolean</td>\n<td><code>true</code></td>\n<td>Sets the <code>Strict-Transport-Security</code> header to force HTTPS connections for a specified time.</td>\n</tr>\n<tr>\n<td><code>ieNoOpen</code></td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>Sets the <code>X-Download-Options</code> header to prevent file downloads from opening automatically in Internet Explorer.</td>\n</tr>\n<tr>\n<td><code>noSniff</code></td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>Sets the <code>X-Content-Type-Options</code> header to prevent browsers from MIME-sniffing the response.</td>\n</tr>\n<tr>\n<td><code>xssFilter</code></td>\n<td>boolean</td>\n<td><code>true</code></td>\n<td>Sets the <code>X-XSS-Protection</code> header to enable the XSS filter built into most modern web browsers.</td>\n</tr>\n<tr>\n<td><code>referrerPolicy</code></td>\n<td>string or object</td>\n<td><code>no-referrer</code></td>\n<td>Configures the <code>Referrer-Policy</code> header to control the information sent in the <code>Referer</code> header.</td>\n</tr>\n<tr>\n<td><code>hidePoweredBy</code></td>\n<td>boolean or object</td>\n<td><code>true</code></td>\n<td>Hides the <code>X-Powered-By</code> header to avoid leaking information about the server technology.</td>\n</tr>\n<tr>\n<td><code>permittedCrossDomainPolicies</code></td>\n<td>object or boolean</td>\n<td><code>false</code></td>\n<td>Configures the <code>X-Permitted-Cross-Domain-Policies</code> header, often used by Flash/Adobe products.</td>\n</tr>\n</tbody>\n</table>\n<h2>Server-Static</h2><a id=\"server-static\" title=\"Server-Static\"></a>\n<p>The <code>@cmmv/server-static</code> middleware provides functionality to serve static files from a directory. It is inspired by <code>serve-static</code> from Express and Fastify’s <code>fastify-static</code>. This middleware can be configured to serve files from one or more directories and provides caching, file compression, and other useful options for serving static content.</p>\n<p>You can use the <code>serveStatic</code> function to serve static files from a directory:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv, { serverStatic } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\n<span class=\"hljs-keyword\">const</span> host = <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>;\n<span class=\"hljs-keyword\">const</span> port = <span class=\"hljs-number\">3000</span>;\n\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">serverStatic</span>(<span class=\"hljs-string\">&#x27;public&#x27;</span>));\n\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view engine&#x27;</span>, <span class=\"hljs-string\">&#x27;pug&#x27;</span>);\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/view&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) {\n    res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;index&#x27;</span>, { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Hey&#x27;</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Hello there!&#x27;</span> });\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ host, port })\n.<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">server</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n        <span class=\"hljs-string\">`Listen on http://<span class=\"hljs-subst\">${server.address().address}</span>:<span class=\"hljs-subst\">${server.address().port}</span>`</span>,\n    );\n})\n.<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-title class_\">Error</span>(err.<span class=\"hljs-property\">message</span>);\n});\n</code></pre>\n             </div>\n<h2>All Middlwares</h2><a id=\"all-middlwares\" title=\"All Middlwares\"></a>\n<p>This example sets up a server using <code>@cmmv/server</code> with various middlewares to efficiently handle HTTP requests. It serves static files from the <code>public</code> folder, enables CORS for cross-origin resource sharing, and adds ETag headers for caching using the <code>fnv1a</code> algorithm. The cookie parser middleware is used to parse cookies and populate <code>req.cookies</code>, while JSON and URL-encoded parsers process request body data. Responses are compressed using GZIP via the compression middleware, and Helmet adds security headers, including a custom Content Security Policy. The server defines routes to handle basic GET and POST requests, render views, send JSON responses, and handle dynamic routes. It listens on <code>0.0.0.0:3000</code>, with an option to enable HTTP/2 and HTTPS if certificates are provided.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">//import { readFileSync } from &quot;node:fs&quot;;</span>\n\n<span class=\"hljs-keyword\">import</span> cmmv, { json, urlencoded, serverStatic } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> etag <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/etag&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> cors <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/cors&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> cookieParser <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/cookie-parser&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> compression <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/compression&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> helmet <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/helmet&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>({\n    <span class=\"hljs-comment\">/*http2: true,\n    https: {\n        key: readFileSync(&quot;./cert/private-key.pem&quot;),\n        cert: readFileSync(&quot;./cert/certificate.pem&quot;),\n        passphrase: &quot;1234&quot;\n    }*/</span>\n});\n\n<span class=\"hljs-keyword\">const</span> host = <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>;\n<span class=\"hljs-keyword\">const</span> port = <span class=\"hljs-number\">3000</span>;\n\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">serverStatic</span>(<span class=\"hljs-string\">&#x27;public&#x27;</span>));\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">cors</span>());\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">etag</span>({ <span class=\"hljs-attr\">algorithm</span>: <span class=\"hljs-string\">&#x27;fnv1a&#x27;</span> }));\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">cookieParser</span>());\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-string\">&#x27;50mb&#x27;</span> }));\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">urlencoded</span>({ <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-string\">&#x27;50mb&#x27;</span>, <span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">true</span> }));\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">compression</span>({ <span class=\"hljs-attr\">level</span>: <span class=\"hljs-number\">6</span> }));\napp.<span class=\"hljs-title function_\">use</span>(\n    <span class=\"hljs-title function_\">helmet</span>({\n        <span class=\"hljs-attr\">contentSecurityPolicy</span>: {\n            <span class=\"hljs-attr\">useDefaults</span>: <span class=\"hljs-literal\">false</span>,\n            <span class=\"hljs-attr\">directives</span>: {\n                <span class=\"hljs-attr\">defaultSrc</span>: [<span class=\"hljs-string\">&quot;&#x27;self&#x27;&quot;</span>],\n                <span class=\"hljs-attr\">scriptSrc</span>: [<span class=\"hljs-string\">&quot;&#x27;self&#x27;&quot;</span>, <span class=\"hljs-string\">&#x27;example.com&#x27;</span>],\n                <span class=\"hljs-attr\">objectSrc</span>: [<span class=\"hljs-string\">&quot;&#x27;none&#x27;&quot;</span>],\n                <span class=\"hljs-attr\">upgradeInsecureRequests</span>: [],\n            },\n        },\n    }),\n);\n\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view engine&#x27;</span>, <span class=\"hljs-string\">&#x27;pug&#x27;</span>);\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/view&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) {\n    res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;index&#x27;</span>, { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Hey&#x27;</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Hello there!&#x27;</span> });\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Hello World&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/json&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">hello</span>: <span class=\"hljs-string\">&#x27;world&#x27;</span> });\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/user/:id&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;User &#x27;</span> + req.<span class=\"hljs-property\">params</span>.<span class=\"hljs-property\">id</span>);\n});\n\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/users&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    res.<span class=\"hljs-title function_\">json</span>(req.<span class=\"hljs-property\">query</span>);\n});\n\napp.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&#x27;/test&#x27;</span>, <span class=\"hljs-title function_\">async</span> (req, res) =&gt; {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(req.<span class=\"hljs-property\">body</span>);\n    res.<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;ok&#x27;</span>);\n});\n\napp.<span class=\"hljs-title function_\">listen</span>({ host, port })\n.<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">server</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> addr = server.<span class=\"hljs-title function_\">address</span>();\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(\n        <span class=\"hljs-string\">`Listen on http://<span class=\"hljs-subst\">${addr.address}</span>:<span class=\"hljs-subst\">${addr.port}</span>`</span>,\n    );\n})\n.<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-title class_\">Error</span>(err.<span class=\"hljs-property\">message</span>);\n});\n</code></pre>\n             </div>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "middleware",
                    "label": "Middleware"
                },
                {
                    "id": "sample",
                    "label": "Sample"
                },
                {
                    "id": "compression",
                    "label": "Compression"
                },
                {
                    "id": "cookie-parser",
                    "label": "Cookie-Parser"
                },
                {
                    "id": "cors",
                    "label": "Cors"
                },
                {
                    "id": "etag",
                    "label": "Etag"
                },
                {
                    "id": "helmet",
                    "label": "Helmet"
                },
                {
                    "id": "server-static",
                    "label": "Server-Static"
                },
                {
                    "id": "all-middlwares",
                    "label": "All Middlwares"
                }
            ],
            "link": "docs/3-Server/7-Middleware.html",
            "links": {}
        }
    },
    "server/view-engine": {
        "prev": {
            "link": "docs/server/middleware",
            "title": "Middleware",
            "desc": "The middleware system in @cmmv/server offers flexibility and powerful integratio..."
        },
        "next": {
            "link": "docs/rpc/overview",
            "title": "RPC",
            "desc": "In modern web applications, reducing overhead and increasing efficiency in commu..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/middleware\" />\n                    <link rel=\"next\" href=\"/docs/rpc/overview\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": null,\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/middleware\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/server/view-engine\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/rpc/overview\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h2>View Engine</h2><a id=\"view-engine\" title=\"View Engine\"></a>\n<p>In web applications, the view engine is responsible for rendering templates and generating HTML pages. In a typical setup, the view engine takes dynamic data and renders it into a static HTML page that is sent to the client. The <code>res.render</code> method in the server allows you to render a template using the view engine you configure.</p>\n<p>In this documentation, we’ll demonstrate how to set up and use a view engine, specifically with the popular Pug template engine. However, it’s possible to configure different view engines depending on your needs.</p>\n<p>In the following example, we configure the Pug template engine to render <code>.pug</code> files from the <code>/views</code> directory. Here’s how you can set it up:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Import the necessary modules</span>\n<span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { json, urlencoded } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { readFileSync } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;fs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;path&#x27;</span>;\n\n<span class=\"hljs-comment\">// Initialize the app</span>\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\n\n<span class=\"hljs-comment\">// Set the view engine to Pug</span>\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view engine&#x27;</span>, <span class=\"hljs-string\">&#x27;pug&#x27;</span>);\n\n<span class=\"hljs-comment\">// Specify the directory where views are located</span>\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;views&#x27;</span>, path.<span class=\"hljs-title function_\">join</span>(__dirname, <span class=\"hljs-string\">&#x27;views&#x27;</span>));\n\n<span class=\"hljs-comment\">// Middleware to parse JSON and URL-encoded data</span>\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">json</span>({ <span class=\"hljs-attr\">limit</span>: <span class=\"hljs-string\">&#x27;50mb&#x27;</span> }));\napp.<span class=\"hljs-title function_\">use</span>(<span class=\"hljs-title function_\">urlencoded</span>({ <span class=\"hljs-attr\">extended</span>: <span class=\"hljs-literal\">true</span> }));\n\n<span class=\"hljs-comment\">// Example route to render a Pug template</span>\napp.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;/view&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">req, res</span>) {\n  res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&#x27;index&#x27;</span>, { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&#x27;Hello&#x27;</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Welcome to the app!&#x27;</span> });\n});\n\n<span class=\"hljs-comment\">// Start the server</span>\n<span class=\"hljs-keyword\">const</span> host = <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>;\n<span class=\"hljs-keyword\">const</span> port = <span class=\"hljs-number\">3000</span>;\n\napp.<span class=\"hljs-title function_\">listen</span>({ host, port }).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">server</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Server running at http://<span class=\"hljs-subst\">${host}</span>:<span class=\"hljs-subst\">${port}</span>`</span>);\n}).<span class=\"hljs-title function_\">catch</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(err);\n});\n</code></pre>\n             </div>\n<p>The default views directory is <code>/views</code>, but this can be customized as shown in the example. The Pug template engine expects files with the <code>.pug</code> extension inside this directory.</p>\n<p>For example, the <code>index.pug</code> file in the <code>/views</code> directory could look like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs\"\">doctype html\nhtml\n  head\n    title= title\n  body\n    h1= message\n</code></pre>\n             </div>\n<p>By setting up a view engine, you can dynamically generate HTML pages based on templates and data. The example provided shows how to configure the Pug template engine and use it to render HTML from Pug templates stored in a specific directory. This allows you to easily manage dynamic content and display it to the client in your web application.</p>\n<p>In CMMV, you can configure various view engines supported by Express, such as <a href=\"https://ejs.co/\" target=\"_blank\" rel=\"nofollow\">EJS</a>, <a href=\"https://mustache.github.io/\" target=\"_blank\" rel=\"nofollow\">Mustache</a>, and others. Furthermore, you can also create custom implementations to suit your needs. For instance, in CMMV, there is native support for SSR (Server-Side Rendering) using the custom view engine @cmmv/view. Below is an example implementation that demonstrates how to configure and use the CMMV custom view engine.</p>\n<h2>Custom View Engine</h2><a id=\"custom-view-engine\" title=\"Custom View Engine\"></a>\n<p>This implementation configures a custom view engine that processes <code>.html</code> files for SSR (Server-Side Rendering). It uses CMMV’s own view engine, which provides flexibility in handling dynamic content with custom headers and nonce generation for security policies.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> cmmv <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/server&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { v4 <span class=\"hljs-keyword\">as</span> uuidv4 } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;uuid&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;path&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> fs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;fs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Config</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./config&#x27;</span>; <span class=\"hljs-comment\">// Assume you have a Config service for app configuration</span>\n\n<span class=\"hljs-keyword\">const</span> publicDir = path.<span class=\"hljs-title function_\">join</span>(process.<span class=\"hljs-title function_\">cwd</span>(), <span class=\"hljs-string\">&#x27;public&#x27;</span>);\n<span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-title function_\">cmmv</span>();\n\n<span class=\"hljs-comment\">// Setting up the view engine to process .html files using the custom engine</span>\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;views&#x27;</span>, publicDir);\napp.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&#x27;view engine&#x27;</span>, <span class=\"hljs-string\">&#x27;html&#x27;</span>);\napp.<span class=\"hljs-title function_\">engine</span>(<span class=\"hljs-string\">&#x27;html&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">filePath, options, callback</span>) =&gt;</span> {\n    app.<span class=\"hljs-property\">render</span>.<span class=\"hljs-title function_\">renderFile</span>(\n        filePath,\n        options,\n        { <span class=\"hljs-attr\">nonce</span>: options.<span class=\"hljs-property\">nonce</span> || <span class=\"hljs-string\">&#x27;&#x27;</span> },\n        callback,\n    );\n});\n\n<span class=\"hljs-comment\">// Adding a hook to manage requests and handle headers with security policies</span>\napp.<span class=\"hljs-title function_\">addHook</span>(<span class=\"hljs-string\">&#x27;onRequest&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, next</span>) =&gt;</span> {\n    req.<span class=\"hljs-property\">requestId</span> = <span class=\"hljs-title function_\">uuidv4</span>();\n    res.<span class=\"hljs-property\">locals</span> = {};\n    res.<span class=\"hljs-property\">locals</span>.<span class=\"hljs-property\">nonce</span> = <span class=\"hljs-title function_\">uuidv4</span>().<span class=\"hljs-title function_\">substring</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">8</span>);\n\n    <span class=\"hljs-comment\">// Set custom security headers</span>\n    <span class=\"hljs-keyword\">const</span> customHeaders = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&#x27;headers&#x27;</span>) || {};\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> headerName <span class=\"hljs-keyword\">in</span> customHeaders) {\n        <span class=\"hljs-keyword\">let</span> headerValue = customHeaders[headerName];\n\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title class_\">Array</span>.<span class=\"hljs-title function_\">isArray</span>(headerValue)) {\n            headerValue = headerValue\n                .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">value</span> =&gt;</span> {\n                    <span class=\"hljs-keyword\">if</span> (headerName === <span class=\"hljs-string\">&#x27;Content-Security-Policy&#x27;</span>)\n                        <span class=\"hljs-keyword\">return</span> value.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">&#x27;style-src&#x27;</span>) == -<span class=\"hljs-number\">1</span>\n                            ? <span class=\"hljs-string\">`<span class=\"hljs-subst\">${value}</span> &#x27;nonce-<span class=\"hljs-subst\">${res.locals.nonce}</span>&#x27;`</span>\n                            : value;\n                    <span class=\"hljs-keyword\">return</span> value;\n                })\n                .<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;; &#x27;</span>);\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> headerValue === <span class=\"hljs-string\">&#x27;string&#x27;</span>) {\n            <span class=\"hljs-keyword\">if</span> (headerName === <span class=\"hljs-string\">&#x27;Content-Security-Policy&#x27;</span>)\n                headerValue =\n                    headerValue.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">&#x27;style-src&#x27;</span>) == -<span class=\"hljs-number\">1</span>\n                        ? <span class=\"hljs-string\">`<span class=\"hljs-subst\">${headerValue}</span> &#x27;nonce-<span class=\"hljs-subst\">${res.locals.nonce}</span>&#x27;`</span>\n                        : headerValue;\n        }\n\n        res.<span class=\"hljs-title function_\">setHeader</span>(headerName, headerValue);\n    }\n\n    <span class=\"hljs-comment\">// Serve HTML files from the /public/views directory</span>\n    <span class=\"hljs-keyword\">const</span> publicDir = path.<span class=\"hljs-title function_\">join</span>(process.<span class=\"hljs-title function_\">cwd</span>(), <span class=\"hljs-string\">&#x27;public/views&#x27;</span>);\n    <span class=\"hljs-keyword\">const</span> requestPath = req.<span class=\"hljs-property\">path</span> === <span class=\"hljs-string\">&#x27;/&#x27;</span> ? <span class=\"hljs-string\">&#x27;index&#x27;</span> : req.<span class=\"hljs-property\">path</span>.<span class=\"hljs-title function_\">substring</span>(<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> possiblePaths = [\n        path.<span class=\"hljs-title function_\">join</span>(publicDir, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${requestPath}</span>.html`</span>),\n        path.<span class=\"hljs-title function_\">join</span>(publicDir, requestPath, <span class=\"hljs-string\">&#x27;index.html&#x27;</span>),\n        path.<span class=\"hljs-title function_\">join</span>(publicDir, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${requestPath}</span>`</span>),\n        path.<span class=\"hljs-title function_\">join</span>(publicDir, requestPath, <span class=\"hljs-string\">&#x27;index.html&#x27;</span>),\n    ];\n\n    <span class=\"hljs-comment\">// Check if any of the possible paths exists</span>\n    <span class=\"hljs-keyword\">let</span> fileFound = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> filePath <span class=\"hljs-keyword\">of</span> possiblePaths) {\n        <span class=\"hljs-keyword\">if</span> (fs.<span class=\"hljs-title function_\">existsSync</span>(filePath)) {\n            fileFound = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">const</span> config = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-title function_\">getAll</span>();\n\n            <span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-title function_\">render</span>(filePath, {\n                <span class=\"hljs-attr\">nonce</span>: res.<span class=\"hljs-property\">locals</span>.<span class=\"hljs-property\">nonce</span>,\n                <span class=\"hljs-attr\">requestId</span>: req.<span class=\"hljs-property\">requestId</span>,\n                config,\n            });\n        }\n    }\n\n    <span class=\"hljs-keyword\">if</span> (!fileFound) res.<span class=\"hljs-title function_\">code</span>(<span class=\"hljs-number\">404</span>).<span class=\"hljs-title function_\">send</span>(<span class=\"hljs-string\">&#x27;Page not found&#x27;</span>);\n\n    <span class=\"hljs-title function_\">next</span>();\n});\n\n<span class=\"hljs-comment\">// Start the server</span>\n<span class=\"hljs-keyword\">const</span> host = <span class=\"hljs-string\">&#x27;0.0.0.0&#x27;</span>;\n<span class=\"hljs-keyword\">const</span> port = <span class=\"hljs-number\">3000</span>;\n\napp.<span class=\"hljs-title function_\">listen</span>({ host, port }).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">server</span> =&gt;</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Server running at http://<span class=\"hljs-subst\">${host}</span>:<span class=\"hljs-subst\">${port}</span>`</span>);\n});\n</code></pre>\n             </div>\n<p>The CMMV framework provides flexibility by supporting any view engine compatible with Express, such as EJS, Mustache, and more. Additionally, you can implement custom view engines, like the <code>@cmmv/view</code> engine used in the example above, to enhance server-side rendering capabilities and optimize performance with customized behavior.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Server"
            ],
            "anchors": [
                {
                    "id": "view-engine",
                    "label": "View Engine"
                },
                {
                    "id": "custom-view-engine",
                    "label": "Custom View Engine"
                }
            ],
            "link": "docs/3-Server/8-View Engine.html",
            "links": {}
        }
    },
    "rpc/overview": {
        "prev": {
            "link": "docs/server/view-engine",
            "title": null,
            "desc": "View Engine\nIn web applications, the view engine is responsible for rendering te..."
        },
        "next": {
            "link": "docs/rpc/proto",
            "title": "Proto",
            "desc": "The CMMV framework provides seamless integration between server-side contracts a..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/server/view-engine\" />\n                    <link rel=\"next\" href=\"/docs/rpc/proto\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"RPC\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/server/view-engine\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/rpc/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/rpc/proto\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>RPC</h1><a id=\"rpc\" title=\"RPC\"></a>\n<p>In modern web applications, reducing overhead and increasing efficiency in communication is essential. A common approach in traditional systems is the use of HTTP/JSON, but this method introduces significant inefficiencies:</p>\n<p>HTTP Overhead: HTTP headers in both requests and responses are often larger than the payload itself, especially for small data exchanges. This leads to unnecessary bandwidth consumption, particularly in real-time applications where the overhead is repeatedly incurred.</p>\n<p>JSON’s Inefficiencies: Although JSON is human-readable and widely used, it is verbose and lacks the performance needed for high-throughput systems. Parsing and serializing JSON adds extra computational overhead compared to binary formats, making it suboptimal for systems requiring quick response times and high concurrency.</p>\n<p>Why CMMV Uses RPC and WebSocket/Protobuf</p>\n<p>WebSocket provides persistent, full-duplex communication between the server and the client, reducing the need to repeatedly establish and tear down connections as seen in HTTP. This alone cuts down significant overhead by eliminating connection re-establishment, headers, and other metadata required by HTTP.</p>\n<p>However, CMMV doesn’t stop at WebSockets. It also leverages Protocol Buffers (Protobuf) for encoding data. Protobuf is a binary serialization format that significantly reduces the size of the messages exchanged, as it uses a compact binary representation, unlike the verbose text format of JSON. This leads to:</p>\n<ul>\n<li>\n<p><strong>Reduced Payload Sizes:</strong> Protobuf is much more efficient at encoding data, reducing both the size of requests and responses, resulting in faster data transfer.</p>\n</li>\n<li>\n<p><strong>Improved Speed:</strong> Binary formats like Protobuf are faster to serialize and deserialize compared to JSON. This improves both performance on the server side (processing multiple requests) and the client side (faster rendering or interaction).</p>\n</li>\n<li>\n<p><strong>Schema Enforcement:</strong> Unlike JSON, which is flexible but prone to errors, Protobuf enforces a structured schema. This ensures that the data being sent and received is well-defined and consistent, preventing mismatches and making it easier to maintain and extend over time.</p>\n</li>\n</ul>\n<p><strong>HTTP/JSON vs. WebSocket/Protobuf</strong></p>\n<ul>\n<li>\n<p><strong>Latency:</strong> WebSocket/Protobuf reduces latency in client-server interactions, enabling near real-time responses. It avoids the overhead of stateless HTTP and the verbosity of JSON.</p>\n</li>\n<li>\n<p><strong>Efficiency:</strong> WebSocket connections remain open, allowing for continuous data exchange without re-establishing connections for each transaction. Protobuf further enhances this by ensuring the data exchanged is minimal, leading to better bandwidth utilization.</p>\n</li>\n<li>\n<p><strong>Scalability:</strong> Systems using WebSocket/Protobuf scale more effectively because they reduce both network and computational overhead. This becomes critical in applications that need to handle many clients simultaneously, such as multiplayer games or real-time analytics platforms.</p>\n</li>\n</ul>\n<p>In scenarios where real-time communication, such as gaming, financial trading platforms, or IoT systems, is required, WebSocket/Protobuf excels over traditional HTTP/JSON due to its ability to handle many concurrent connections with lower latency and better data throughput.</p>\n<p>By choosing RPC via WebSocket/Protobuf as the default communication protocol, CMMV ensures that developers can build efficient, scalable applications without the burden of HTTP’s overhead or JSON’s inefficiency, leading to faster, more reliable systems.</p>\n<h1>Protobuf</h1><a id=\"protobuf\" title=\"Protobuf\"></a>\n<p>Protocol Buffers (Protobuf) is a language-neutral, platform-neutral binary serialization format developed by Google. In CMMV, Protobuf was selected as the communication layer due to its efficiency, structure, and performance benefits over alternatives like JSON or XML.</p>\n<ul>\n<li>\n<p><strong>Compact and Efficient:</strong> Protobuf encodes data in a binary format, significantly reducing the size of transmitted data compared to text formats like JSON. This leads to faster transmission, crucial for real-time applications like gaming or financial systems.</p>\n</li>\n<li>\n<p><strong>Speed:</strong> Binary serialization in Protobuf is far quicker than JSON serialization/deserialization, providing faster data processing and reducing computational load.</p>\n</li>\n<li>\n<p><strong>Schema Enforcement:</strong> Protobuf requires a predefined schema for data, ensuring that data structures are strictly typed and versioned. This avoids inconsistencies during client-server communication, improving reliability in distributed systems.</p>\n</li>\n<li>\n<p><strong>Language and Platform Agnostic:</strong> Protobuf supports multiple programming languages and platforms, allowing CMMV applications to remain flexible across different environments.</p>\n</li>\n<li>\n<p><strong>Efficient Overhead Management:</strong> Protobuf allows for more efficient use of bandwidth and lower CPU usage, making it ideal for systems requiring high throughput and low latency, like RPC-based communication in CMMV.</p>\n</li>\n</ul>\n<p>By using Protobuf, CMMV ensures optimal performance in data serialization, making communication efficient, scalable, and reliable across a range of applications.</p>\n<h2>Instalation</h2><a id=\"instalation\" title=\"Instalation\"></a>\n<p>To implement WebSocket communication using Protobuf in CMMV, follow these steps:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install @cmmv/protobuf @cmmv/ws protobufjs \n</code></pre>\n             </div>\n<p>or</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ yarn add @cmmv/protobuf @cmmv/ws protobufjs \n</code></pre>\n             </div>\n<p>Application setup:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ExpressAdapter</span>, <span class=\"hljs-title class_\">ExpressModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/http&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ProtobufModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/protobuf&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">WSModule</span>, <span class=\"hljs-title class_\">WSAdapter</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/ws&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ViewModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/view&quot;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">ExpressAdapter</span>,    \n    <span class=\"hljs-attr\">wsAdapter</span>: <span class=\"hljs-title class_\">WSAdapter</span>,\n    <span class=\"hljs-attr\">modules</span>: [\n        <span class=\"hljs-title class_\">ExpressModule</span>,\n        <span class=\"hljs-title class_\">ProtobufModule</span>,\n        <span class=\"hljs-title class_\">WSModule</span>,\n        <span class=\"hljs-title class_\">ViewModule</span>\n    ],\n    <span class=\"hljs-attr\">contracts</span>: [...],\n});\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>WSAdapter:</strong> Handles WebSocket connections.</li>\n<li><strong>ProtobufModule:</strong> Defines message structures with Protocol Buffers for communication.</li>\n<li><strong>WSModule:</strong> Manages WebSocket connections, utilizing Protobuf messages for efficient data transmission.</li>\n</ul>\n<p>Settings <code>.cmmv.config.js</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">server</span>: {\n        <span class=\"hljs-attr\">host</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">HOST</span> || <span class=\"hljs-string\">&quot;0.0.0.0&quot;</span>,\n        <span class=\"hljs-attr\">port</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">PORT</span> || <span class=\"hljs-number\">3000</span>,\n        ...\n    },\n\n    <span class=\"hljs-attr\">rpc</span>: {\n        <span class=\"hljs-attr\">enabled</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">preLoadContracts</span>: <span class=\"hljs-literal\">true</span>\n    },\n\n    ...\n};\n</code></pre>\n             </div>\n<p>In CMMV, contracts are processed in .proto format and stored in the /src/proto directory along with TypeScript types. These contracts are loaded into the frontend using protobufjs in two ways:</p>\n<p><strong>Preloading Contracts:</strong> Setting preLoadContracts = true converts all contracts to JSON, which are then bundled with the application. This allows for efficient caching, especially through CDNs.</p>\n<p><strong>On-Demand Loading:</strong> Setting preLoadContracts = false loads .proto files as needed upon receiving the first message that requires the contract, caching them locally for future use. This approach is useful for applications with numerous contracts.</p>\n<h2>Integration</h2><a id=\"integration\" title=\"Integration\"></a>\n<p>The CMMV framework simplifies communication in the frontend by binding Protobuf methods directly to the view context. This allows developers to invoke RPC methods like AddTaskRequest and DeleteTaskRequest within their views seamlessly, as demonstrated in the example to-do list.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-box&quot;</span> <span class=\"hljs-attr\">scope</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;todo&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n        <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;todolist?.length &gt; 0&quot;</span> \n        <span class=\"hljs-attr\">s:todolist</span>=<span class=\"hljs-string\">&quot;services.task.getAll()&quot;</span>\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n            <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;todolist&quot;</span>\n            <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(item, key) in todolist&quot;</span>\n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item&quot;</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item-content&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> \n                    <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> \n                    <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;item.checked&quot;</span> \n                    @<span class=\"hljs-attr\">change</span>=<span class=\"hljs-string\">&quot;UpdateTaskRequest(item)&quot;</span>\n                &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">input</span>&gt;</span>\n\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> \n                    <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;{&#x27;todo-item-checked&#x27;: item.checked}&quot;</span>\n                &gt;</span>{{ item.label }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            \n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n                <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-btn-remove&quot;</span>\n                <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;remove&quot;</span> \n                @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;DeleteTaskRequest(item.id)&quot;</span>\n            &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-input-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;label&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-input&quot;</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-btn-add&quot;</span>\n            <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;add&quot;</span> \n            @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;addTask&quot;</span>\n        &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span>&gt;</span>{{ todolist }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n\n    <span class=\"hljs-attr\">head</span>: {\n        <span class=\"hljs-attr\">meta</span>: [\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;description&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;CMMV Todolist sample&quot;</span> },\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;keywords&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;cmmv, contract model, websocket&quot;</span> }\n        ],\n        <span class=\"hljs-attr\">link</span>: [\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;stylesheet&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;/assets/styles/todo.css&quot;</span> },\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;canonical&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;https://cmmv.io&quot;</span> },\n        ]\n    },\n\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">todolist</span>: [],\n            <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;&quot;</span>\n        }\n    },\n\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-params\"></span>){\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title class_\">AddTaskRequest</span>({ <span class=\"hljs-attr\">label</span>: <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">label</span> });\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">label</span> = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n        },\n\n        <span class=\"hljs-title class_\">DeleteTaskResponse</span>(data){\n            <span class=\"hljs-keyword\">if</span> (data.<span class=\"hljs-property\">success</span>) {\n                <span class=\"hljs-keyword\">const</span> index = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>.<span class=\"hljs-title function_\">findIndex</span>(\n                    <span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item.<span class=\"hljs-property\">id</span> === data.<span class=\"hljs-property\">id</span>\n                );\n\n                <span class=\"hljs-keyword\">if</span> (index !== -<span class=\"hljs-number\">1</span>) \n                    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>.<span class=\"hljs-title function_\">splice</span>(index, <span class=\"hljs-number\">1</span>);\n            }\n        },\n\n        <span class=\"hljs-title class_\">AddTaskResponse</span>(data) { <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title class_\">UpdateTaskResponse</span>(data); },\n\n        <span class=\"hljs-title class_\">UpdateTaskResponse</span>(data) {\n            <span class=\"hljs-keyword\">const</span> index = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>.<span class=\"hljs-title function_\">findIndex</span>(\n                <span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item.<span class=\"hljs-property\">id</span> === data.<span class=\"hljs-property\">id</span>\n            );\n            \n            <span class=\"hljs-keyword\">if</span> (index !== -<span class=\"hljs-number\">1</span>) \n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>[index] = { ...data.<span class=\"hljs-property\">item</span>, <span class=\"hljs-attr\">id</span>: data.<span class=\"hljs-property\">id</span> };\n            <span class=\"hljs-keyword\">else</span> \n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>.<span class=\"hljs-title function_\">push</span>({ ...data.<span class=\"hljs-property\">item</span>, <span class=\"hljs-attr\">id</span>: data.<span class=\"hljs-property\">id</span> });\n        } \n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p>The integration of Protobuf with CMMV’s transpiler offers significant advantages over traditional methods like protoc. While protoc generates a large volume of boilerplate code, much of it may be unnecessary depending on the project’s scope. CMMV automatically integrates contracts with services like repositories, caches, and other modules, simplifying the development process. Instead of manually invoking generated code, CMMV injects Protobuf functions directly into the view layer, reducing overhead and avoiding redundant code generation, making it more efficient for modern web applications.</p>\n<p>This streamlined approach not only reduces complexity but also enhances performance by avoiding unnecessary intermediate files and services, focusing solely on the functional requirements.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "RPC"
            ],
            "anchors": [
                {
                    "id": "rpc",
                    "label": "RPC"
                },
                {
                    "id": "protobuf",
                    "label": "Protobuf"
                },
                {
                    "id": "instalation",
                    "label": "Instalation"
                },
                {
                    "id": "integration",
                    "label": "Integration"
                }
            ],
            "link": "docs/5-RPC/0-Overview.html",
            "links": {}
        }
    },
    "rpc/proto": {
        "prev": {
            "link": "docs/rpc/overview",
            "title": "RPC",
            "desc": "In modern web applications, reducing overhead and increasing efficiency in commu..."
        },
        "next": {
            "link": "docs/rpc/websocket",
            "title": "Websocket",
            "desc": "The @cmmv/ws module is a key component responsible for handling WebSocket commun..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/rpc/overview\" />\n                    <link rel=\"next\" href=\"/docs/rpc/websocket\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Proto\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/rpc/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/rpc/proto\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/rpc/websocket\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Proto</h1><a id=\"proto\" title=\"Proto\"></a>\n<p>The CMMV framework provides seamless integration between server-side contracts and frontend applications using Protobuf as the communication protocol. By defining contracts in a structured way, CMMV automatically generates <a href=\"https://protobuf.dev/\" target=\"_blank\" rel=\"nofollow\">Protobuf</a> files and TypeScript types, allowing for a smooth and efficient integration of RPC-based communication.</p>\n<p>In this section, we’ll walk through how the contract definition in the backend is transformed into <a href=\"https://protobuf.dev/programming-guides/proto3/\" target=\"_blank\" rel=\"nofollow\">Protobuf schema</a>, TypeScript types, and integrated into the frontend for real-time binary communication.</p>\n<p>In CMMV, contracts are defined using the <code>@Contract</code> and <code>@ContractField</code> decorators. Below is an example contract for managing tasks:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { \n\t<span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, \n\t<span class=\"hljs-title class_\">ContractField</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&quot;Task&quot;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&quot;src/protos/task.proto&quot;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&quot;task&quot;</span>\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TasksContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({ \n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>, \n        <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span> \n    })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({ \n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>, \n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span> \n    })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({ \n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>, \n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span> \n    })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>@Contract:</strong> Defines the metadata for the contract, including the name of the controller, the database type (mongodb), the path to the Protobuf file, and the Protobuf package name.</li>\n<li><strong>@ContractField:</strong> Defines individual fields of the contract, specifying their Protobuf type and any additional constraints (e.g., unique values, default values).</li>\n</ul>\n<h2>.proto</h2><a id=\"proto\" title=\".proto\"></a>\n<p>Based on the contract above, CMMV will automatically generate the corresponding .proto file and associated TypeScript types. This generated Protobuf file allows for binary communication between the server and client.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-protobuf\" lang=\"protobuf\"\"><span class=\"hljs-comment\">// Proto generated automatically by CMMV</span>\n\nsyntax = <span class=\"hljs-string\">&quot;proto3&quot;</span>;\n\n<span class=\"hljs-keyword\">package</span> task;\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">Task</span> {\n  <span class=\"hljs-type\">string</span> label = <span class=\"hljs-number\">1</span>;\n  <span class=\"hljs-type\">bool</span> checked = <span class=\"hljs-number\">2</span>;\n  <span class=\"hljs-type\">bool</span> removed = <span class=\"hljs-number\">3</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">AddTaskRequest</span> {\n  Task item = <span class=\"hljs-number\">1</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">AddTaskResponse</span> {\n  Task item = <span class=\"hljs-number\">1</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">UpdateTaskRequest</span> {\n  <span class=\"hljs-type\">string</span> id = <span class=\"hljs-number\">1</span>;\n  Task item = <span class=\"hljs-number\">2</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">UpdateTaskResponse</span> {\n  Task item = <span class=\"hljs-number\">1</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">DeleteTaskRequest</span> {\n  <span class=\"hljs-type\">string</span> id = <span class=\"hljs-number\">1</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">DeleteTaskResponse</span> {\n  <span class=\"hljs-type\">bool</span> success = <span class=\"hljs-number\">1</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">GetAllTaskRequest</span> {}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">GetAllTaskResponse</span> {\n  <span class=\"hljs-keyword\">repeated</span> Task items = <span class=\"hljs-number\">1</span>;\n}\n</code></pre>\n             </div>\n<h2>Types</h2><a id=\"types\" title=\"Types\"></a>\n<p>CMMV also generates TypeScript types for the Protobuf messages, ensuring strong typing across the entire application. These types are generated alongside the Protobuf files, and look like the following:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Types generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title class_\">Task</span> {\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> label = <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> checked = <span class=\"hljs-built_in\">boolean</span>;\n  <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> removed = <span class=\"hljs-built_in\">boolean</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">AddTaskRequest</span> {\n  <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">AddTaskResponse</span> {\n  <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">UpdateTaskRequest</span> {\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>;\n  <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">UpdateTaskResponse</span> {\n  <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">DeleteTaskRequest</span> {\n  <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">DeleteTaskResponse</span> {\n  <span class=\"hljs-attr\">success</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">GetAllTaskRequest</span> {}\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">GetAllTaskResponse</span> {\n  <span class=\"hljs-attr\">items</span>: <span class=\"hljs-title class_\">Task</span>[];\n}\n</code></pre>\n             </div>\n<p>On the frontend, CMMV automatically integrates the Protobuf schema for seamless communication. With WebSocket support and binary communication through Protobuf, the frontend can make RPC (Remote Procedure Call) requests to the server using the defined contract methods.</p>\n<p>By using CMMV’s auto-generated functions, such as <code>AddTaskRequest</code>, <code>UpdateTaskRequest</code>, etc., developers can interact with the backend contract without writing additional code for parsing and validation. The functions are available directly in the context of the view, enabling effortless interaction from the UI.</p>\n<h2>Frontend</h2><a id=\"frontend\" title=\"Frontend\"></a>\n<p>On the frontend, CMMV automatically integrates the Protobuf schema for seamless communication. With WebSocket support and binary communication through Protobuf, the frontend can make RPC (Remote Procedure Call) requests to the server using the defined contract methods.</p>\n<p>By using CMMV’s auto-generated functions, such as <code>AddTaskRequest</code>, <code>UpdateTaskRequest</code>, etc., developers can interact with the backend contract without writing additional code for parsing and validation. The functions are available directly in the context of the view, enabling effortless interaction from the UI.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-box&quot;</span> <span class=\"hljs-attr\">scope</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;todo&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n        <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;todolist?.length &gt; 0&quot;</span> \n        <span class=\"hljs-attr\">s:todolist</span>=<span class=\"hljs-string\">&quot;services.task.getAll()&quot;</span>\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n            <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;todolist&quot;</span>\n            <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(item, key) in todolist&quot;</span>\n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item&quot;</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item-content&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> \n                    <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> \n                    <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;item.checked&quot;</span> \n                    @<span class=\"hljs-attr\">change</span>=<span class=\"hljs-string\">&quot;UpdateTaskRequest(item)&quot;</span>\n                &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">input</span>&gt;</span>\n\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> \n                  <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;{&#x27;todo-item-checked&#x27;: item.checked }&quot;</span>\n                &gt;</span>{{ item.label }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            \n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n                <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-btn-remove&quot;</span>\n                <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;remove&quot;</span> \n                @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;DeleteTaskRequest(item.id)&quot;</span>\n            &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-input-box&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;label&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-input&quot;</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-btn-add&quot;</span>\n            <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;add&quot;</span> \n            @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;addTask&quot;</span>\n        &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span>&gt;</span>{{ todolist }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">todolist</span>: [],\n            <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;&quot;</span>\n        }\n    },\n\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-params\"></span>){\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title class_\">AddTaskRequest</span>({ <span class=\"hljs-attr\">label</span>: <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">label</span> });\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">label</span> = <span class=\"hljs-string\">&#x27;&#x27;</span>;\n        },\n\n        <span class=\"hljs-title class_\">DeleteTaskResponse</span>(data){\n            <span class=\"hljs-keyword\">if</span> (data.<span class=\"hljs-property\">success</span>) {\n                <span class=\"hljs-keyword\">const</span> index = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>.<span class=\"hljs-title function_\">findIndex</span>(\n                  <span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item.<span class=\"hljs-property\">id</span> === data.<span class=\"hljs-property\">id</span>\n                );\n\n                <span class=\"hljs-keyword\">if</span> (index !== -<span class=\"hljs-number\">1</span>) \n                    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>.<span class=\"hljs-title function_\">splice</span>(index, <span class=\"hljs-number\">1</span>);\n            }\n        },\n\n        <span class=\"hljs-title class_\">AddTaskResponse</span>(data) { \n          <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title class_\">UpdateTaskResponse</span>(data); \n        },\n\n        <span class=\"hljs-title class_\">UpdateTaskResponse</span>(data) {\n            <span class=\"hljs-keyword\">const</span> index = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>.<span class=\"hljs-title function_\">findIndex</span>(\n              <span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item.<span class=\"hljs-property\">id</span> === data.<span class=\"hljs-property\">id</span>\n            );\n            \n            <span class=\"hljs-keyword\">if</span> (index !== -<span class=\"hljs-number\">1</span>) \n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>[index] = { ...data.<span class=\"hljs-property\">item</span>, <span class=\"hljs-attr\">id</span>: data.<span class=\"hljs-property\">id</span> };\n            <span class=\"hljs-keyword\">else</span> \n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">todolist</span>.<span class=\"hljs-title function_\">push</span>({ ...data.<span class=\"hljs-property\">item</span>, <span class=\"hljs-attr\">id</span>: data.<span class=\"hljs-property\">id</span> });\n        } \n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p>CMMV provides flexibility in loading the Protobuf contracts:</p>\n<ul>\n<li><strong>PreLoad Contracts:</strong> By default, all contracts are pre-processed, converted into JSON, and included in the main JavaScript bundle. This allows for faster execution at runtime since the contracts are already available, and the frontend can immediately start making RPC calls.</li>\n<li><strong>On-Demand Loading:</strong> In cases where there are many contracts, or if you want to optimize the initial page load, you can set preLoadContracts = false. This way, contracts are fetched on-demand when they are needed, caching them locally to avoid multiple network requests.</li>\n</ul>\n<p>By automatically generating Protobuf contracts, TypeScript types, and integrating them into the frontend, CMMV simplifies communication between the server and client. The use of WebSocket and Protobuf ensures fast, efficient, and type-safe communication, reducing the overhead associated with traditional HTTP/JSON-based systems.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "RPC"
            ],
            "anchors": [
                {
                    "id": "proto",
                    "label": "Proto"
                },
                {
                    "id": "proto",
                    "label": ".proto"
                },
                {
                    "id": "types",
                    "label": "Types"
                },
                {
                    "id": "frontend",
                    "label": "Frontend"
                }
            ],
            "link": "docs/5-RPC/1-Proto.html",
            "links": {}
        }
    },
    "rpc/websocket": {
        "prev": {
            "link": "docs/rpc/proto",
            "title": "Proto",
            "desc": "The CMMV framework provides seamless integration between server-side contracts a..."
        },
        "next": {
            "link": "docs/rpc/gateways",
            "title": "Gateway",
            "desc": "When the @cmmv/ws module is present in the project, it automatically creates Web..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/rpc/proto\" />\n                    <link rel=\"next\" href=\"/docs/rpc/gateways\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Websocket\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/rpc/proto\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/rpc/websocket\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/rpc/gateways\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Websocket</h1><a id=\"websocket\" title=\"Websocket\"></a>\n<p>The <code>@cmmv/ws</code> module is a key component responsible for handling WebSocket communication in the CMMV framework. It is crucial for the functioning of <strong>Remote Procedure Calls (RPC)</strong> in the system, allowing for seamless client-server interactions. This module automatically generates WebSocket gateways based on the contracts defined in your project, enabling binary RPC request and response handling.</p>\n<ul>\n<li>\n<p><strong>Automatic Gateway Generation:</strong> When the <code>@cmmv/ws</code> module is added, it automatically generates WebSocket gateways from the contracts defined in your project. These gateways serve as the communication endpoints for RPC requests and responses.</p>\n</li>\n<li>\n<p><strong>Binary Protocol:</strong> The module communicates using a binary format for all RPC requests and responses. This ensures efficient data transfer and supports complex data structures. It is important to note that simple text-based communication is not supported by this module.</p>\n</li>\n<li>\n<p><strong>Contract-based Communication:</strong> The communication follows the structure defined in your contracts, ensuring type-safe, well-structured data handling. The contracts are written using the <code>@Contract</code> decorator from the <code>@cmmv/core</code> module.</p>\n</li>\n</ul>\n<p>Below is an example of a contract that defines the structure for task-related RPC operations. The contract is annotated with the @Contract and @ContractField decorators to specify the fields and types.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&#x27;Task&#x27;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&#x27;src/protos/task.proto&#x27;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&#x27;task&#x27;</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TasksContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n        <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n    })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n    })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n    })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<p>The contract above will generate a WebSocket gateway, responsible for handling RPC operations like adding, updating, deleting, and retrieving tasks. Below is an example of a generated gateway:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n    \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Rpc</span>, <span class=\"hljs-title class_\">Message</span>, <span class=\"hljs-title class_\">Data</span>, <span class=\"hljs-title class_\">Socket</span>, <span class=\"hljs-title class_\">RpcUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/ws&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { plainToClass } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-transformer&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskEntity</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../entities/task.entity&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">AddTaskRequest</span>, \n    <span class=\"hljs-title class_\">UpdateTaskRequest</span>,   \n    <span class=\"hljs-title class_\">DeleteTaskRequest</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../protos/task&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/task.service&#x27;</span>;\n\n<span class=\"hljs-meta\">@Rpc</span>(<span class=\"hljs-string\">&quot;task&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskGateway</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">taskservice</span>: <span class=\"hljs-title class_\">TaskService</span></span>) {}\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;GetAllTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">const</span> items = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getAll</span>();\n            <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n                <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;GetAllTaskResponse&quot;</span>, items\n            );\n\n            <span class=\"hljs-keyword\">if</span> (response)\n                socket.<span class=\"hljs-title function_\">send</span>(response);\n        } <span class=\"hljs-keyword\">catch</span> (e) {\n            <span class=\"hljs-comment\">// Handle error</span>\n        }\n    }\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;AddTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">AddTaskRequest</span>, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">const</span> entity = <span class=\"hljs-title function_\">plainToClass</span>(<span class=\"hljs-title class_\">TaskEntity</span>, data.<span class=\"hljs-property\">item</span>);\n            <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">add</span>(entity);\n            <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n                <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;AddTaskResponse&quot;</span>, { <span class=\"hljs-attr\">item</span>: result, <span class=\"hljs-attr\">id</span>: result.<span class=\"hljs-property\">id</span> }\n            );\n\n            <span class=\"hljs-keyword\">if</span> (response)\n                socket.<span class=\"hljs-title function_\">send</span>(response);\n        } <span class=\"hljs-keyword\">catch</span> (e) {\n            <span class=\"hljs-comment\">// Handle error</span>\n        }\n    }\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;UpdateTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">UpdateTaskRequest</span>, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">const</span> entity = <span class=\"hljs-title function_\">plainToClass</span>(<span class=\"hljs-title class_\">TaskEntity</span>, data.<span class=\"hljs-property\">item</span>);\n            <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">update</span>(data.<span class=\"hljs-property\">id</span>, entity);\n            <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n                <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;UpdateTaskResponse&quot;</span>, { <span class=\"hljs-attr\">item</span>: result, <span class=\"hljs-attr\">id</span>: result.<span class=\"hljs-property\">id</span> }\n            );\n\n            <span class=\"hljs-keyword\">if</span> (response)\n                socket.<span class=\"hljs-title function_\">send</span>(response);\n        } <span class=\"hljs-keyword\">catch</span> (e) {\n            <span class=\"hljs-comment\">// Handle error</span>\n        }\n    }\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;DeleteTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">DeleteTaskRequest</span>, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">const</span> result = (<span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">delete</span>(data.<span class=\"hljs-property\">id</span>)).<span class=\"hljs-property\">success</span>;\n            <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n                <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;DeleteTaskResponse&quot;</span>, { <span class=\"hljs-attr\">success</span>: result, <span class=\"hljs-attr\">id</span>: data.<span class=\"hljs-property\">id</span> }\n            );\n\n            <span class=\"hljs-keyword\">if</span> (response)\n                socket.<span class=\"hljs-title function_\">send</span>(response);\n        } <span class=\"hljs-keyword\">catch</span> (e) {\n            <span class=\"hljs-comment\">// Handle error</span>\n        }\n    }\n}\n</code></pre>\n             </div>\n<p>The gateway interacts with services (e.g., TaskService) to process the data. These services perform business logic and interact with the database or other back-end components.</p>\n<p>The <code>@cmmv/ws</code> module is a powerful tool for handling binary WebSocket communication in the CMMV framework. It automatically generates WebSocket gateways based on contracts, handling RPC requests and responses efficiently using binary data. This ensures secure, performant communication and seamless integration with the rest of the CMMV system.</p>\n<p>By utilizing this module, developers can easily implement real-time functionality in their applications, leveraging the built-in RPC system for tasks such as data synchronization, real-time updates, and more.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "RPC"
            ],
            "anchors": [
                {
                    "id": "websocket",
                    "label": "Websocket"
                }
            ],
            "link": "docs/5-RPC/2-Websocket.html",
            "links": {}
        }
    },
    "rpc/gateways": {
        "prev": {
            "link": "docs/rpc/websocket",
            "title": "Websocket",
            "desc": "The @cmmv/ws module is a key component responsible for handling WebSocket commun..."
        },
        "next": {
            "link": "docs/rpc/benchmarks",
            "title": "RPC Benchmarks",
            "desc": "This report demonstrates a simple benchmark test for making 1000 HTTP requests t..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/rpc/websocket\" />\n                    <link rel=\"next\" href=\"/docs/rpc/benchmarks\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Gateway\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/rpc/websocket\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/rpc/gateways\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/rpc/benchmarks\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Gateway</h1><a id=\"gateway\" title=\"Gateway\"></a>\n<p>When the <code>@cmmv/ws</code> module is present in the project, it automatically creates WebSocket (WS) gateways based on the defined contracts. These gateways handle <strong>Remote Procedure Call (RPC)</strong> interactions in a binary format, optimizing both the size of the transmitted data and the process of identifying the correct handlers for the messages.</p>\n<ul>\n<li>\n<p><strong>RPC Gateways:</strong> Each contract generates a WebSocket gateway that allows interaction between clients and the server using efficient binary communication.</p>\n</li>\n<li>\n<p><strong>Automatic Request Packaging:</strong> The <code>@cmmv/ws</code> module automatically packages responses and parses incoming requests using the contract definitions, ensuring that all messages conform to the expected structure.</p>\n</li>\n<li>\n<p><strong>WsCall Contract:</strong> The <code>WsCall</code> contract is a crucial component that serves as an index for system packets and defines the available messages in each contract. It helps minimize the number of bytes sent during interactions and allows easy identification of which handler should process each message.</p>\n</li>\n</ul>\n<p>Here is an example of the <code>WsCall</code> contract that serves as the foundation for these interactions:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({ \n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&quot;WsCall&quot;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&quot;src/protos/ws.proto&quot;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&quot;ws&quot;</span>,\n    <span class=\"hljs-attr\">directMessage</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">generateController</span>: <span class=\"hljs-literal\">false</span> \n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">WSContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({ <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;int32&#x27;</span> })\n    <span class=\"hljs-attr\">contract</span>: <span class=\"hljs-built_in\">number</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({ <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;int32&#x27;</span> })\n    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">number</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({ <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bytes&#x27;</span> })\n    <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">Uint8Array</span>;\n}\n</code></pre>\n             </div>\n<p><strong>Client Sends a Request:</strong> When the client sends a request, it is formatted according to the <code>WsCall</code> contract, containing:</p>\n<ul>\n<li><strong>contract:</strong> A number identifying which contract the message belongs to.</li>\n<li><strong>message:</strong> A number identifying the specific message or action.</li>\n<li><strong>data:</strong> A binary payload (usually a serialized object) containing the actual data of the request.</li>\n</ul>\n<p><strong>Parsing the Request:</strong> Upon receiving the request, the system parses the contract and message fields to determine:</p>\n<ul>\n<li>\n<p>Which contract the request corresponds to.</p>\n</li>\n<li>\n<p>Which handler in the gateway should process the message.</p>\n</li>\n<li>\n<p><strong>Calling the Correct Handler:</strong> Once the system identifies the contract and message, it routes the request to the appropriate handler in the WebSocket gateway. The handler then processes the request and sends back a response in the same efficient binary format.</p>\n</li>\n</ul>\n<h2>Example Gateway</h2><a id=\"example-gateway\" title=\"Example Gateway\"></a>\n<p>When a contract is created, the WebSocket gateway might look like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Rpc</span>, <span class=\"hljs-title class_\">Message</span>, <span class=\"hljs-title class_\">Data</span>, <span class=\"hljs-title class_\">Socket</span>, <span class=\"hljs-title class_\">RpcUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/ws&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/task.service&#x27;</span>;\n\n<span class=\"hljs-meta\">@Rpc</span>(<span class=\"hljs-string\">&quot;task&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskGateway</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">taskService</span>: <span class=\"hljs-title class_\">TaskService</span></span>) {}\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;GetAllTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">const</span> items = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">getAll</span>();\n\n        <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n            <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;GetAllTaskResponse&quot;</span>, items\n        );\n\n        socket.<span class=\"hljs-title function_\">send</span>(response);\n    }\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;AddTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() data, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskService</span>.<span class=\"hljs-title function_\">add</span>(data.<span class=\"hljs-property\">item</span>);\n\n        <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n            <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;AddTaskResponse&quot;</span>, { <span class=\"hljs-attr\">item</span>: result }\n        );\n\n        socket.<span class=\"hljs-title function_\">send</span>(response);\n    }\n}\n</code></pre>\n             </div>\n<p><strong>Binary Communication:</strong> Uses binary data (via Uint8Array) for fast and compact message exchanges.<br>\n<strong>Efficient Message Handling:</strong> The contract and message fields allow quick identification of the correct handler, minimizing overhead.<br>\n<strong>Custom Gateways:</strong> Developers can extend or customize gateways by creating specific handlers for different contract messages.<br>\nThis approach ensures that communication between clients and the server is not only efficient but also structured and easy to manage.</p>\n<h2>WebSocket Interceptor</h2><a id=\"websocket-interceptor\" title=\"WebSocket Interceptor\"></a>\n<p>The interceptor is a key component in the <code>@cmmv/ws</code> system that handles the parsing and routing of incoming WebSocket messages. When a WebSocket packet is received from the client, the interceptor processes the data, decodes it according to the defined protocol, and dispatches it to the appropriate handler.</p>\n<p>Below is an explanation of how the WebSocket interceptor works step-by-step:</p>\n<p>The interceptor receives a <code>socket</code> and the binary <code>data</code>. The first step is to decode the binary data into a structured message using the <code>WSCall</code> contract:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> message = <span class=\"hljs-title function_\">plainToClass</span>(<span class=\"hljs-title class_\">WSCall</span>, <span class=\"hljs-title class_\">ProtoRegistry</span>.\n    <span class=\"hljs-title function_\">retrieve</span>(<span class=\"hljs-string\">&quot;ws&quot;</span>)?.\n    <span class=\"hljs-title function_\">lookupType</span>(<span class=\"hljs-string\">&quot;WsCall&quot;</span>).\n    <span class=\"hljs-title function_\">decode</span>(data)\n);\n</code></pre>\n             </div>\n<p>Next, the system retrieves the contract and message type from the <code>ProtoRegistry</code>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> contract = <span class=\"hljs-title class_\">ProtoRegistry</span>.<span class=\"hljs-title function_\">retrieveByIndex</span>(message.<span class=\"hljs-property\">contract</span>);\n<span class=\"hljs-keyword\">const</span> typeName = <span class=\"hljs-title class_\">ProtoRegistry</span>.<span class=\"hljs-title function_\">retrieveTypes</span>(\n    message.<span class=\"hljs-property\">contract</span>, message.<span class=\"hljs-property\">message</span>\n);\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>retrieveByIndex(message.contract):</strong> Retrieves the contract by its index in the registry.</li>\n<li><strong>retrieveTypes(message.contract, message.message):</strong> Determines the specific type of message based on the contract and message identifiers. This will be used to find the correct handler.</li>\n</ul>\n<p>Once the contract and message type are identified, the interceptor checks if the message type has a registered handler:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">if</span> (contract &amp;&amp; <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">registeredMessages</span>.<span class=\"hljs-title function_\">has</span>(typeName)) {\n    <span class=\"hljs-keyword\">const</span> { \n        instance, handlerName, params \n    } = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">registeredMessages</span>.<span class=\"hljs-title function_\">get</span>(typeName);\n\n    <span class=\"hljs-keyword\">const</span> realMessage = contract\n    .<span class=\"hljs-title function_\">lookupType</span>(typeName)\n    .<span class=\"hljs-title function_\">decode</span>(message.<span class=\"hljs-property\">data</span>);\n}\n</code></pre>\n             </div>\n<p>Finally, the handler is executed with the mapped arguments:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> args = params\n    .<span class=\"hljs-title function_\">sort</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">a, b</span>) =&gt;</span> a.<span class=\"hljs-property\">index</span> - b.<span class=\"hljs-property\">index</span>)\n    .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">param</span> =&gt;</span> {\n        <span class=\"hljs-keyword\">switch</span> (param.<span class=\"hljs-property\">paramType</span>) {\n            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;data&#x27;</span>: <span class=\"hljs-keyword\">return</span> realMessage;\n            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;socket&#x27;</span>: <span class=\"hljs-keyword\">return</span> socket;\n            <span class=\"hljs-attr\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">undefined</span>;\n        }\n    });\n\n<span class=\"hljs-keyword\">try</span> {\n    instance[handlerName](...args);\n} <span class=\"hljs-keyword\">catch</span> (e) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">error</span>(e.<span class=\"hljs-property\">message</span>);\n}\n</code></pre>\n             </div>\n<p>This process ensures that all WebSocket messages are efficiently routed to the appropriate handler based on the contract and message type.</p>\n<h2>Utils</h2><a id=\"utils\" title=\"Utils\"></a>\n<p>The <code>RpcUtils</code> class provides utility methods to work with Protobuf serialization and message packaging for RPC communication. It is primarily used to convert JavaScript objects into Protobuf-encoded binary buffers, as well as to pack RPC messages for transmission over WebSocket or other binary protocols.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>generateBuffer(protoFile, namespace, data)</code></td>\n<td>Converts a JavaScript object into a Protobuf-encoded buffer using the specified proto file and message type.</td>\n</tr>\n<tr>\n<td><code>pack(contractName, messageName, data)</code></td>\n<td>Packs a message into a Protobuf-encoded buffer for RPC communication, including contract and message metadata.</td>\n</tr>\n</tbody>\n</table>\n<p><code>generateBuffer(protoFile: string, namespace: string, data: any): Promise&lt;Uint8Array&gt;</code></p>\n<p>This method generates a Protobuf-encoded buffer from a JavaScript object using a specific proto file and message type.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>protoFile (<code>string</code>):</strong> The name of the proto file that defines the message structure.</li>\n<li><strong>namespace (<code>string</code>):</strong> The name of the message type (namespace) within the proto file.</li>\n<li><strong>data (<code>any</code>):</strong> The JavaScript object containing the data to be encoded into Protobuf format.</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<ul>\n<li><strong><code>Promise&lt;Uint8Array | null&gt;:</code></strong> A promise that resolves to a <code>Uint8Array</code> representing the encoded Protobuf message, or null if an error occurs.</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> buffer = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">generateBuffer</span>(\n    <span class=\"hljs-string\">&#x27;myProtoFile&#x27;</span>, <span class=\"hljs-string\">&#x27;MyMessage&#x27;</span>, { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;example&#x27;</span> }\n);\n\n<span class=\"hljs-keyword\">if</span> (buffer) {\n    <span class=\"hljs-comment\">// buffer is ready to be sent via WebSocket or saved</span>\n} <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// handle error</span>\n}\n</code></pre>\n             </div>\n<h2>Pack</h2><a id=\"pack\" title=\"Pack\"></a>\n<p><code>pack(contractName: string, messageName: string, data?: any): Promise&lt;Uint8Array | null&gt;</code></p>\n<p>The <code>pack</code> method prepares a Protobuf-encoded message for RPC communication. It includes metadata such as the contract and message indices, along with the actual message data.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>contractName (<code>string</code>):</strong> The name of the contract associated with the message.</li>\n<li><strong>messageName (<code>string</code>):</strong> The name of the message within the contract.</li>\n<li><strong>data (<code>any</code>, optional):</strong> The data to be included in the message, which will be encoded as Protobuf.</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<ul>\n<li><strong><code>Promise&lt;Uint8Array | null&gt;</code>:</strong> A promise that resolves to a <code>Uint8Array</code> representing the packed message, or <code>null</code> if an error occurs.</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">const</span> packedMessage = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n    <span class=\"hljs-string\">&#x27;TaskContract&#x27;</span>, <span class=\"hljs-string\">&#x27;AddTaskRequest&#x27;</span>, { <span class=\"hljs-attr\">taskId</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">taskLabel</span>: <span class=\"hljs-string\">&#x27;New Task&#x27;</span> }\n);\n\n<span class=\"hljs-keyword\">if</span> (packedMessage) {\n    <span class=\"hljs-comment\">// ready to send packed message via WebSocket or other binary protocol</span>\n} <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// handle error</span>\n}\n</code></pre>\n             </div>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "RPC"
            ],
            "anchors": [
                {
                    "id": "gateway",
                    "label": "Gateway"
                },
                {
                    "id": "example-gateway",
                    "label": "Example Gateway"
                },
                {
                    "id": "websocket-interceptor",
                    "label": "WebSocket Interceptor"
                },
                {
                    "id": "utils",
                    "label": "Utils"
                },
                {
                    "id": "pack",
                    "label": "Pack"
                }
            ],
            "link": "docs/5-RPC/3-Gateways.html",
            "links": {}
        }
    },
    "rpc/benchmarks": {
        "prev": {
            "link": "docs/rpc/gateways",
            "title": "Gateway",
            "desc": "When the @cmmv/ws module is present in the project, it automatically creates Web..."
        },
        "next": {
            "link": "docs/view/overview",
            "title": "View",
            "desc": "The @cmmv/view module in CMMV is a custom view engine designed to optimize SEO a..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/rpc/gateways\" />\n                    <link rel=\"next\" href=\"/docs/view/overview\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"RPC Benchmarks\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/rpc/gateways\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/rpc/benchmarks\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/overview\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>RPC Benchmarks</h1><a id=\"rpc-benchmarks\" title=\"RPC Benchmarks\"></a>\n<p>This report demonstrates a simple benchmark test for making 1000 HTTP requests to a server, including the size of the request and response headers, and estimates for the average time it takes to process each request. The data payload being tested is a simple JSON object { “Hello”: “World” }, and the following headers are used for the request and response.</p>\n<p>Request and Response Headers:</p>\n<p>Response Headers:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-yaml\" lang=\"yaml\"\"><span class=\"hljs-string\">HTTP/1.1</span> <span class=\"hljs-number\">200</span> <span class=\"hljs-string\">OK</span>\n<span class=\"hljs-attr\">Access-Control-Allow-Origin:</span> <span class=\"hljs-string\">*</span>\n<span class=\"hljs-attr\">Cross-Origin-Opener-Policy:</span> <span class=\"hljs-string\">same-origin</span>\n<span class=\"hljs-attr\">Cross-Origin-Resource-Policy:</span> <span class=\"hljs-string\">same-origin</span>\n<span class=\"hljs-attr\">Origin-Agent-Cluster:</span> <span class=\"hljs-string\">?1</span>\n<span class=\"hljs-attr\">Referrer-Policy:</span> <span class=\"hljs-literal\">no</span><span class=\"hljs-string\">-referrer</span>\n<span class=\"hljs-attr\">Strict-Transport-Security:</span> <span class=\"hljs-string\">max-age=15552000;</span> <span class=\"hljs-string\">includeSubDomains</span>\n<span class=\"hljs-attr\">X-Content-Type-Options:</span> <span class=\"hljs-string\">nosniff</span>\n<span class=\"hljs-attr\">X-DNS-Prefetch-Control:</span> <span class=\"hljs-string\">off</span>\n<span class=\"hljs-attr\">X-Download-Options:</span> <span class=\"hljs-string\">noopen</span>\n<span class=\"hljs-attr\">X-Frame-Options:</span> <span class=\"hljs-string\">SAMEORIGIN</span>\n<span class=\"hljs-attr\">X-Permitted-Cross-Domain-Policies:</span> <span class=\"hljs-string\">none</span>\n<span class=\"hljs-attr\">X-XSS-Protection:</span> <span class=\"hljs-number\">0</span>\n<span class=\"hljs-attr\">Content-Security-Policy:</span> <span class=\"hljs-string\">default-src</span> <span class=\"hljs-string\">&#x27;self&#x27;</span> <span class=\"hljs-string\">&#x27;nonce-f0954b9e&#x27;</span><span class=\"hljs-string\">;</span> <span class=\"hljs-string\">script-src</span> <span class=\"hljs-string\">&#x27;self&#x27;</span> <span class=\"hljs-string\">&#x27;unsafe-eval&#x27;</span> <span class=\"hljs-string\">&#x27;unsafe-inline&#x27;</span> <span class=\"hljs-string\">&#x27;nonce-f0954b9e&#x27;</span><span class=\"hljs-string\">;</span> <span class=\"hljs-string\">style-src</span> <span class=\"hljs-string\">&#x27;self&#x27;</span> <span class=\"hljs-string\">&#x27;unsafe-inline&#x27;</span> <span class=\"hljs-string\">https://cdnjs.cloudflare.com</span> <span class=\"hljs-string\">&#x27;nonce-f0954b9e&#x27;</span><span class=\"hljs-string\">;</span> <span class=\"hljs-string\">font-src</span> <span class=\"hljs-string\">&#x27;self&#x27;</span> <span class=\"hljs-string\">https://cdnjs.cloudflare.com</span> <span class=\"hljs-string\">&#x27;nonce-f0954b9e&#x27;</span>\n<span class=\"hljs-attr\">Content-Type:</span> <span class=\"hljs-string\">text/html;</span> <span class=\"hljs-string\">charset=utf-8</span>\n<span class=\"hljs-attr\">ETag:</span> <span class=\"hljs-string\">W/&quot;5d67-lioHfOkcIYpcQS7nNQKGH5y6XRk&quot;</span>\n<span class=\"hljs-attr\">Vary:</span> <span class=\"hljs-string\">Accept-Encoding</span>\n<span class=\"hljs-attr\">Content-Encoding:</span> <span class=\"hljs-string\">gzip</span>\n<span class=\"hljs-attr\">Date:</span> <span class=\"hljs-string\">Wed,</span> <span class=\"hljs-number\">04</span> <span class=\"hljs-string\">Sep</span> <span class=\"hljs-number\">2024 12:41:13 </span><span class=\"hljs-string\">GMT</span>\n<span class=\"hljs-attr\">Connection:</span> <span class=\"hljs-string\">keep-alive</span>\n<span class=\"hljs-attr\">Keep-Alive:</span> <span class=\"hljs-string\">timeout=5</span>\n<span class=\"hljs-attr\">Transfer-Encoding:</span> <span class=\"hljs-string\">chunked</span>\n</code></pre>\n             </div>\n<p>Request Headers:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-yaml\" lang=\"yaml\"\"><span class=\"hljs-string\">GET</span> <span class=\"hljs-string\">/docs/3-RPC%2F0-Overview</span> <span class=\"hljs-string\">HTTP/1.1</span>\n<span class=\"hljs-attr\">Accept:</span> <span class=\"hljs-string\">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span>\n<span class=\"hljs-attr\">Accept-Encoding:</span> <span class=\"hljs-string\">gzip,</span> <span class=\"hljs-string\">deflate,</span> <span class=\"hljs-string\">br,</span> <span class=\"hljs-string\">zstd</span>\n<span class=\"hljs-attr\">Accept-Language:</span> <span class=\"hljs-string\">pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7,es;q=0.6</span>\n<span class=\"hljs-attr\">Cache-Control:</span> <span class=\"hljs-string\">max-age=0</span>\n<span class=\"hljs-attr\">Connection:</span> <span class=\"hljs-string\">keep-alive</span>\n<span class=\"hljs-attr\">Host:</span> <span class=\"hljs-string\">localhost:3000</span>\n<span class=\"hljs-attr\">If-None-Match:</span> <span class=\"hljs-string\">W/&quot;5cee-HeytSiLTPcs5WSj3kRViDNpXpt0&quot;</span>\n<span class=\"hljs-attr\">Sec-Fetch-Dest:</span> <span class=\"hljs-string\">document</span>\n<span class=\"hljs-attr\">Sec-Fetch-Mode:</span> <span class=\"hljs-string\">navigate</span>\n<span class=\"hljs-attr\">Sec-Fetch-Site:</span> <span class=\"hljs-string\">same-origin</span>\n<span class=\"hljs-attr\">Sec-Fetch-User:</span> <span class=\"hljs-string\">?1</span>\n<span class=\"hljs-attr\">Upgrade-Insecure-Requests:</span> <span class=\"hljs-number\">1</span>\n<span class=\"hljs-attr\">User-Agent:</span> <span class=\"hljs-string\">Mozilla/5.0</span> <span class=\"hljs-string\">(Windows</span> <span class=\"hljs-string\">NT</span> <span class=\"hljs-number\">10.0</span><span class=\"hljs-string\">;</span> <span class=\"hljs-string\">Win64;</span> <span class=\"hljs-string\">x64)</span> <span class=\"hljs-string\">AppleWebKit/537.36</span> <span class=\"hljs-string\">(KHTML,</span> <span class=\"hljs-string\">like</span> <span class=\"hljs-string\">Gecko)</span> <span class=\"hljs-string\">Chrome/128.0.0.0</span> <span class=\"hljs-string\">Safari</span>\n</code></pre>\n             </div>\n<p>For the benchmark test, we analyzed the total size and time for processing 1000 HTTP requests. Here is the detailed breakdown:</p>\n<p>Header Sizes:</p>\n<ul>\n<li><strong>Response Headers Size:</strong> 925 bytes</li>\n<li><strong>Request Headers Size:</strong> 783 bytes</li>\n<li><strong>Data Size:</strong> 20 bytes (JSON payload { “Hello”: “World” })</li>\n</ul>\n<p>Total Size per Request:</p>\n<ul>\n<li><strong>Total Size per Request:</strong> 1,728 bytes</li>\n</ul>\n<p>Total Size for 1000 Requests:</p>\n<ul>\n<li><strong>Total Size for 1000 Requests:</strong> 1,728,000 bytes (1.73 MB)</li>\n</ul>\n<p>Timing Analysis:<br>\nAssuming an average internet connection with:</p>\n<ul>\n<li><strong>DNS Lookup:</strong> 50ms</li>\n<li><strong>Time to First Byte (TTFB):</strong> 100ms</li>\n<li><strong>Ping Time:</strong> 100ms</li>\n<li><strong>Content Download Time:</strong> 50ms</li>\n</ul>\n<p><strong>Total Time per Request:</strong> 300ms<br>\n<strong>Total Time for 1000 Requests:</strong> 300 seconds (5 minutes)</p>\n<h1>Protobuf + Websocket</h1><a id=\"protobuf--websocket\" title=\"Protobuf + Websocket\"></a>\n<p>For this benchmark, we analyzed the total size and time for 1000 WebSocket requests using Protobuf for binary communication. In this scenario, the Protobuf schema is loaded only once (26 KB), and the data sent over WebSocket is minimal due to the efficient binary format. We assume the same payload, but in a compact, serialized format using Protobuf.</p>\n<p>Assumptions:</p>\n<ul>\n<li><strong>Initial Protobuf Load:</strong> 26 KB (loaded once, cached)</li>\n<li><strong>Data Size (Binary Format):</strong> Approximately 12 bytes (based on the compact binary representation of { “Hello”: “World” })</li>\n<li><strong>WebSocket Headers:</strong> WebSocket doesn’t require large headers like HTTP, leading to much smaller overhead.</li>\n<li><strong>Persistent Connection:</strong> The WebSocket connection stays open, eliminating the need for repeated DNS lookups, TTFB, etc., which are required for each HTTP request.</li>\n</ul>\n<p>Total Size per Request:</p>\n<ul>\n<li><strong>Binary Data Size per Request:</strong> 12 bytes</li>\n<li><strong>WebSocket Header Overhead:</strong> 2-6 bytes per frame (depending on the frame structure and opcode)</li>\n<li><strong>Total Size per Request:</strong> ~18 bytes</li>\n</ul>\n<p>Total Size for 1000 Requests:</p>\n<ul>\n<li><strong>Protobuf Schema Size (only loaded once):</strong> 26 KB (26,000 bytes)</li>\n<li><strong>Total Data Transferred:</strong> 18 bytes * 1000 requests = 18,000 bytes</li>\n<li><strong>Total Size for 1000 Requests:</strong> 26,000 bytes (schema) + 18,000 bytes (data) = 44,000 bytes (44 KB)</li>\n</ul>\n<p>Timing Analysis:</p>\n<p>In a WebSocket connection:</p>\n<ul>\n<li><strong>No DNS Lookup:</strong> DNS lookup occurs only once during the initial connection.</li>\n<li><strong>No TTFB:</strong> The connection is persistent, so there’s no time-to-first-byte for each request.</li>\n<li><strong>Ping Time:</strong> 100ms (assumed for network latency)</li>\n<li><strong>Content Download Time (Binary Data):</strong> Much smaller than HTTP/JSON.</li>\n<li><strong>Total Time per Request:</strong> ~100ms (ping + minimal processing) Total Time for 1000 Requests: 100 seconds (1 minute 40 seconds)</li>\n</ul>\n<p>Conclusion:</p>\n<ul>\n<li><strong>Total Data Transferred:</strong> Only 44 KB for 1000 requests compared to 1.73 MB in HTTP/JSON.</li>\n<li><strong>Total Time:</strong> 100 seconds (1 minute 40 seconds) for 1000 WebSocket requests, compared to 5 minutes for HTTP requests.</li>\n</ul>\n<p>The binary communication over WebSocket using Protobuf is significantly more efficient in terms of both data size and processing time. The persistent connection eliminates the overhead associated with repeated DNS lookups and TTFB, while the compact binary format reduces the payload size considerably.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "RPC"
            ],
            "anchors": [
                {
                    "id": "rpc-benchmarks",
                    "label": "RPC Benchmarks"
                },
                {
                    "id": "protobuf--websocket",
                    "label": "Protobuf + Websocket"
                }
            ],
            "link": "docs/5-RPC/9-Benchmarks.html",
            "links": {}
        }
    },
    "view/overview": {
        "prev": {
            "link": "docs/rpc/benchmarks",
            "title": "RPC Benchmarks",
            "desc": "This report demonstrates a simple benchmark test for making 1000 HTTP requests t..."
        },
        "next": {
            "link": "docs/view/reactivity",
            "title": "Reactivity",
            "desc": "The @cmmv/reactivity module was created based on the core ideas of Petite Vue, a..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/rpc/benchmarks\" />\n                    <link rel=\"next\" href=\"/docs/view/reactivity\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"View\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/rpc/benchmarks\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/reactivity\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>View</h1><a id=\"view\" title=\"View\"></a>\n<p>The <code>@cmmv/view</code> module in CMMV is a custom view engine designed to optimize SEO and performance by incorporating server-side rendering (SSR) with seamless integration into modern frontend frameworks. Built on top of EJS (Embedded JavaScript), it serves as a middleware for Express and Fastify, processing views in real-time and injecting pre-loaded data into the HTML before it reaches the browser. This approach enables search engines to index content that has already been processed, while still offering flexibility to use popular frontend frameworks like Vue.js, React, or Angular for additional client-side interaction.</p>\n<p>Traditional client-side rendering (CSR) frameworks, such as Vue.js and React, generate content dynamically in the browser. While these frameworks provide rich interactivity, they can negatively impact SEO due to the delayed rendering of content—search engines may not fully index dynamic content that relies on JavaScript execution.</p>\n<p>By incorporating SSR through <code>@cmmv/view</code>, the critical content of your web application is rendered on the server, allowing it to be immediately visible to both users and search engines. This significantly enhances the SEO of your site because the content is presented in the initial HTML response, allowing for better crawlability and faster page loads.</p>\n<h2>Key Features of @cmmv/view</h2><a id=\"key-features-of-cmmvview\" title=\"Key Features of @cmmv/view\"></a>\n<ol>\n<li>\n<p><strong>Server-Side Rendering (SSR)</strong><br>\nThe <code>@cmmv/view</code> module processes views and injects dynamic data server-side before the HTML is sent to the browser. This means that any service calls, database queries, or API requests required to generate content are completed on the server, so the user and search engines receive fully rendered HTML.</p>\n</li>\n<li>\n<p><strong>Optimized JavaScript Bundle</strong><br>\nIn addition to rendering views, the <code>@cmmv/view</code> module creates an optimized JavaScript bundle that includes the core libraries required by the application, such as <code>@cmmv/reactivity</code> (a component that handles real-time updates via RPC). This bundle ensures that the frontend is prepared for fast and efficient interaction once it reaches the client.</p>\n</li>\n<li>\n<p><strong>Seamless Integration with JavaScript Frameworks</strong><br>\nWhile <code>@cmmv/view</code> focuses on SSR, it doesn’t prevent the use of modern frontend frameworks like Vue.js, React, or Angular. It provides a way to hydrate the server-rendered HTML with these frameworks, so developers can benefit from both SSR and client-side interactivity. In future versions, there will be streamlined support for these frameworks, allowing them to work effortlessly with the existing CMMV infrastructure.</p>\n</li>\n<li>\n<p><strong>Pre-Loaded Data for SEO</strong><br>\nOne of the most significant SEO advantages of <code>@cmmv/view</code> is its ability to inject pre-loaded data directly into the HTML template. This data is often gathered from services such as APIs, databases, or repositories, making it available for search engine crawlers before any JavaScript needs to be executed. This feature ensures that essential content is available upfront, improving SEO rankings, as search engines can see the full context of the page without relying on client-side scripts.</p>\n</li>\n<li>\n<p><strong>Dynamic JavaScript Inclusion</strong><br>\nIn addition to handling SSR, <code>@cmmv/view</code> dynamically includes any additional JavaScript files necessary for the page. Whether it’s a custom script or a framework like React, these files are bundled and served in a single request, reducing network overhead and speeding up initial load times.</p>\n</li>\n<li>\n<p><strong>Custom Directives for SSR</strong><br>\nThe <code>@cmmv/view</code> module also supports custom directives that process HTML and data on the server-side. These directives handle pre-loading data, managing conditional content, looping over datasets, and handling i18n translations—all of which are rendered as static HTML, further improving SEO.</p>\n</li>\n</ol>\n<h2>SEO</h2><a id=\"seo\" title=\"SEO\"></a>\n<p><strong>Improved Crawlability</strong><br>\nWhen search engines crawl your site, they rely on HTML to extract key information for indexing. In a typical CSR application, much of the content is loaded asynchronously via JavaScript, which search engines may not execute fully, or at all. This results in poor visibility for crawlers, reducing the discoverability of critical content.</p>\n<p>With <code>@cmmv/view</code>, the content is already pre-rendered by the time it reaches the browser. The server completes the processing of all service requests, API calls, and dynamic data queries, delivering fully rendered HTML. As a result, search engines can immediately identify the core content of your pages, leading to higher rankings in search results.</p>\n<p><strong>Faster Page Load Times</strong><br>\nSince <code>@cmmv/view</code> processes data on the server and sends it along with the initial HTML, users experience faster page loads. The time spent rendering content in the browser is minimized, which not only improves the user experience but also enhances the page’s SEO performance.</p>\n<p><strong>JavaScript Overhead Reduction</strong><br>\nClient-side rendering frameworks often involve large JavaScript bundles and significant runtime execution. With <code>@cmmv/view</code>, much of the work is offloaded to the server, reducing the amount of JavaScript required to process the page on the client-side. This results in reduced network load, quicker time-to-interactive (TTI), and a smoother overall experience for the user.</p>\n<p><strong>Pre-Loaded Data for SEO and UX</strong><br>\nBy pre-fetching data and injecting it into the HTML, <code>@cmmv/view</code> ensures that users and search engines see the most relevant content immediately. Whether it’s product information, blog content, or news articles, everything is available as soon as the page loads, improving both SEO and user engagement.</p>\n<h2>Exemple</h2><a id=\"exemple\" title=\"Exemple\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;product-page&quot;</span> \n    <span class=\"hljs-attr\">s:product</span>=<span class=\"hljs-string\">&quot;services.product.getProductById(productId)&quot;</span> \n    <span class=\"hljs-attr\">scope</span>\n&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>{{ product.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>{{ product.description }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;price&quot;</span>&gt;</span>{{ product.price | currency }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;availability&quot;</span>&gt;</span>\n        {{ product.inStock ? &#x27;In Stock&#x27; : &#x27;Out of Stock&#x27; }}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n        <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;addToCart&quot;</span>\n        <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;add-to-cart&quot;</span> \n        @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;addToCart(product.id)&quot;</span> \n    &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n    \n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">product</span>: <span class=\"hljs-literal\">null</span>\n        }\n    },\n    \n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">addToCart</span>(<span class=\"hljs-params\">productId</span>) {\n            ...\n        }\n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p>By using <code>@cmmv/view</code>, developers can leverage the advantages of SSR to significantly boost their SEO performance and reduce load times. By pre-loading content, optimizing JavaScript bundles, and offering seamless integration with modern frontend frameworks, <code>@cmmv/view</code> provides a comprehensive solution for building scalable, SEO-friendly web applications.</p>\n<p>The ability to serve pre-rendered content, while maintaining the flexibility of client-side interactivity, ensures that CMMV applications can deliver the best of both worlds: high SEO performance and rich, responsive user experiences.</p>\n<h2>Settings</h2><a id=\"settings\" title=\"Settings\"></a>\n<p>The <code>@cmmv/view</code> module in CMMV allows for flexible customization through the <code>.cmmv.config.js</code> file. Below are the available configurations that you can use to fine-tune the behavior of the view engine, internationalization (i18n), meta tags for SEO, security headers, and JavaScript resources.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    ...\n\n    <span class=\"hljs-attr\">i18n</span>: {\n        <span class=\"hljs-attr\">localeFiles</span>: <span class=\"hljs-string\">&quot;./src/locale&quot;</span>,\n        <span class=\"hljs-attr\">default</span>: <span class=\"hljs-string\">&quot;en&quot;</span>\n    },\n\n    <span class=\"hljs-attr\">view</span>: {\n        <span class=\"hljs-attr\">extractInlineScript</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">minifyHTML</span>: <span class=\"hljs-literal\">true</span>\n    },\n\n    <span class=\"hljs-attr\">head</span>: {\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;CMMV&quot;</span>,\n        <span class=\"hljs-attr\">htmlAttrs</span>: {\n            <span class=\"hljs-attr\">lang</span>: <span class=\"hljs-string\">&quot;pt-br&quot;</span>\n        },\n        <span class=\"hljs-attr\">meta</span>: [\n            { <span class=\"hljs-attr\">charset</span>: <span class=\"hljs-string\">&#x27;utf-8&#x27;</span> },\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;viewport&#x27;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;width=device-width&#x27;</span> },\n            ...\n        ],\n        <span class=\"hljs-attr\">link</span>: [\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&#x27;assets/favicon/favicon.ico&#x27;</span> }, \n            ...\n        ]\n    },\n\n    <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">&quot;Content-Security-Policy&quot;</span>: [\n            <span class=\"hljs-string\">&quot;default-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;font-src &#x27;self&#x27;&quot;</span>\n        ],\n        ...\n    },\n\n    <span class=\"hljs-attr\">scripts</span>: [\n        { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text/javascript&quot;</span>, <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&#x27;/assets/bundle.min.js&#x27;</span> }\n    ]\n}\n</code></pre>\n             </div>\n<h2>I18n Configuration</h2><a id=\"i18n-configuration\" title=\"I18n Configuration\"></a>\n<p>The i18n configuration allows you to manage internationalization (i18n) in your CMMV application by defining the directory for locale files and setting a default language.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">i18n</span>: {\n    <span class=\"hljs-attr\">localeFiles</span>: <span class=\"hljs-string\">&quot;./src/locale&quot;</span>, \n    <span class=\"hljs-attr\">default</span>: <span class=\"hljs-string\">&quot;en&quot;</span> \n}\n</code></pre>\n             </div>\n<p><strong>localeFiles:</strong> Directory where the translation files for different languages are stored.<br>\n<strong>default:</strong> The default language to be used when no specific locale is selected.</p>\n<h2>View Configuration</h2><a id=\"view-configuration\" title=\"View Configuration\"></a>\n<p>The view configuration lets you control how the HTML output is processed. It includes options for extracting inline scripts and minifying HTML for optimized performance.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">view</span>: {\n    <span class=\"hljs-attr\">extractInlineScript</span>: <span class=\"hljs-literal\">true</span>, \n    <span class=\"hljs-attr\">minifyHTML</span>: <span class=\"hljs-literal\">true</span>  \n}\n</code></pre>\n             </div>\n<h2>Head Configuration</h2><a id=\"head-configuration\" title=\"Head Configuration\"></a>\n<p>The head configuration controls the <code>&lt;head&gt;</code> section of your HTML document, allowing you to define meta tags, attributes for the <code>&lt;html&gt;</code> tag, and links such as favicons.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">head</span>: {\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;CMMV&quot;</span>,  \n    <span class=\"hljs-attr\">htmlAttrs</span>: { <span class=\"hljs-attr\">lang</span>: <span class=\"hljs-string\">&quot;pt-br&quot;</span> },\n    <span class=\"hljs-attr\">meta</span>: [\n        { <span class=\"hljs-attr\">charset</span>: <span class=\"hljs-string\">&#x27;utf-8&#x27;</span> },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;viewport&#x27;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&#x27;width=device-width&#x27;</span> }\n        ...\n    ],\n    <span class=\"hljs-attr\">link</span>: [\n        { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&#x27;icon&#x27;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&#x27;assets/favicon/favicon.ico&#x27;</span> }\n        ...\n    ]\n}\n</code></pre>\n             </div>\n<h2>Headers Configuration</h2><a id=\"headers-configuration\" title=\"Headers Configuration\"></a>\n<p>The <code>headers</code> configuration allows you to define HTTP headers such as <code>Content-Security-Policy</code> (CSP), which help secure your application.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">headers</span>: {\n    <span class=\"hljs-string\">&quot;Content-Security-Policy&quot;</span>: [\n        <span class=\"hljs-string\">&quot;default-src &#x27;self&#x27;&quot;</span>, \n        <span class=\"hljs-string\">&quot;script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27;&quot;</span>,  \n        <span class=\"hljs-string\">&quot;style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,  \n        <span class=\"hljs-string\">&quot;font-src &#x27;self&#x27;&quot;</span> \n    ]\n}\n</code></pre>\n             </div>\n<h3>Scripts Configuration</h3>\n<p>The <code>scripts</code> configuration specifies external or internal JavaScript files that should be included in the HTML output.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-attr\">scripts</span>: [\n    { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text/javascript&quot;</span>, <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&#x27;/assets/bundle.min.js&#x27;</span>, <span class=\"hljs-attr\">defer</span>: <span class=\"hljs-string\">&quot;defer&quot;</span> }\n]\n</code></pre>\n             </div>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "view",
                    "label": "View"
                },
                {
                    "id": "key-features-of-cmmvview",
                    "label": "Key Features of @cmmv/view"
                },
                {
                    "id": "seo",
                    "label": "SEO"
                },
                {
                    "id": "exemple",
                    "label": "Exemple"
                },
                {
                    "id": "settings",
                    "label": "Settings"
                },
                {
                    "id": "i18n-configuration",
                    "label": "I18n Configuration"
                },
                {
                    "id": "view-configuration",
                    "label": "View Configuration"
                },
                {
                    "id": "head-configuration",
                    "label": "Head Configuration"
                },
                {
                    "id": "headers-configuration",
                    "label": "Headers Configuration"
                }
            ],
            "link": "docs/6-View/0-Overview.html",
            "links": {}
        }
    },
    "view/reactivity": {
        "prev": {
            "link": "docs/view/overview",
            "title": "View",
            "desc": "The @cmmv/view module in CMMV is a custom view engine designed to optimize SEO a..."
        },
        "next": {
            "link": "docs/view/directives",
            "title": "Directives",
            "desc": "Preloading data that will be sent directly in HTML is a crucial factor for SEO (..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/overview\" />\n                    <link rel=\"next\" href=\"/docs/view/directives\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Reactivity\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/overview\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/reactivity\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/directives\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Reactivity</h1><a id=\"reactivity\" title=\"Reactivity\"></a>\n<p>The <code>@cmmv/reactivity</code> module was created based on the core ideas of <a href=\"https://github.com/vuejs/petite-vue\" target=\"_blank\" rel=\"nofollow\">Petite Vue</a>, a simplified version of Vue.js. Petite Vue, developed by Evan You, the creator of Vue.js, offers a lightweight alternative to the full Vue framework, providing only the essential reactivity and templating features needed for smaller or simpler projects. Petite Vue is just <code>6KB</code> in size and implements basic directives, making it an excellent foundation for building minimal reactive systems.</p>\n<p>Inspired by Petite Vue’s design philosophy, <code>@cmmv/reactivity</code> integrates this lightweight, reactive approach into the CMMV framework. By doing so, it offers developers the ability to use two-way data binding and efficient UI updates with minimal overhead. The core reactivity engine from Petite Vue has been adapted to fit seamlessly into the CMMV ecosystem, allowing for easy integration with server-side rendering, WebSockets, Protobuf, and other key modules of CMMV.</p>\n<p>With this combination, <code>@cmmv/reactivity</code> provides an optimal balance of simplicity and performance, making it ideal for building dynamic user interfaces while keeping the overall bundle size minimal. It is well-suited for developers who prefer a lightweight, Vue-inspired reactivity system without the complexity of a full-featured framework.</p>\n<p>For more information on Petite Vue, you can visit the official <a href=\"https://github.com/vuejs/petite-vue\" target=\"_blank\" rel=\"nofollow\">Petite Vue repository</a>.</p>\n<h2>Limitations</h2><a id=\"limitations\" title=\"Limitations\"></a>\n<p>The primary goal of the CMMV framework is to build high-performance applications with a strong focus on speed, efficiency, and SEO optimization. To achieve this, we highly recommend using <code>@cmmv/reactivity</code> as the frontend framework rather than incorporating heavier frameworks like Vue, React, or Angular. @cmmv/reactivity is designed to handle most of the common challenges faced in web applications, providing essential reactivity features in a lightweight package that minimizes the impact on your application’s load times and performance.</p>\n<p>By choosing <code>@cmmv/reactivity</code>, you can ensure that your application remains fast and optimized for both users and search engines. Adding larger frameworks such as Vue, React, or Angular introduces additional layers of JavaScript that can increase the page’s initial load time, potentially harming your PageSpeed score and overall performance. This goes against the core principles of CMMV, which aims to reduce unnecessary overhead.</p>\n<p>If you find that certain critical features are missing from <code>@cmmv/reactivity</code>, we encourage you to submit a pull request to the repository. We’re open to suggestions and contributions that improve the framework while keeping it aligned with CMMV’s performance goals.</p>\n<p>In extreme cases where heavier frameworks like Vue, React, or Angular are necessary, we will eventually provide native support for their integration. However, we strongly advise against this approach due to the performance trade-offs. Any implementation of these frameworks will be at your own risk, and we will not offer official support for such setups—our focus will remain exclusively on optimizing <code>@cmmv/reactivity</code> for the best possible user experience and SEO results.</p>\n<h2>Installation</h2><a id=\"installation\" title=\"Installation\"></a>\n<p>To install the <code>@cmmv/reactivity</code> package, simply run the following command:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install @cmmv/reactivity\n</code></pre>\n             </div>\n<p>or</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ yarn add @cmmv/reactivity\n</code></pre>\n             </div>\n<p>Alternatively, you can visit the <a href=\"https://github.com/andrehrferreira/cmmv-reactivity\" target=\"_blank\" rel=\"nofollow\">GitHub repository</a> for more details.</p>\n<p>The <code>@cmmv/view</code> module already integrates reactivity natively, so it does not need to be installed separately.</p>\n<h2>Usage</h2><a id=\"usage\" title=\"Usage\"></a>\n<p>Below is the documentation for all directives supported by <code>@cmmv/reactivity</code> based on the samples provided in the CMMV Reactivity GitHub repository.</p>\n<h2>c-model</h2><a id=\"c-model\" title=\"c-model\"></a>\n<p>Binds the value of an input element to the application’s data and enables two-way data binding. This is useful for dynamically updating the UI as users input data.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;username&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Username: {{ username }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n</code></pre>\n             </div>\n<p><a href=\"https://github.com/andrehrferreira/cmmv-reactivity/blob/main/samples/model.html\" target=\"_blank\" rel=\"nofollow\">Sample</a> :</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>\n\n  <span class=\"hljs-title function_\">createApp</span>().<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#x27;#app&#x27;</span>)\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span>\n  <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\">&quot;{\n    text: &#x27;hello&#x27;,\n    checked: true,\n    checkToggle: { a: 1 },\n    trueValue: { a: 1 },\n    falseValue: { a: 2 },\n    arr: [&#x27;one&#x27;],\n    radioSelected: &#x27;two&#x27;,\n    selected: &#x27;two&#x27;\n  }&quot;</span>\n&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span>&gt;</span>{{ $data }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Text Input<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  {{ text }}\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-model.trim</span>=<span class=\"hljs-string\">&quot;text&quot;</span> /&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>TextArea<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  {{ text }}\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">textarea</span> <span class=\"hljs-attr\">v-model.trim</span>=<span class=\"hljs-string\">&quot;text&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">textarea</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Checkbox<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;checked&quot;</span> /&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span>&gt;</span>{{ checked }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Checkbox w/ Array<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;arr&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;one&quot;</span> /&gt;</span> one<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;arr&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;two&quot;</span> /&gt;</span> two<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>\n    &gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;arr&quot;</span> <span class=\"hljs-attr\">:value</span>=<span class=\"hljs-string\">&quot;123&quot;</span> /&gt;</span> actual number&lt;/label\n  &gt;\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ arr }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Checkbox w/ true-value / false-value<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span>\n    <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span>\n    <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;checkToggle&quot;</span>\n    <span class=\"hljs-attr\">:true-value</span>=<span class=\"hljs-string\">&quot;trueValue&quot;</span>\n    <span class=\"hljs-attr\">:false-value</span>=<span class=\"hljs-string\">&quot;falseValue&quot;</span>\n  /&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ checkToggle }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Radio<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;radioSelected&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;one&quot;</span> /&gt;</span> one<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;radioSelected&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;two&quot;</span> /&gt;</span> two<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>\n    &gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;radio&quot;</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;radioSelected&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;three&quot;</span> /&gt;</span> three&lt;/label\n  &gt;\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ radioSelected }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Select<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">&quot;selected&quot;</span> @<span class=\"hljs-attr\">change</span>=<span class=\"hljs-string\">&quot;console.log(selected, $event.target.value)&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>one<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>two<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>three<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ selected }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p>In this example, the input’s value is bound to the username field in the data model. Changes in the input will be reflected in the username property.</p>\n<h2>c-show</h2><a id=\"c-show\" title=\"c-show\"></a>\n<p>Controls the visibility of elements based on a condition. If the condition evaluates to false, the element will be hidden.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;isLoggedIn&quot;</span>&gt;</span>Welcome back, user!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>c-if</h2><a id=\"c-if\" title=\"c-if\"></a>\n<p>Conditionally renders an element only if the specified expression is true. Unlike c-show, this directive removes the element from the DOM if the condition is false.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;showMessage&quot;</span>&gt;</span>This message is shown only if showMessage is true.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n</code></pre>\n             </div>\n<p><a href=\"https://github.com/andrehrferreira/cmmv-reactivity/blob/main/samples/if.html\" target=\"_blank\" rel=\"nofollow\">Sample</a>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>\n  <span class=\"hljs-title function_\">createApp</span>().<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#x27;#app&#x27;</span>)\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\">&quot;{ open: true, elseOpen: true }&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;open = !open&quot;</span>&gt;</span>toggle<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;elseOpen = !elseOpen&quot;</span>&gt;</span>toggle else<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;open&quot;</span>&gt;</span>ok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-else-if</span>=<span class=\"hljs-string\">&quot;elseOpen&quot;</span>&gt;</span>else if<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">c-else</span>&gt;</span>else<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>c-for</h2><a id=\"c-for\" title=\"c-for\"></a>\n<p>Loops through an array or object and repeats the associated element for each item.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;item in items&quot;</span>&gt;</span>{{ item }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n</code></pre>\n             </div>\n<p><a href=\"https://github.com/andrehrferreira/cmmv-reactivity/blob/main/samples/for.html\" target=\"_blank\" rel=\"nofollow\">Sample</a>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n    <span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>\n  \n    <span class=\"hljs-keyword\">let</span> id = <span class=\"hljs-number\">4</span>\n    <span class=\"hljs-title function_\">createApp</span>({\n      <span class=\"hljs-attr\">list</span>: [\n        { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;bar&#x27;</span> },\n        { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;boo&#x27;</span> },\n        { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;baz&#x27;</span> },\n        { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">4</span>, <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;bazz&#x27;</span> }\n      ],\n      <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">list</span>.<span class=\"hljs-title function_\">push</span>({ <span class=\"hljs-attr\">id</span>: ++id, <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;new item&#x27;</span> });\n      },\n      <span class=\"hljs-title function_\">splice</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">list</span>.<span class=\"hljs-title function_\">splice</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, { <span class=\"hljs-attr\">id</span>: ++id, <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">&#x27;new item&#x27;</span> })\n      }\n    }).<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#x27;#app&#x27;</span>)\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n  \n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span> <span class=\"hljs-attr\">scope</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;add&quot;</span>&gt;</span>add<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;list.reverse()&quot;</span>&gt;</span>reverse<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;list.pop()&quot;</span>&gt;</span>pop<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;splice&quot;</span>&gt;</span>splice<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;({ id, text }, index) in list&quot;</span> <span class=\"hljs-attr\">:key</span>=<span class=\"hljs-string\">&quot;id&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ index }} {{ { id, text } }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n  \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;item of list&quot;</span> <span class=\"hljs-attr\">:key</span>=<span class=\"hljs-string\">&quot;item.id&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;item.text&quot;</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>c-on</h2><a id=\"c-on\" title=\"c-on\"></a>\n<p>Attaches an event listener to an element. Commonly used for handling click events, form submissions, or other user interactions.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">c-on:click</span>=<span class=\"hljs-string\">&quot;incrementCounter&quot;</span>&gt;</span>Click me!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;incrementCounter&quot;</span>&gt;</span>Click me!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n</code></pre>\n             </div>\n<p><a href=\"https://github.com/andrehrferreira/cmmv-reactivity/blob/main/samples/on.html\" target=\"_blank\" rel=\"nofollow\">Sample</a>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>\n  <span class=\"hljs-title function_\">createApp</span>().<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#x27;#app&#x27;</span>)\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span>\n\t\t<span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span>\n\t\t@<span class=\"hljs-attr\">keyup.x</span>=<span class=\"hljs-string\">&quot;alert(&#x27;yo&#x27;)&quot;</span>\n\t\t<span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">&quot;type x to test key modifier&quot;</span>\n\t/&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;submit&quot;</span> @<span class=\"hljs-attr\">click.prevent.stop</span>&gt;</span>submit (prevented)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click.right</span>=<span class=\"hljs-string\">&quot;alert(&#x27;clicked&#x27;)&quot;</span>&gt;</span>right click<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click.middle</span>=<span class=\"hljs-string\">&quot;alert(&#x27;clicked&#x27;)&quot;</span>&gt;</span>middle click<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click.once</span>=<span class=\"hljs-string\">&quot;alert(&#x27;clicked&#x27;)&quot;</span>&gt;</span>click once<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>c-bind</h2><a id=\"c-bind\" title=\"c-bind\"></a>\n<p>Dynamically binds an attribute to an expression. This is often used to modify attributes like src, href, or class.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">:src</span>=<span class=\"hljs-string\">&quot;imageSource&quot;</span>&gt;</span>\n</code></pre>\n             </div>\n<p><a href=\"https://github.com/andrehrferreira/cmmv-reactivity/blob/main/samples/bind.html\" target=\"_blank\" rel=\"nofollow\">Sample</a>:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n    <span class=\"hljs-selector-id\">#green</span> {\n        <span class=\"hljs-attribute\">color</span>: green;\n    }\n\n    <span class=\"hljs-selector-class\">.red</span> {\n        <span class=\"hljs-attribute\">color</span>: red;\n    }\n\n    <span class=\"hljs-selector-class\">.orange</span> {\n        <span class=\"hljs-attribute\">color</span>: orange;\n    }\n\n    <span class=\"hljs-selector-class\">.static</span> {\n        <span class=\"hljs-attribute\">font-weight</span>: bold;\n    }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n  \n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n    <span class=\"hljs-keyword\">import</span> { createApp, reactive } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>\n\n    <span class=\"hljs-keyword\">const</span> data = (<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">data</span> = <span class=\"hljs-title function_\">reactive</span>({\n        <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">&#x27;green&#x27;</span>,\n        <span class=\"hljs-attr\">classes</span>: [<span class=\"hljs-string\">&#x27;foo&#x27;</span>, { <span class=\"hljs-attr\">red</span>: <span class=\"hljs-literal\">true</span> }],\n        <span class=\"hljs-attr\">style</span>: { <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">&#x27;blue&#x27;</span> },\n        <span class=\"hljs-attr\">obj</span>: { <span class=\"hljs-attr\">class</span>: <span class=\"hljs-string\">&#x27;orange&#x27;</span> }\n    }))\n\n    <span class=\"hljs-title function_\">createApp</span>(data).<span class=\"hljs-title function_\">mount</span>()\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n  \n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">scope</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">:id</span>=<span class=\"hljs-string\">&quot;id&quot;</span>&gt;</span>simple binding - this should be green<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;static&quot;</span> <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;classes&quot;</span>&gt;</span>\n        class binding - this should be red and bold\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-weight: bold&quot;</span> <span class=\"hljs-attr\">:style</span>=<span class=\"hljs-string\">&quot;style&quot;</span>&gt;</span>\n        style binding - this should be blue and bold\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-bind</span>=<span class=\"hljs-string\">&quot;obj&quot;</span>&gt;</span>object binding - this should be orange<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>c-text</h2><a id=\"c-text\" title=\"c-text\"></a>\n<p>Dynamically sets the text content of an element.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\">&quot;{ count: 1 }&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">c-text</span>=<span class=\"hljs-string\">&quot;count&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;count++&quot;</span>&gt;</span>increase<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>c-html</h2><a id=\"c-html\" title=\"c-html\"></a>\n<p>Inserts raw HTML content into an element.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-html</span>=<span class=\"hljs-string\">&quot;htmlContent&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>c-class</h2><a id=\"c-class\" title=\"c-class\"></a>\n<p>Dynamically binds one or more CSS classes to an element.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-class</span>=<span class=\"hljs-string\">&quot;{ active: isActive, disabled: isDisabled }&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p>In this example, if isActive is true, the active class is added, and if isDisabled is true, the disabled class is added.</p>\n<h2>c-once</h2><a id=\"c-once\" title=\"c-once\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>\n  <span class=\"hljs-title function_\">createApp</span>().<span class=\"hljs-title function_\">mount</span>()\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\">&quot;{ count: 5 }&quot;</span>&gt;</span>\n    {{ count }}\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-once</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>Once<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n      {{ count }}\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">c-text</span>=<span class=\"hljs-string\">&quot;count&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">&quot;i in count&quot;</span>&gt;</span>{{ i }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">c-text</span>=<span class=\"hljs-string\">&quot;count&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;count++&quot;</span>&gt;</span>++<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>ref</h2><a id=\"ref\" title=\"ref\"></a>\n<p>In the @cmmv/reactivity framework, the ref system allows you to easily reference DOM elements within the template and manipulate them in your JavaScript logic. This concept is crucial for managing DOM elements directly when reactive bindings alone are not enough. By associating a ref with an element, you can interact with the DOM directly from the reactive context of your application.</p>\n<p>Key Benefits of Using ref:<br>\nDirect DOM Access: It allows you to interact directly with DOM elements, which is sometimes necessary for operations that cannot be purely reactive.<br>\nDynamic Ref Assignment: You can dynamically change the target element assigned to a ref at runtime.<br>\nScoped Refs: The system supports nested scopes, meaning you can define refs within a specific context without affecting the global references.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">import</span> { createApp, reactive } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>\n  <span class=\"hljs-title function_\">createApp</span>().<span class=\"hljs-title function_\">mount</span>()\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>\n  <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;root&quot;</span>\n  <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;root&quot;</span>\n  <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\">&quot;{ dynamicRef: &#x27;x&#x27;, show: true }&quot;</span>\n  <span class=\"hljs-attr\">c-effect</span>=<span class=\"hljs-string\">&quot;console.log({ x: $refs.x, y: $refs.y, input: $refs.input })&quot;</span>\n&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Accessing root el: id is {{ $refs.root.id }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;input&quot;</span> /&gt;</span>\n\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">v-show</span>=<span class=\"hljs-string\">&quot;show&quot;</span> <span class=\"hljs-attr\">:ref</span>=<span class=\"hljs-string\">&quot;dynamicRef&quot;</span>&gt;</span>Span with dynamic ref<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>dynamicRef is {{ dynamicRef }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;dynamicRef = dynamicRef === &#x27;x&#x27; ? &#x27;y&#x27; : &#x27;x&#x27;&quot;</span>&gt;</span>\n\t\tchange dynamicRef\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;show = !show&quot;</span>&gt;</span>toggle<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">scope</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;x&quot;</span>&gt;</span>nested scope ref<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>\n\t\t@<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;console.log({ x: $refs.x, y: $refs.y, input: $refs.input })&quot;</span>\n\t\t&gt;</span>\n\t\tlog nested scope refs\n\t\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<ul>\n<li>\n<p><strong>Static Ref Assignment:</strong> The ref attribute binds an element to a key in the $refs object. In the example above, the element <code>input ref=&quot;input&quot;</code> is now accessible via $refs.input in your JavaScript code.</p>\n</li>\n<li>\n<p><strong>Accessing Ref Values:</strong> The c-effect directive is used to log the values of the refs whenever the component is re-rendered or when its state changes. For example, c-effect=“console.log({ x: $refs.x, y: $refs.y, input: $refs.input })” logs the current values of x, y, and input.</p>\n</li>\n<li>\n<p><strong>Dynamic Ref Assignment:</strong> You can dynamically change which element is referenced by using a reactive variable. For example, the <span> element uses :ref=“dynamicRef”, which means the ref value can change based on the value of dynamicRef. The button with the text “change dynamicRef” toggles the reference between x and y.</p>\n</li>\n<li>\n<p><strong>Scoped Refs:</strong> The <div scope> element defines a nested scope, which means the ref=“x” inside it refers to a local element. The $refs object will adjust to the scope context, providing an isolated reference within that scope.</p>\n</li>\n<li>\n<p><strong>Toggling Visibility:</strong> The c-show=“show” directive toggles the visibility of the <span>, but the ref still holds the reference to the element, even when it is hidden.</p>\n</li>\n</ul>\n<h2>Components</h2><a id=\"components\" title=\"Components\"></a>\n<p>The @cmmv/reactivity framework allows you to create lightweight and reactive components in your application without the overhead of traditional frameworks. The example provided demonstrates how you can define and use a simple component using createApp, reactive, and templates.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n    <span class=\"hljs-keyword\">import</span> { createApp, reactive } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>\n  \n    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">MyComp</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-attr\">$template</span>: <span class=\"hljs-string\">&#x27;#comp&#x27;</span>,\n        <span class=\"hljs-attr\">count</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-keyword\">get</span> <span class=\"hljs-title function_\">plusOne</span>() {\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">count</span> + <span class=\"hljs-number\">1</span>\n        }\n      }\n    }\n  \n    <span class=\"hljs-title function_\">createApp</span>({ <span class=\"hljs-title class_\">MyComp</span> }).<span class=\"hljs-title function_\">mount</span>()\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;comp&quot;</span>&gt;</span>\n    {{ count }} {{ plusOne }}\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;count++&quot;</span>&gt;</span>++<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">scope</span>=<span class=\"hljs-string\">&quot;MyComp()&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p><strong>Component Setup:</strong></p>\n<ul>\n<li>The <code>MyComp</code> function returns the component’s data and computed properties.</li>\n<li>The <code>$template</code> points to the HTML template that will render this component.</li>\n</ul>\n<p><strong>Reactive Data:</strong></p>\n<ul>\n<li><code>count</code> is a reactive property. Changing its value updates the UI automatically.</li>\n<li><code>plusOne</code> is a computed property that reacts to count and displays count + 1.</li>\n</ul>\n<p><strong>Template:</strong></p>\n<ul>\n<li>The template uses <code>{{ count }}</code> and <code>{{ plusOne }}</code> to display the reactive data.</li>\n<li>Clicking the button increments count and updates the displayed value.</li>\n</ul>\n<p><strong>Mounting:</strong></p>\n<p>The <code>createApp</code> function registers the component and mounts it inside the <code>div scope=&quot;MyComp()&quot;</code> tag, which defines where the component will appear.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "reactivity",
                    "label": "Reactivity"
                },
                {
                    "id": "limitations",
                    "label": "Limitations"
                },
                {
                    "id": "installation",
                    "label": "Installation"
                },
                {
                    "id": "usage",
                    "label": "Usage"
                },
                {
                    "id": "c-model",
                    "label": "c-model"
                },
                {
                    "id": "c-show",
                    "label": "c-show"
                },
                {
                    "id": "c-if",
                    "label": "c-if"
                },
                {
                    "id": "c-for",
                    "label": "c-for"
                },
                {
                    "id": "c-on",
                    "label": "c-on"
                },
                {
                    "id": "c-bind",
                    "label": "c-bind"
                },
                {
                    "id": "c-text",
                    "label": "c-text"
                },
                {
                    "id": "c-html",
                    "label": "c-html"
                },
                {
                    "id": "c-class",
                    "label": "c-class"
                },
                {
                    "id": "c-once",
                    "label": "c-once"
                },
                {
                    "id": "ref",
                    "label": "ref"
                },
                {
                    "id": "components",
                    "label": "Components"
                }
            ],
            "link": "docs/6-View/1-Reactivity.html",
            "links": {}
        }
    },
    "view/directives": {
        "prev": {
            "link": "docs/view/reactivity",
            "title": "Reactivity",
            "desc": "The @cmmv/reactivity module was created based on the core ideas of Petite Vue, a..."
        },
        "next": {
            "link": "docs/view/headers",
            "title": "Headers",
            "desc": "In CMMV, you can configure response headers to enhance security, define metadata..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/reactivity\" />\n                    <link rel=\"next\" href=\"/docs/view/headers\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Directives\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/reactivity\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/directives\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/headers\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Directives</h1><a id=\"directives\" title=\"Directives\"></a>\n<p>Preloading data that will be sent directly in HTML is a crucial factor for SEO (Search Engine Optimization). When a search engine analyzes a page, it searches for content that is already rendered in HTML. By ensuring that the essential data of the page is already loaded in HTML, rendering time is reduced and the content is immediately accessible for indexing, improving visibility in search results.</p>\n<p>CMMV (Contract-Model-Model-View) was designed with this need in mind, optimizing content delivery in a way that prioritizes SEO. The system emulates the traditional MVC (Model-View-Controller) model, widely used by well-known frameworks such as Ruby on Rails, Laravel, or Spring. This is done through SSR (Server-Side Rendering) directives, which allow data to be processed on the server and inserted directly into HTML, without the need for another application or overloading the frontend with complex frameworks.</p>\n<p>By using SSR directives such as <code>s-data</code>, CMMV ensures that dynamic data is sent in the HTML itself, without relying on AJAX calls or asynchronous loading via JavaScript, which can delay the display of critical content and negatively impact page performance. This makes content instantly available to search engines, improving load time (TTFB) and maximizing the chances of good indexing.</p>\n<p>This model not only ensures faster loading, but also improves the end-user experience. The user receives a complete page almost instantly, without the need to wait for additional loading or content updates. By centralizing data processing in the backend, CMMV reduces complexity and frontend overhead, eliminating the need for additional configuration or running multiple applications to render and serve dynamic content.</p>\n<p>In short, CMMV is a modern solution that reuses the best of the traditional MVC model, adapting it to the current scenario of SEO and performance optimization, with a focus on simplicity and efficiency.</p>\n<h2>s-data</h2><a id=\"s-data\" title=\"s-data\"></a>\n<p>The <code>s-data</code> directive allows you to directly render server-side data into your HTML templates. This is particularly useful for embedding server-side variables in your HTML without needing additional frontend frameworks or JavaScript.</p>\n<p>How it Works<br>\nYou declare a variable in the server-side controller and pass it to the view. The <code>s-data</code> directive is responsible for injecting this variable directly into the corresponding HTML element during server-side rendering (SSR). This ensures that the content is pre-rendered, optimizing the page for performance and SEO.</p>\n<p>View (HTML Template)</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">s-data</span>=<span class=\"hljs-string\">&quot;datetime&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p>In this example, the <code>s-data</code> directive is used on a <code>&lt;div&gt;</code> element to render the <code>datetime</code> variable, which will be provided by the server.</p>\n<p>Controller</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&quot;template&quot;</span>, { <span class=\"hljs-attr\">datetime</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>().<span class=\"hljs-title function_\">getTime</span>() });\n</code></pre>\n             </div>\n<p>In the controller, you pass the datetime variable (the current timestamp) as part of the data rendered into the template.</p>\n<p>Result (Rendered HTML)</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>1725568913552<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>s-attr</h2><a id=\"s-attr\" title=\"s-attr\"></a>\n<p>The <code>s-attr</code> directive in CMMV allows you to dynamically assign attributes to HTML elements from server-rendered data, similar to how the <code>s-data</code> directive works. However, instead of filling in the content of a tag, it adds or updates an attribute of the element. This is particularly useful for adding security attributes like <code>nonce</code> in <code>&lt;script&gt;</code> or <code>&lt;link&gt;</code> tags, often required by strict Content Security Policies (CSP).</p>\n<p>View (HTML Template)</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">s-attr</span>=<span class=\"hljs-string\">&quot;ref&quot;</span>&gt;</span>Content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p>Controller</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&quot;template&quot;</span>, { <span class=\"hljs-attr\">ref</span>: <span class=\"hljs-string\">&quot;ABC&quot;</span> });\n</code></pre>\n             </div>\n<p>Result (Rendered HTML)</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;ABC&quot;</span>&gt;</span>Content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p>In this case, the <code>s-attr=&quot;ref&quot;</code> directive tells the server to create a ref attribute on the <code>&lt;div&gt;</code> element with the value “ABC”, which is passed from the server-side controller.</p>\n<h2>s-i18n</h2><a id=\"s-i18n\" title=\"s-i18n\"></a>\n<p>The <code>s-i18n</code> directive is the native internationalization module of the CMMV system. It allows developers to manage and display multilingual content by utilizing locale files. These locale files are stored in the <code>/src/locale</code> directory and should be in JSON format.</p>\n<p>CMMV provides the ability to define a default language, and it allows for dynamic language switching based on the user session. This is ideal for websites and applications that need to cater to multiple languages.</p>\n<p>The locale files contain key-value pairs, where the key represents the string identifier and the value is the localized string. For example:</p>\n<p><code>/src/locale/en.json</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-json\" lang=\"json\"\"><span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;welcome&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Welcome to CMMV&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;description&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;CMMV makes development faster and easier.&quot;</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n             </div>\n<p><code>/src/locale/pt-br.json</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-json\" lang=\"json\"\"><span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;welcome&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Bem-vindo ao CMMV&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;description&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;O CMMV torna o desenvolvimento mais rápido e fácil.&quot;</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n             </div>\n<p>You can use the <code>s-i18n</code> directive in your view templates to render localized strings based on the current language.</p>\n<p>View (HTML Template)</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;welcome&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;description&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n</code></pre>\n             </div>\n<p>Result (For English Locale)</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>Welcome to CMMV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>CMMV makes development faster and easier.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n</code></pre>\n             </div>\n<p><strong>Configuration</strong></p>\n<p>In the <code>.cmmv.config.js</code> file, you can configure the i18n settings to define the locale file path and the default language for your application:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">i18n</span>: {\n        <span class=\"hljs-attr\">localeFiles</span>: <span class=\"hljs-string\">&quot;./src/locale&quot;</span>,  <span class=\"hljs-comment\">// Path to the locale files</span>\n        <span class=\"hljs-attr\">default</span>: <span class=\"hljs-string\">&quot;en&quot;</span>  <span class=\"hljs-comment\">// Default language</span>\n    },\n    <span class=\"hljs-comment\">// Other configurations...</span>\n}\n</code></pre>\n             </div>\n<h2>s-if</h2><a id=\"s-if\" title=\"s-if\"></a>\n<p>The <code>s-if</code> directive is used to conditionally render a block of content based on the evaluation of an expression. If the provided expression evaluates to true, the content within the <code>s-if</code> directive will be rendered. Otherwise, the content will not be displayed.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">s-if</span> <span class=\"hljs-attr\">exp</span>=<span class=\"hljs-string\">&quot;todolist.length &gt; 0&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>Total Record Loaded SSR: {{ todolist.length }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">s-else</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>No records were loaded via SSR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">s-else</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">s-if</span>&gt;</span> \n</code></pre>\n             </div>\n<ul>\n<li><code>exp:</code> The boolean expression to evaluate. The expression can use variables and logical operators to determine if the block should be displayed.</li>\n</ul>\n<p>While the <code>s-if</code> directive provides a powerful way to conditionally render content, it should be used with caution due to its potential impact on client-side updates. The content inside an s-if block is removed from the DOM if the expression evaluates to false, and this removal is not automatically updated or re-rendered on the client side after the initial server-side rendering (SSR).</p>\n<p><strong>Recommendations:</strong></p>\n<ul>\n<li>\n<p><strong>Use Case:</strong> It is recommended to use s-if primarily for scenarios where server-side conditions determine the content that should be included in the initial HTML. For instance, you might use <code>s-if</code> to load and display data that is available at the time of server rendering, such as user authentication data or initial configuration settings.</p>\n</li>\n<li>\n<p><strong>Avoid Frequent Client-Side Updates:</strong> Since <code>s-if</code> removes the content from the DOM based on the initial evaluation, it is not suitable for dynamic client-side content that might change frequently or be updated after the initial load. For content that may need to be dynamically updated based on client-side interactions or data changes, consider using other methods such as client-side rendering techniques or reactive frameworks.</p>\n</li>\n</ul>\n<p>By adhering to these recommendations, you can ensure that your use of the <code>s-if</code> directive enhances both the performance and maintainability of your application without unintended side effects.</p>\n<h2>s-for</h2><a id=\"s-for\" title=\"s-for\"></a>\n<p>The <code>s-for</code> directive is designed to handle server-side rendering (SSR) of lists and ensure that dynamic data is pre-rendered for improved SEO. This directive, used in conjunction with the <code>c-for</code> directive, allows you to define how data should be rendered on the server and how it should be updated on the client side. It supports pre-rendering content that will be displayed immediately to users and search engines, while also allowing for client-side updates.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">s-for</span>\n    <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;condition&quot;</span>\n    <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(item, key) in collection&quot;</span>\n    <span class=\"hljs-attr\">render-tag</span>=<span class=\"hljs-string\">&quot;tag-name&quot;</span>\n&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- Content to render --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">s-for</span>&gt;</span>\n</code></pre>\n             </div>\n<p><strong>How It Works</strong></p>\n<ul>\n<li>The <code>s-for</code> directive pre-renders the list items on the server based on the data provided. This includes evaluating expressions and injecting static content directly into the HTML.</li>\n<li>The directive ensures that content defined within the <code>s-for</code> block, including variables rendered using <code>{{}}</code>, <code>c-text</code>, <code>c-html</code>, and <code>:</code>, is pre-rendered.</li>\n<li>On the client side, the <code>c-for</code> directive will take over and handle dynamic updates. This allows the list to be reactive and updated as needed.</li>\n</ul>\n<p><strong>Input Template:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">s-for</span> \n    <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;todolist&quot;</span>\n    <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(item, key) in todolist&quot;</span>\n    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item&quot;</span>\n    <span class=\"hljs-attr\">render-tag</span>=<span class=\"hljs-string\">&quot;div&quot;</span>\n&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item-content&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> \n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> \n            <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;item.checked&quot;</span> \n            @<span class=\"hljs-attr\">change</span>=<span class=\"hljs-string\">&quot;UpdateTaskRequest(item)&quot;</span>\n        &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">input</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> \n            <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;{&#x27;todo-item-checked&#x27;: item.checked}&quot;</span>\n        &gt;</span>{{ item.label }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n        <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-btn-remove&quot;</span>\n        <span class=\"hljs-attr\">s-i18n</span>=<span class=\"hljs-string\">&quot;remove&quot;</span> \n        @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;DeleteTaskRequest(item.id)&quot;</span>\n    &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">s-for</span>&gt;</span> \n</code></pre>\n             </div>\n<p><strong>Final Rendered Output:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;!loaded &amp;&amp; !todolist&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;todolist&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item-content&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> \n                <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> \n                <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;item.checked&quot;</span> \n                @<span class=\"hljs-attr\">change</span>=<span class=\"hljs-string\">&quot;UpdateTaskRequest(1)&quot;</span>\n            &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item-checked&quot;</span>&gt;</span>Task 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-btn-remove&quot;</span> \n            @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;DeleteTaskRequest(1)&quot;</span>\n        &gt;</span>Remove<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-else</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n        <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;todolist&quot;</span> \n        <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(item, key) in todolist&quot;</span> \n        <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item&quot;</span>\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-item-content&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> \n                <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;checkbox&quot;</span> \n                <span class=\"hljs-attr\">c-model</span>=<span class=\"hljs-string\">&quot;item.checked&quot;</span> \n                @<span class=\"hljs-attr\">change</span>=<span class=\"hljs-string\">&quot;UpdateTaskRequest(item)&quot;</span>\n            &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> \n                <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;{&#x27;todo-item-checked&#x27;: item.checked}&quot;</span>\n            &gt;</span>{{ item.label }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;todo-btn-remove&quot;</span> \n            @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;DeleteTaskRequest(item.id)&quot;</span>\n        &gt;</span>Remove<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>Pre-Rendering:</strong> The <code>s-for</code> directive is crucial for SEO as it pre-renders list items with actual data, making the content immediately available for indexing by search engines.</li>\n<li><strong>Client-Side Update:</strong> On the client side, the <code>c-for</code> directive ensures that the content is reactive and can be updated dynamically.</li>\n<li><strong>Use with Caution:</strong> As <code>s-for</code> performs server-side rendering, ensure that the list and its contents are suitable for static pre-rendering. Avoid using it for highly dynamic data that changes frequently on the client side.<br>\nBy combining <code>s-for</code> with <code>c-for</code>, you can leverage server-side rendering for SEO benefits while maintaining dynamic client-side updates.</li>\n</ul>\n<h2>Include</h2><a id=\"include\" title=\"Include\"></a>\n<p>The <code>include</code> directive allows the insertion of components or templates from other files into the main layout. This feature is useful for building modular pages, enabling the division of the layout into small, reusable blocks, which optimizes both loading performance and code maintenance.</p>\n<h3>How It Works</h3>\n<p>The <code>include</code> directive is responsible for preloading components on the server side before sending the page to the client. These components are treated as templates, and their inclusion can occur in a cascading manner, meaning that a template can include other templates. However, this behavior is influenced by the caching strategy, ensuring optimal performance by preventing repeated loading of already processed components.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- Include the navbar --&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/navbar&#x27;) --&gt;</span>\n    \n    <span class=\"hljs-comment\">&lt;!-- Include the footer --&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/footer&#x27;) --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p>When using the <code>include</code> directive, it’s important to consider how data or behavior for each template will be managed. The directive is designed to pre-process components on the server side, so any setup logic needs to be carefully planned. The recommended approach is to execute the setup logic in the main template and avoid cascading setups in included templates. This prevents unnecessary multiple setup executions that could negatively impact performance.</p>\n<p>To optimize template injection and improve performance, the include directive uses a caching strategy. This means that after the initial loading of a template, its content is cached, and subsequent inclusions will use the already-loaded template. However, if the content needs to be dynamically updated, it’s recommended that the setup be managed in the main template rather than relying on individual setups in each included template. This ensures that changes are centralized and easily managed.</p>\n<p><strong>Complete Example</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/navbar&#x27;) --&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;content&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Welcome to our site!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/footer&#x27;) --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">navbarState</span>: {},\n            <span class=\"hljs-attr\">contentData</span>: {}\n        };\n    },\n    <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">loadState</span>(<span class=\"hljs-params\"></span>) {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbarState</span> = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(\n                <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>)\n            ) || {};\n\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">contentData</span> = { \n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Dynamically loaded content.&#x27;</span> \n            };\n        }\n    }\n};\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>Call Services</h2><a id=\"call-services\" title=\"Call Services\"></a>\n<p>In this implementation, you have a combination of server-side directives for data preloading and the use of the <code>include</code> directive to incorporate reusable components, such as the navbar and other layout elements, into the page. While this pattern works efficiently, it currently lacks support for component-specific setups as seen in frameworks like Nuxt.js. Let’s break down how this approach works and the potential for future enhancements.</p>\n<p><strong>Server-Side Directive (s:docs)</strong></p>\n<p>In the main HTML file (index.hhtml), you are using a directive (s:docs=“docs”) to bind server-preloaded data (in this case, docs) to the client-side rendering. This allows the initial data, such as the navigation structure (docs.navbar), to be fetched server-side and passed to the client before the page is rendered.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span> <span class=\"hljs-attr\">s:docs</span>=<span class=\"hljs-string\">&quot;docs&quot;</span> <span class=\"hljs-attr\">c-cloak</span>&gt;</span>\n</code></pre>\n             </div>\n<p>The <code>docs</code> object is populated on the server, likely from a backend data source or file, and it is injected into the template. This enables the use of this data immediately upon loading without additional client-side API calls, improving the initial loading performance.</p>\n<p><strong>Using the include Directive for Templates</strong><br>\nYou are including reusable components, such as the navbar, breadcrumbs, and footer, with the <code>include</code> directive. These templates are preloaded on the server, enhancing modularity and maintainability:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/navbar&#x27;) --&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/breadcrumb&#x27;); --&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/footer&#x27;); --&gt;</span>\n</code></pre>\n             </div>\n<p>By loading these components server-side, you avoid multiple HTTP requests to fetch the template separately and enable the server to handle the logic related to content inclusion. However, as you noted, this approach currently processes only the main setup logic, and any additional setup logic within included templates (like navbar.html) is not supported.</p>\n<h3>Client-Side State Updates</h3>\n<p>Once the data and templates are preloaded on the server, the client-side JavaScript is responsible for handling state updates. For example, in your main component, you load the saved state of the navbar from localStorage and provide methods to toggle the state:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">navbar</span>: [] }\n    },\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n    },\n\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">loadState</span>(<span class=\"hljs-params\"></span>) {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbar</span> = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(\n                <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>)\n            ) || {};\n            \n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbar</span>;\n        },\n\n        <span class=\"hljs-title function_\">saveState</span>(<span class=\"hljs-params\">state</span>) {\n            <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(state));\n        },\n\n        <span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-params\">isOpened, itemName</span>) {\n            isOpened = !isOpened;\n            <span class=\"hljs-keyword\">const</span> currentState = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n            currentState[itemName] = isOpened;\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">saveState</span>(currentState);\n            <span class=\"hljs-keyword\">return</span> isOpened;\n        }\n    }\n};\n</code></pre>\n             </div>\n<p>This ensures that interactions on the page, such as expanding or collapsing navbar sections, persist between sessions, as the state is stored in localStorage and reloaded when the page is mounted.</p>\n<h3>The Limitation</h3>\n<p>As noted in the provided comment, there is no current support for individual setup logic within included templates (like <code>navbar.html</code>). This differs from frameworks like Nuxt.js, where each component can have its own setup function. In your current implementation, adding a <code>script setup</code> block inside an included template would cause issues, as only the setup logic from the main template (<code>index.html</code>) is processed.</p>\n<p>For example, adding a <code>setup</code> block in the <code>navbar.html</code> would not work as expected:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-comment\">&lt;!-- navbar.html --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">isOpened</span>: <span class=\"hljs-literal\">false</span> };\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">toggleNavbar</span>(<span class=\"hljs-params\"></span>) {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isOpened</span> = !<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isOpened</span>;\n        }\n    }\n};\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p>This would break the application because only the first setup is processed, and additional setups are ignored.</p>\n<h3>Future Enhancements</h3>\n<p>The idea of allowing component-specific setups, similar to Nuxt.js, is a potential enhancement that could improve the flexibility of the system. However, this needs to be handled carefully to avoid performance issues like infinite loading loops. When each component has its own setup logic, the application might end up in a continuous loop of re-rendering if not properly managed.</p>\n<p>To safely implement component-specific setup:</p>\n<ul>\n<li><strong>Careful Dependency Management:</strong> Ensure that each component’s setup logic is independent and doesn’t trigger unnecessary re-renders of the parent component.</li>\n<li><strong>Lazy Loading:</strong> Consider lazy loading for templates or components that don’t need to be preloaded on the server, reducing the initial load and avoiding potential issues with large applications.</li>\n<li><strong>Optimized State Sharing:</strong> Provide mechanisms to share state across components without requiring full re-execution of setup logic when components are dynamically included.</li>\n</ul>\n<p>Here’s how individual setups could work in the future, following a model like Nuxt.js:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-comment\">&lt;!-- index.html --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span> <span class=\"hljs-attr\">s:docs</span>=<span class=\"hljs-string\">&quot;docs&quot;</span> <span class=\"hljs-attr\">c-cloak</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/navbar&#x27;) --&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<br/>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-comment\">&lt;!-- navbar.html --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">isOpened</span>: <span class=\"hljs-literal\">false</span> };\n    },\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">toggleNavbar</span>(<span class=\"hljs-params\"></span>) {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isOpened</span> = !<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">isOpened</span>;\n        }\n    }\n};\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;toggleNavbar&quot;</span>&gt;</span>Menu Item<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n</code></pre>\n             </div>\n<p>In this future scenario, each component or template could handle its own state and methods without conflicting with the main template setup.</p>\n<h2>Full implementation</h2><a id=\"full-implementation\" title=\"Full implementation\"></a>\n<p>Below is an example of implementation of practically all the directives that were used to create the system in this documentation.</p>\n<p><code>/public/templates/default.html</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">headers</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">scope</span>&gt;</span> \n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slot</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scripts</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n             </div>\n<p><code>/public/views/docs/index.html</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span> <span class=\"hljs-attr\">s:docs</span>=<span class=\"hljs-string\">&quot;docs&quot;</span> <span class=\"hljs-attr\">c-cloak</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;navbar bg-neutral-800 h-16 top-0 w-full fixed flex z-50 shadow-lg&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;max-w-8xl mx-auto flex container&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;w-60&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;/&quot;</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;UCS.js&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/assets/logo-min-invert.png&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;mt-6 ml-4&quot;</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;justify-between w-full text&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;relative text-right mt-3 hover:cursor-pointer group bg-neutral-800 float-right rounded-lg border border-black&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;absolute text-white z-40 top-2 left-18&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;left: 12px; color: #ccd0d5;&quot;</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fa-solid fa-search&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> \n                        <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> \n                            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;p-1.5 pl-10 text-white bg-transparent&quot;</span> \n                            <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">&quot;Search&quot;</span> \n                        /&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;justify-between align-middle text-center mr-2 text-white flex&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://github.com/andrehrferreira/cmmv&quot;</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;Github&quot;</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_blank&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-2xl p-2 mt-2 hover:text-neutral-300&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fa-brands fa-github&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n\n                <span class=\"hljs-comment\">&lt;!--&lt;a href=&quot;https://discord.gg/XtUH9sJP&quot; title=&quot;Discord&quot; target=&quot;_blank&quot; class=&quot;text-2xl p-2 mt-2 hover:text-neutral-300&quot;&gt;\n                    &lt;i class=&quot;fa-brands fa-discord&quot;&gt;&lt;/i&gt;\n                &lt;/a&gt;--&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;max-w-8xl mx-auto flex container&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;w-60 fixed mt-20 z-40 overflow-auto&quot;</span> \n            <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;height: calc(100% - 84px); background-color: #2e3035&quot;</span> \n            <span class=\"hljs-attr\">c-cloak</span>\n        &gt;</span>\n            <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/navbar&#x27;) --&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;mt-20 ml-64 text-justify relative&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n                <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;lg:pl-[19.5rem] m-4 p-4 px-20 max-w-3x1 mx-auto xl:max-w-none xl:ml-0 xl:mr-[15.5rem] xl:pr-16&quot;</span>\n                <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;{&#x27;w-full&#x27;: docs.anchors.length &lt; 4}&quot;</span>\n            &gt;</span>\n                <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/breadcrumb&#x27;); --&gt;</span>\n                <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/anchors&#x27;); --&gt;</span>\n\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;max-w-screen-lg relative text-white mb-20 context-html&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-html</span>=<span class=\"hljs-string\">&quot;docs.index&quot;</span>&gt;</span>{ docs.index }<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;absolute top-0 right-0&quot;</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> \n                            <span class=\"hljs-attr\">:href</span>=<span class=\"hljs-string\">&quot;`https://github.com/andrehrferreira/docs.cmmv.io/tree/main${docs.link?.replace(&#x27;.html&#x27;, &#x27;.md&#x27;)}?plain=1`&quot;</span> \n                            <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_blank&quot;</span> \n                            <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;Suggest change&quot;</span>\n                        &gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fa-solid fa-pen-to-square fa-lg&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n            <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/footer&#x27;); --&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-attr</span>=<span class=\"hljs-string\">&quot;nonce&quot;</span>&gt;</span><span class=\"language-javascript\">\n    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">updateCurrent</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">const</span> scrollPosition = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">scrollY</span>;\n\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(<span class=\"hljs-string\">&#x27;.current&#x27;</span>).<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">el</span> =&gt;</span> el.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">remove</span>(<span class=\"hljs-string\">&#x27;current&#x27;</span>));\n\n        <span class=\"hljs-keyword\">let</span> repoint = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(<span class=\"hljs-string\">&#x27;#anchors li&#x27;</span>).<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">item, index</span>) =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> target = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(item.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;a&#x27;</span>).<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">&#x27;href&#x27;</span>));\n            \n            <span class=\"hljs-keyword\">if</span> (target?.<span class=\"hljs-property\">offsetTop</span> &gt;= scrollPosition &amp;&amp; !repoint) {\n                repoint = <span class=\"hljs-literal\">true</span>;\n                item.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">&#x27;current&#x27;</span>);\n            }\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(!target) {\n                repoint = <span class=\"hljs-literal\">true</span>;\n                item.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">&#x27;current&#x27;</span>);\n            }\n        });\n    }\n\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;scroll&#x27;</span>, updateCurrent);\n\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;DOMContentLoaded&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(<span class=\"hljs-string\">&#x27;a[href^=&quot;#&quot;]&#x27;</span>).<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">link, index</span>) =&gt;</span> {\n            link.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;click&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">event</span>) {\n                event.<span class=\"hljs-title function_\">preventDefault</span>();\n                <span class=\"hljs-keyword\">const</span> href = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">getAttribute</span>(<span class=\"hljs-string\">&#x27;href&#x27;</span>);\n                \n                <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelectorAll</span>(<span class=\"hljs-string\">&#x27;.current&#x27;</span>).<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">el</span> =&gt;</span> el.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">remove</span>(<span class=\"hljs-string\">&#x27;current&#x27;</span>));\n                \n                <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">parentElement</span>.<span class=\"hljs-property\">classList</span>.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-string\">&#x27;current&#x27;</span>);\n                \n                <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">scrollTo</span>({\n                    <span class=\"hljs-attr\">top</span>: <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(href).<span class=\"hljs-property\">offsetTop</span>,\n                    <span class=\"hljs-attr\">behavior</span>: <span class=\"hljs-string\">&#x27;smooth&#x27;</span>\n                });\n\n                <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">location</span>.<span class=\"hljs-property\">hash</span> = href;\n            });\n        });\n\n        <span class=\"hljs-title function_\">updateCurrent</span>();\n    });\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">navbar</span>: [] }\n    },\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n    },\n\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">loadState</span>(<span class=\"hljs-params\"></span>){\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbar</span> = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>)) || {};\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbar</span>;\n        },\n\n        <span class=\"hljs-title function_\">saveState</span>(<span class=\"hljs-params\">state</span>) {\n            <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(state));\n        },\n\n        <span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-params\">isOpened, itemName</span>) {\n            isOpened = !isOpened;\n\n            <span class=\"hljs-keyword\">const</span> currentState = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n            currentState[itemName] = isOpened;\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">saveState</span>(currentState);\n\n            <span class=\"hljs-keyword\">return</span> isOpened;\n        }\n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p><code>/public/views/docs/navbar.html</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;p-4 select-none top-16&quot;</span> <span class=\"hljs-attr\">c-cloak</span> <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;docs&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(item, key) in docs.navbar&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n            <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;item&quot;</span>\n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;flex hover:text-blue-700 itemRoot text-white&quot;</span> \n            <span class=\"hljs-attr\">:id</span>=<span class=\"hljs-string\">&quot;item?.name.replace(/\\s/,&#x27;_&#x27;)&quot;</span> \n            <span class=\"hljs-attr\">:data-opened</span>=<span class=\"hljs-string\">&quot;false&quot;</span> \n            @<span class=\"hljs-attr\">click.stop</span>=<span class=\"hljs-string\">&quot;navbar[item?.name.replace(/\\s/, `_`)] = toggle(navbar[item?.name.replace(/\\s/, `_`)], item.name?.replace(/\\s/, `_`))&quot;</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;flex flex-1 font-bold text-md cursor-pointer navbar-item&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span> <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;item &amp;&amp; item?.isDir&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-white&quot;</span>&gt;</span>{{ item?.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">c-else</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-white&quot;</span>&gt;</span>{{ item?.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;justify-between cursor-pointer&quot;</span> <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;item?.isDir&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fa-solid fa-angle-down&quot;</span> <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;!navbar[item?.name.replace(/\\s/, `_`)]&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fa-solid fa-angle-up&quot;</span> <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;navbar[item?.name.replace(/\\s/, `_`)]&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> \n            <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;item &amp;&amp; item.children &amp;&amp; item.children.length &gt; 0&quot;</span>\n            <span class=\"hljs-attr\">:id</span>=<span class=\"hljs-string\">&quot;`${item?.name.replace(/\\s/, `_`)}_contents`&quot;</span> \n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;p-4 py-1 text-md mb-4&quot;</span>\n            <span class=\"hljs-attr\">:style</span>=<span class=\"hljs-string\">&quot;(navbar[item?.name.replace(/\\s/, `_`)]) ? &#x27;&#x27; : &#x27;display: none;&#x27;&quot;</span>\n        &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(child) in item.children&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hover:text-gray-800 text-white text-base p-1&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-size: 12px&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">:href</span>=<span class=\"hljs-string\">&quot;child.uri&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-base&quot;</span>&gt;</span>{{ child.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n</code></pre>\n             </div>\n<p><code>/src/docs.controller.ts</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> fs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;fs&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;path&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">Controller</span>, <span class=\"hljs-title class_\">Get</span>, <span class=\"hljs-title class_\">Param</span>, \n    <span class=\"hljs-title class_\">Response</span>, <span class=\"hljs-title class_\">ServiceRegistry</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DocsService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./docs.service&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> index = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;../docs/index.json&quot;</span>);\n\n<span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&quot;docs&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">DocsController</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">docsService</span>: <span class=\"hljs-title class_\">DocsService</span></span>){}\n\n\t<span class=\"hljs-meta\">@Get</span>()\n\t<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">indexHandler</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Response</span>() res</span>) {\t\t\n\t\t<span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&quot;views/docs/index&quot;</span>, {\n\t\t\t<span class=\"hljs-attr\">docs</span>: <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">docsService</span>.<span class=\"hljs-title function_\">getDocsStrutucture</span>(),\n\t\t\t<span class=\"hljs-attr\">services</span>: <span class=\"hljs-title class_\">ServiceRegistry</span>.<span class=\"hljs-title function_\">getServicesArr</span>()\n\t\t});\n\t}\n\n\t<span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&quot;:item&quot;</span>)\n\t<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getDocHandler</span>(<span class=\"hljs-params\">\n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&quot;item&quot;</span>) <span class=\"hljs-attr\">item</span>: <span class=\"hljs-built_in\">string</span>, \n        <span class=\"hljs-meta\">@Response</span>() res\n    </span>) {\n\t\t<span class=\"hljs-keyword\">if</span>(index[item])\n\t\t\t<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">getDoc</span>(index[item], res)\n\t\t<span class=\"hljs-keyword\">else</span>\n\t\t\tres.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">404</span>).<span class=\"hljs-title function_\">end</span>();\n\t}\n\n\t<span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&quot;:dir/:item&quot;</span>)\n\t<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getDocSubdirHandler</span>(<span class=\"hljs-params\">\n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&quot;dir&quot;</span>) <span class=\"hljs-attr\">dir</span>: <span class=\"hljs-built_in\">string</span>, \n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&quot;item&quot;</span>) <span class=\"hljs-attr\">item</span>: <span class=\"hljs-built_in\">string</span>, \n        <span class=\"hljs-meta\">@Response</span>() res\n    </span>) {\n\t\t<span class=\"hljs-keyword\">const</span> fullPath = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${dir}</span>/<span class=\"hljs-subst\">${item}</span>`</span>;\n\n\t\t<span class=\"hljs-keyword\">if</span>(index[fullPath])\n\t\t\t<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">getDoc</span>(index[fullPath], res)\n\t\t<span class=\"hljs-keyword\">else</span>\n\t\t\tres.<span class=\"hljs-title function_\">status</span>(<span class=\"hljs-number\">404</span>).<span class=\"hljs-title function_\">end</span>();\n\t}\n\n\t<span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getDoc</span>(<span class=\"hljs-params\"><span class=\"hljs-attr\">docFilename</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Response</span>() res</span>) {\n\t\t<span class=\"hljs-keyword\">const</span> file = path.<span class=\"hljs-title function_\">resolve</span>(docFilename);\n\t\t<span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">docsService</span>.<span class=\"hljs-title function_\">getDocsStrutucture</span>(file);\n\n\t\t<span class=\"hljs-keyword\">return</span> res.<span class=\"hljs-title function_\">render</span>(<span class=\"hljs-string\">&quot;views/docs/index&quot;</span>, {\n\t\t\t<span class=\"hljs-attr\">docs</span>: data,\n\t\t\t<span class=\"hljs-attr\">services</span>: <span class=\"hljs-title class_\">ServiceRegistry</span>.<span class=\"hljs-title function_\">getServicesArr</span>()\n\t\t});\n\t}\n}\n</code></pre>\n             </div>\n<p>To have full access to the code, access <a href=\"https://github.com/andrehrferreira/docs.cmmv.io\" target=\"_blank\" rel=\"nofollow\">Github</a></p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "directives",
                    "label": "Directives"
                },
                {
                    "id": "s-data",
                    "label": "s-data"
                },
                {
                    "id": "s-attr",
                    "label": "s-attr"
                },
                {
                    "id": "s-i18n",
                    "label": "s-i18n"
                },
                {
                    "id": "s-if",
                    "label": "s-if"
                },
                {
                    "id": "s-for",
                    "label": "s-for"
                },
                {
                    "id": "include",
                    "label": "Include"
                },
                {
                    "id": "call-services",
                    "label": "Call Services"
                },
                {
                    "id": "full-implementation",
                    "label": "Full implementation"
                }
            ],
            "link": "docs/6-View/2-Directives.html",
            "links": {}
        }
    },
    "view/headers": {
        "prev": {
            "link": "docs/view/directives",
            "title": "Directives",
            "desc": "Preloading data that will be sent directly in HTML is a crucial factor for SEO (..."
        },
        "next": {
            "link": "docs/view/assets",
            "title": "Assets",
            "desc": "In CMMV, it is recommended that all static files, such as JavaScript libraries,..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/directives\" />\n                    <link rel=\"next\" href=\"/docs/view/assets\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Headers\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/directives\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/headers\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/assets\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Headers</h1><a id=\"headers\" title=\"Headers\"></a>\n<p>In CMMV, you can configure response headers to enhance security, define metadata, or customize the behavior of your web application. This can be achieved in two ways: using the <code>.cmmv.config.js</code> file located in the root of your project or by adding specific configurations directly into the template files for more granular control.</p>\n<p>The <code>.cmmv.config.js</code> file serves as the global configuration file for your CMMV project. You can set default headers that will apply to all responses from your application by defining the headers object in this file.</p>\n<p>For example, to configure a Content-Security-Policy and other security-related headers, your <code>.cmmv.config.js</code> might look like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">&quot;Content-Security-Policy&quot;</span>: [\n            <span class=\"hljs-string\">&quot;default-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;font-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;connect-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;img-src &#x27;self&#x27; data:&quot;</span>\n        ],\n        <span class=\"hljs-string\">&quot;X-Frame-Options&quot;</span>: <span class=\"hljs-string\">&quot;DENY&quot;</span>,\n        <span class=\"hljs-string\">&quot;X-Content-Type-Options&quot;</span>: <span class=\"hljs-string\">&quot;nosniff&quot;</span>,\n        <span class=\"hljs-string\">&quot;Referrer-Policy&quot;</span>: <span class=\"hljs-string\">&quot;no-referrer&quot;</span>,\n        <span class=\"hljs-string\">&quot;Strict-Transport-Security&quot;</span>: <span class=\"hljs-string\">&quot;max-age=31536000; ...&quot;</span>\n    }\n}\n</code></pre>\n             </div>\n<p>For more specific configurations, such as adding metadata or setting headers that only apply to a particular route, you can define these directly in your Vue-style template files.</p>\n<p>In the template’s <code>&lt;script&gt;</code> block, under head, you can configure meta tags, link tags, and other headers:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n\n    <span class=\"hljs-attr\">head</span>: {\n        <span class=\"hljs-attr\">meta</span>: [\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;description&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;CMMV Todolist sample&quot;</span> },\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;keywords&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;cmmv, contract model, websocket&quot;</span> }\n        ],\n        <span class=\"hljs-attr\">link</span>: [\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;stylesheet&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;/assets/styles/todo.css&quot;</span> },\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;canonical&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;https://cmmv.io&quot;</span> },\n        ],\n        <span class=\"hljs-attr\">script</span>: [\n            { <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/npm/some-lib.js&quot;</span>, <span class=\"hljs-attr\">async</span>: <span class=\"hljs-literal\">true</span> }\n        ]\n    }\n\n    ...\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<ul>\n<li><strong>meta:</strong> Adds or overrides meta tags in the page’s head, including those for description, keywords, and Content-Security-Policy.</li>\n<li><strong>link:</strong> Used to include external resources like stylesheets or canonical URLs for SEO.</li>\n<li><strong>script:</strong> Enables you to include additional scripts with custom attributes like async or defer.</li>\n</ul>\n<p>By configuring headers both globally and at the template level, you have full control over the behavior, security, and SEO optimization of your CMMV application.</p>\n<h1>HTTP Module</h1><a id=\"http-module\" title=\"HTTP Module\"></a>\n<p>The <code>@cmmv/http</code> module provides an automatic way to manage and optimize the headers that are sent with HTTP responses, reducing the size of unnecessary headers based on the request type (e.g., <code>GET</code>, <code>POST</code>, <code>PUT</code>, or <code>DELETE</code> requests). This built-in functionality ensures that only relevant headers are included, minimizing overhead and improving performance.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-keyword\">if</span> (req.<span class=\"hljs-property\">method</span> === <span class=\"hljs-string\">&#x27;GET&#x27;</span>) {\n    res.<span class=\"hljs-title function_\">setHeader</span>(\n        <span class=\"hljs-string\">&#x27;Strict-Transport-Security&#x27;</span>,\n        <span class=\"hljs-string\">&#x27;max-age=15552000; includeSubDomains&#x27;</span>,\n    );\n    res.<span class=\"hljs-title function_\">setHeader</span>(<span class=\"hljs-string\">&#x27;X-Content-Type-Options&#x27;</span>, <span class=\"hljs-string\">&#x27;nosniff&#x27;</span>);\n    res.<span class=\"hljs-title function_\">setHeader</span>(<span class=\"hljs-string\">&#x27;X-Frame-Options&#x27;</span>, <span class=\"hljs-string\">&#x27;SAMEORIGIN&#x27;</span>);\n    res.<span class=\"hljs-title function_\">setHeader</span>(<span class=\"hljs-string\">&#x27;X-XSS-Protection&#x27;</span>, <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n}\n</code></pre>\n             </div>\n<ul>\n<li>\n<p><strong>Strict-Transport-Security:</strong> Ensures that the browser only communicates with the server over HTTPS for the next 180 days (15552000 seconds) and applies this policy to all subdomains.</p>\n</li>\n<li>\n<p><strong>X-Content-Type-Options:</strong> Prevents browsers from interpreting files as a different MIME type, which can help prevent attacks.</p>\n</li>\n<li>\n<p><strong>X-Frame-Options:</strong> Protects the site from clickjacking attacks by only allowing it to be displayed in a frame of the same origin.</p>\n</li>\n<li>\n<p><strong>X-XSS-Protection:</strong> Disables XSS filtering to avoid potential browser-level issues.</p>\n</li>\n</ul>\n<p>POST, PUT, DELETE Requests: For these types of requests, the module removes specific headers that are not necessary for write operations, ensuring smaller and more efficient responses.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-keyword\">if</span> ([<span class=\"hljs-string\">&#x27;POST&#x27;</span>, <span class=\"hljs-string\">&#x27;PUT&#x27;</span>, <span class=\"hljs-string\">&#x27;DELETE&#x27;</span>].<span class=\"hljs-title function_\">includes</span>(req.<span class=\"hljs-property\">method</span>)) {\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;X-DNS-Prefetch-Control&#x27;</span>);\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;X-Download-Options&#x27;</span>);\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;X-Permitted-Cross-Domain-Policies&#x27;</span>);\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;Strict-Transport-Security&#x27;</span>);\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;Content-Security-Policy&#x27;</span>);\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;Cross-Origin-Opener-Policy&#x27;</span>);\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;Cross-Origin-Resource-Policy&#x27;</span>);\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;Origin-Agent-Cluster&#x27;</span>);\n    res.<span class=\"hljs-title function_\">removeHeader</span>(<span class=\"hljs-string\">&#x27;Referrer-Policy&#x27;</span>);\n}\n</code></pre>\n             </div>\n<ul>\n<li><strong>X-DNS-Prefetch-Control:</strong> Reduces DNS prefetching, which is not needed in POST requests.</li>\n<li><strong>X-Download-Options:</strong> Typically used for file downloads; unnecessary for most write operations.</li>\n<li><strong>X-Permitted-Cross-Domain-Policies:</strong> Restricts which domain policies are sent, but not required for write operations.</li>\n<li><strong>Strict-Transport-Security:</strong> Removed in write requests to allow more flexibility in transport for sensitive operations.</li>\n<li><strong>Content-Security-Policy:</strong> Temporarily disabled for certain write requests.</li>\n<li><strong>Cross-Origin-Opener-Policy:</strong> Removed to allow more flexibility when interacting with cross-origin content.</li>\n<li><strong>Cross-Origin-Resource-Policy:</strong> Ensures more open policies for resource sharing during POST, PUT, or DELETE requests.</li>\n<li><strong>Origin-Agent-Cluster:</strong> Removes restrictions on the agent’s ability to share resources across origins.</li>\n<li><strong>Referrer-Policy:</strong> Not needed for write operations, removed to reduce header size.</li>\n</ul>\n<p>The <code>@cmmv/http</code> module intelligently manages headers to optimize performance, especially for write operations (<code>POST</code>, <code>PUT</code>, <code>DELETE</code>). For read-only operations (<code>GET</code>), it ensures strong security by setting appropriate headers. This approach reduces the amount of unnecessary data sent with each request, while still adhering to best practices in web security.</p>\n<h1>Additional Modules</h1><a id=\"additional-modules\" title=\"Additional Modules\"></a>\n<p>The <code>@cmmv/http</code> module integrates several essential middleware components to further enhance security, session management, and overall performance. These include <code>cors</code>, <code>helmet</code>, <code>session</code>, and <code>compression</code>, which modify headers and handle certain aspects of HTTP communication.</p>\n<h2>CORS</h2><a id=\"cors\" title=\"CORS\"></a>\n<p>Controls access to resources from different origins by setting appropriate CORS (Cross-Origin Resource Sharing) headers.</p>\n<p><strong>Effect on Headers:</strong></p>\n<ul>\n<li><strong>Access-Control-Allow-Origin:</strong> Specifies which origins can access the server.</li>\n<li><strong>Access-Control-Allow-Methods:</strong> Lists allowed HTTP methods (e.g., GET, POST).</li>\n<li><strong>Access-Control-Allow-Headers:</strong> Indicates which headers can be used during the actual request.</li>\n<li><strong>Access-Control-Allow-Credentials:</strong> Indicates whether the response to the request can be exposed to the client.</li>\n</ul>\n<h2>Helmet</h2><a id=\"helmet\" title=\"Helmet\"></a>\n<p>Helmet helps secure the application by setting various HTTP headers that protect against common attacks.</p>\n<p><strong>Effect on Headers:</strong></p>\n<ul>\n<li><strong>Content-Security-Policy:</strong> Restricts the sources from which the browser can load resources.</li>\n<li><strong>X-DNS-Prefetch-Control:</strong> Disables DNS prefetching to reduce privacy leakage.</li>\n<li><strong>X-Frame-Options:</strong> Protects against clickjacking by controlling whether the page can be embedded in a frame.</li>\n<li><strong>X-Permitted-Cross-Domain-Policies:</strong> Controls Adobe Flash and PDF cross-domain policies.</li>\n<li><strong>Strict-Transport-Security:</strong> Forces secure (HTTPS) connections.</li>\n<li><strong>X-Download-Options:</strong> Prevents browsers from downloading files from your website without authorization.</li>\n<li><strong>Referrer-Policy:</strong> Controls how much referrer information is included with requests.</li>\n</ul>\n<h2>Session</h2><a id=\"session\" title=\"Session\"></a>\n<p>Manages user sessions via cookies, storing user authentication state and other session data.</p>\n<ul>\n<li><strong>Set-Cookie:</strong> Sets the session cookie with attributes like HttpOnly, Secure, SameSite, etc.</li>\n</ul>\n<h2>Compression</h2><a id=\"compression\" title=\"Compression\"></a>\n<p>Compresses the HTTP responses using Gzip or Brotli to reduce the size of the response body, speeding up the transmission.</p>\n<p><strong>Effect on Headers:</strong></p>\n<ul>\n<li><strong>Content-Encoding:</strong> Specifies the type of compression used (e.g., gzip, br).</li>\n<li><strong>Vary:</strong> Instructs the browser to vary the response based on the Accept-Encoding header, which allows the server to return different content based on the client’s compression capabilities.</li>\n</ul>\n<p>The <code>.cmmv.config.js</code> file in the root of the project allows developers to define and customize security policies, session management, CORS settings, and compression options. These configurations will automatically modify the response headers to meet security and performance requirements.</p>\n<p>Example <code>.cmmv.config.js</code> Configuration:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">&quot;Content-Security-Policy&quot;</span>: [\n            <span class=\"hljs-string\">&quot;default-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;font-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;connect-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;img-src &#x27;self&#x27; data:&quot;</span>\n        ]\n    },\n    <span class=\"hljs-attr\">cors</span>: {\n        <span class=\"hljs-attr\">origin</span>: <span class=\"hljs-string\">&quot;https://example.com&quot;</span>,\n        <span class=\"hljs-attr\">methods</span>: [<span class=\"hljs-string\">&quot;GET&quot;</span>, <span class=\"hljs-string\">&quot;POST&quot;</span>],\n        <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">helmet</span>: {\n        <span class=\"hljs-attr\">contentSecurityPolicy</span>: {\n            <span class=\"hljs-attr\">directives</span>: {\n                <span class=\"hljs-attr\">defaultSrc</span>: [<span class=\"hljs-string\">&quot;&#x27;self&#x27;&quot;</span>],\n                <span class=\"hljs-attr\">scriptSrc</span>: [<span class=\"hljs-string\">&quot;&#x27;self&#x27;&quot;</span>, <span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net&quot;</span>],\n                <span class=\"hljs-attr\">styleSrc</span>: [<span class=\"hljs-string\">&quot;&#x27;self&#x27;&quot;</span>, <span class=\"hljs-string\">&quot;&#x27;unsafe-inline&#x27;&quot;</span>]\n            }\n        }\n    },\n    <span class=\"hljs-attr\">session</span>: {\n        <span class=\"hljs-attr\">secret</span>: <span class=\"hljs-string\">&quot;my-secret-key&quot;</span>,\n        <span class=\"hljs-attr\">resave</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">saveUninitialized</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">cookie</span>: {\n            <span class=\"hljs-attr\">secure</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-attr\">sameSite</span>: <span class=\"hljs-string\">&#x27;lax&#x27;</span>\n        }\n    },\n    <span class=\"hljs-attr\">compression</span>: {\n        <span class=\"hljs-attr\">level</span>: <span class=\"hljs-number\">6</span>,\n        <span class=\"hljs-attr\">threshold</span>: <span class=\"hljs-number\">1024</span>\n    }\n};\n</code></pre>\n             </div>\n<h3>Header Customization</h3>\n<p>The headers can also be set or modified directly within the template setup using the <code>head</code> property. This provides flexibility to add meta tags, canonical links, and other SEO-related settings dynamically per page.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n\n    <span class=\"hljs-attr\">head</span>: {\n        <span class=\"hljs-attr\">meta</span>: [\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;description&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;CMMV Todolist sample&quot;</span> },\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;keywords&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;cmmv, contract model, websocket&quot;</span> }\n        ],\n        <span class=\"hljs-attr\">link</span>: [\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;stylesheet&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;/assets/styles/todo.css&quot;</span> },\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;canonical&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;https://cmmv.io&quot;</span> },\n        ]\n    },\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p>The <code>@cmmv/http</code> module automates essential optimizations to HTTP headers, ensuring security and performance through compression, session management, and protection against common web attacks via middleware like <code>cors</code>, <code>helmet</code>, and <code>compression</code>. This is supplemented by custom configurations defined in the <code>.cmmv.config.js</code> file and template-specific header controls, making the CMMV platform a secure and efficient foundation for web applications.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "headers",
                    "label": "Headers"
                },
                {
                    "id": "http-module",
                    "label": "HTTP Module"
                },
                {
                    "id": "additional-modules",
                    "label": "Additional Modules"
                },
                {
                    "id": "cors",
                    "label": "CORS"
                },
                {
                    "id": "helmet",
                    "label": "Helmet"
                },
                {
                    "id": "session",
                    "label": "Session"
                },
                {
                    "id": "compression",
                    "label": "Compression"
                }
            ],
            "link": "docs/6-View/3-Headers.html",
            "links": {}
        }
    },
    "view/assets": {
        "prev": {
            "link": "docs/view/headers",
            "title": "Headers",
            "desc": "In CMMV, you can configure response headers to enhance security, define metadata..."
        },
        "next": {
            "link": "docs/view/templates",
            "title": "Templates",
            "desc": "CMMV provides a flexible templating system, allowing you to configure master pag..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/headers\" />\n                    <link rel=\"next\" href=\"/docs/view/templates\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Assets\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/headers\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/assets\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/templates\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Assets</h1><a id=\"assets\" title=\"Assets\"></a>\n<p>In CMMV, it is recommended that all static files, such as JavaScript libraries, CSS, fonts, and images, are served through a Content Delivery Network (CDN). CDNs are optimized for fast and efficient delivery of assets, reducing latency and improving the user experience. However, if you choose to serve these files directly from your application, they must be placed in the <code>/public</code> directory. The <code>@cmmv/http</code> module automatically looks for and serves static files from this directory.</p>\n<p>If you choose not to use a CDN, place all your static files under the <code>/public</code> directory. This is the directory where @cmmv/http will automatically serve static files like:</p>\n<h2>Bundle</h2><a id=\"bundle\" title=\"Bundle\"></a>\n<p>By default, the application will generate complementary files, resulting in a final bundle that is necessary if you are using RPC and frontend reactivity. This bundle will be created as <code>/assets/bundle.min.js</code> and must be included in your HTML or template files to ensure the frontend functions correctly.</p>\n<p><strong>Example <code>.cmmv.config.js</code> Configuration for Assets:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    ...\n\n    <span class=\"hljs-attr\">scripts</span>: [\n        { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;text/javascript&quot;</span>, <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&quot;/assets/bundle.min.js&quot;</span>, <span class=\"hljs-attr\">defer</span>: <span class=\"hljs-string\">&quot;defer&quot;</span> },\n        ...\n    ]\n};\n</code></pre>\n             </div>\n<p>If you are serving assets locally, ensure your <code>/public</code> directory is structured as follows:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">/public\n    /assets\n        /styles.css\n        /app.min.js\n        /bundle.min.js\n    /images\n        /logo.png\n    /fonts\n        /custom-font.woff2\n    /favicon.ico\n    /robots.txt\n    /sitemap.xml\n    /service-worker.js\n</code></pre>\n             </div>\n<p>When using these assets in your HTML or templates, you can include the JavaScript bundle and any other static files like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;en&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>CMMV App<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- Include Styles --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;/assets/styles.css&quot;</span>&gt;</span>\n    \n    <span class=\"hljs-comment\">&lt;!-- Favicon --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;icon&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;/favicon.ico&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;image/x-icon&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- App Content --&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- Include the Bundle --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/assets/bundle.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n             </div>\n<p>In CMMV, managing assets is streamlined by recommending the use of CDNs for static files. However, if serving these assets directly from the application, placing them in the <code>/public</code> directory will allow <code>@cmmv/http</code> to handle them automatically. Additionally, the application will generate the necessary frontend bundles for handling reactivity and RPC features, available as <code>/assets/bundle.min.js</code>. All static files are easily accessible from this directory, ensuring a seamless integration with your application.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "assets",
                    "label": "Assets"
                },
                {
                    "id": "bundle",
                    "label": "Bundle"
                }
            ],
            "link": "docs/6-View/4-Assets.html",
            "links": {}
        }
    },
    "view/templates": {
        "prev": {
            "link": "docs/view/assets",
            "title": "Assets",
            "desc": "In CMMV, it is recommended that all static files, such as JavaScript libraries,..."
        },
        "next": {
            "link": "docs/view/views",
            "title": "Views",
            "desc": "Views in CMMV are HTML files located in the /public/views/ directory, typically..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/assets\" />\n                    <link rel=\"next\" href=\"/docs/view/views\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Templates\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/assets\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/templates\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/views\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Templates</h1><a id=\"templates\" title=\"Templates\"></a>\n<p>CMMV provides a flexible templating system, allowing you to configure master page templates for modular views. This setup helps create reusable layouts across your application, streamlining the structure and ensuring consistency in specific views.</p>\n<p>A master page template defines the base HTML layout of your views and is stored in the <code>/public/templates</code> directory. It serves as a foundation where dynamic content, headers, and scripts are injected. The structure follows a consistent format that looks like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;en&quot;</span> <span class=\"hljs-attr\">data-theme</span>=<span class=\"hljs-string\">&#x27;dark&#x27;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;dark&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">headers</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">scope</span>&gt;</span> \n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slot</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scripts</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>Key Elements</h2><a id=\"key-elements\" title=\"Key Elements\"></a>\n<ul>\n<li>\n<p><strong><code>&lt;headers/&gt;</code> Tag:</strong></p>\n</li>\n<li>\n<p>This tag is used to inject all processed headers from the <code>@cmmv/view</code> module, which may include metadata, stylesheets, and other elements configured within your views or globally.</p>\n</li>\n<li>\n<p>These headers come from your <code>.cmmv.config.js</code> or from custom settings defined in each view.</p>\n</li>\n<li>\n<p><strong><code>&lt;slot/&gt;</code> Tag:</strong></p>\n</li>\n<li>\n<p>The <code>&lt;slot/&gt;</code> element acts as a placeholder for the main content of your view.</p>\n</li>\n<li>\n<p>When rendering a view, the content of that view is dynamically injected into the slot.</p>\n</li>\n<li>\n<p><strong><code>&lt;scripts/&gt;</code> Tag:</strong></p>\n</li>\n</ul>\n<p>This tag handles the inclusion of JavaScript files configured in your <code>.cmmv.config.js</code> or directly within the view itself.<br>\nThis ensures that all required client-side scripts are included in the final rendering of the page.</p>\n<ul>\n<li><strong>Other Custom Tags:</strong></li>\n</ul>\n<p>Any additional tags or attributes you define in your template will be preserved during the rendering process.<br>\nEnsure that all external resources (links, scripts) include the <code>nonce=&quot;{ nonce }&quot;</code> attribute or <code>s-attr=&quot;nonce&quot;</code> for security, as required by the Content Security Policy (CSP) settings in CMMV.</p>\n<p>All master page templates are stored in the <code>/public/templates</code> directory. Here’s an example of a possible directory structure:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">/public\n    /templates\n        /default.html\n        /admin.html\n        /dashboard.html\n</code></pre>\n             </div>\n<h2>Defining a View</h2><a id=\"defining-a-view\" title=\"Defining a View\"></a>\n<p>In your view, you can configure which master template to use. This is done in the <code>s-setup</code> section of the view. Here’s an example of a view configuration that uses a custom layout and injects scripts:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;admin&quot;</span>,  <span class=\"hljs-comment\">// Reference to the /public/templates/admin.html file</span>\n\n    <span class=\"hljs-attr\">head</span>: {\n        <span class=\"hljs-attr\">meta</span>: [\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;description&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;Admin Panel&quot;</span> },\n            { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;keywords&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;admin, cmmv, dashboard&quot;</span> }\n        ],\n        <span class=\"hljs-attr\">link</span>: [\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;stylesheet&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;/assets/styles/admin.css&quot;</span> },\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;canonical&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;https://admin.cmmv.io&quot;</span> }\n        ]\n    },\n\n    <span class=\"hljs-attr\">scripts</span>: [\n        { <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&quot;/assets/js/admin-dashboard.js&quot;</span>, <span class=\"hljs-attr\">async</span>: <span class=\"hljs-literal\">true</span> }\n    ]\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p>The <code>.cmmv.config.js</code> file allows you to manage global JavaScript and stylesheets that should be included in your views. These will be injected into the <code>&lt;scripts/&gt;</code> and <code>&lt;headers/&gt;</code> tags of your master templates.</p>\n<p><strong>Example <code>.cmmv.config.js:</code></strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">headers</span>: {\n        <span class=\"hljs-string\">&quot;Content-Security-Policy&quot;</span>: [\n            <span class=\"hljs-string\">&quot;default-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;script-src &#x27;self&#x27; &#x27;unsafe-eval&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;style-src &#x27;self&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;font-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;connect-src &#x27;self&#x27;&quot;</span>,\n            <span class=\"hljs-string\">&quot;img-src &#x27;self&#x27; data:&quot;</span>\n        ]\n    },\n\n    <span class=\"hljs-attr\">assets</span>: {\n        <span class=\"hljs-attr\">scripts</span>: [\n            { <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&quot;/assets/js/main.js&quot;</span>, <span class=\"hljs-attr\">async</span>: <span class=\"hljs-literal\">true</span> },\n            { <span class=\"hljs-attr\">src</span>: <span class=\"hljs-string\">&quot;/assets/js/extra.js&quot;</span>, <span class=\"hljs-attr\">defer</span>: <span class=\"hljs-literal\">true</span> }\n        ],\n        <span class=\"hljs-attr\">styles</span>: [\n            { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;stylesheet&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;/assets/css/main.css&quot;</span> }\n        ]\n    }\n};\n</code></pre>\n             </div>\n<p>After setting up a view with a master template, the rendered page might look like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;en&quot;</span> <span class=\"hljs-attr\">data-theme</span>=<span class=\"hljs-string\">&#x27;dark&#x27;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;dark&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;description&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;Admin Panel&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;keywords&quot;</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;admin, cmmv, dashboard&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> \n            <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> \n            <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;/assets/styles/admin.css&quot;</span> \n            <span class=\"hljs-attr\">nonce</span>=<span class=\"hljs-string\">&quot;a1b2c3&quot;</span>\n        /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;canonical&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://admin.cmmv.io&quot;</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span> <span class=\"hljs-attr\">scope</span>&gt;</span> \n        <span class=\"hljs-comment\">&lt;!-- Main content of the view --&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;dashboard&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Welcome to the Admin Dashboard<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n        <span class=\"hljs-comment\">&lt;!-- Scripts --&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> \n            <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/assets/js/admin-dashboard.js&quot;</span> \n            <span class=\"hljs-attr\">async</span> \n            <span class=\"hljs-attr\">nonce</span>=<span class=\"hljs-string\">&quot;a1b2c3&quot;</span>\n        &gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n             </div>\n<p>In CMMV, you can modularize your views by defining master page templates located in <code>/public/templates</code>. These templates handle the injection of headers, dynamic content, and scripts through the <code>&lt;headers/&gt;</code>, <code>&lt;slot/&gt;</code>, and <code>&lt;scripts/&gt;</code> tags, respectively. By ensuring that security protocols are maintained with attributes like <code>nonce=&quot;{ nonce }&quot;</code>, your application remains secure while serving assets efficiently. Through this approach, you can create reusable layouts and maintain consistency across different sections of your application, enhancing both development speed and maintainability.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "templates",
                    "label": "Templates"
                },
                {
                    "id": "key-elements",
                    "label": "Key Elements"
                },
                {
                    "id": "defining-a-view",
                    "label": "Defining a View"
                }
            ],
            "link": "docs/6-View/5-Templates.html",
            "links": {}
        }
    },
    "view/views": {
        "prev": {
            "link": "docs/view/templates",
            "title": "Templates",
            "desc": "CMMV provides a flexible templating system, allowing you to configure master pag..."
        },
        "next": {
            "link": "docs/view/styles",
            "title": "Styles",
            "desc": "The new styling feature in @cmmv/view allows developers to define theme-specific..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/templates\" />\n                    <link rel=\"next\" href=\"/docs/view/styles\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Views\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/templates\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/views\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/styles\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Views</h1><a id=\"views\" title=\"Views\"></a>\n<p>Views in CMMV are HTML files located in the <code>/public/views/</code> directory, typically with the .html extension. They can either be rendered by controllers or accessed directly based on the URL path. For example, a request to <code>http://localhost:3000/docs</code> will automatically map to <code>/public/views/docs/index.html</code>. The <code>index.html</code> file can also include other views through the include directive, allowing for modular view components.</p>\n<p>Here is an example of a view structure using the <code>docs</code> section of the application.</p>\n<p><strong><code>docs/index.html</code></strong> <a href=\"https://github.com/andrehrferreira/docs.cmmv.io/blob/main/public/views/docs/index.html\" target=\"_blank\" rel=\"nofollow\">Code</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;app&quot;</span> <span class=\"hljs-attr\">s:docs</span>=<span class=\"hljs-string\">&quot;docs&quot;</span> <span class=\"hljs-attr\">c-cloak</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span> \n        <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;navbar bg-neutral-800 h-16 top-0 w-full fixed ...&quot;</span>\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;max-w-8xl mx-auto flex container items-center&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> \n                <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;menu-toggle&quot;</span> \n                <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-white text-2xl p-2 lg:hidden ml-2&quot;</span>\n            &gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fa-solid fa-bars&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;w-60&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> \n                    <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;/&quot;</span> \n                    <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;CMMV - Contract Model Model View Framework&quot;</span> \n                    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-white ml-4 flex items-center&quot;</span>\n                &gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> \n                        <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/assets/favicon/favicon-32x32.png&quot;</span> \n                        <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;CMMV Logo&quot;</span> \n                        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;32&quot;</span> \n                        <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;32&quot;</span> \n                        <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;w-[32px] h-auto&quot;</span>\n                    &gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;ml-2 text-lg font-semibold&quot;</span>&gt;</span>CMMV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;justify-between w-full text mr-2&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;relative text-right ...&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;docsearch&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;dark&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;justify-between align-middle ...&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> \n                    <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://github.com/andrehrferreira/cmmv&quot;</span> \n                    <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;Github&quot;</span> \n                    <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_blank&quot;</span> \n                    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-2xl p-2 hover:text-neutral-300&quot;</span>\n                &gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fa-brands fa-github&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;flex flex-wrap mx-auto&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n            <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;sidebar-menu&quot;</span> \n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;w-60 fixed z-40 overflow-auto leftbar ...&quot;</span> \n            <span class=\"hljs-attr\">c-cloak</span>\n        &gt;</span>\n            <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/navbar&#x27;) --&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;mt-20 ml-64 text-justify relative&quot;</span>&gt;</span>\n             <span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/anchors&#x27;); --&gt;</span>\n\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> \n                <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;lg:pl-[19.5rem] m-4 p-4 px-20 max-w-3x1 mx-auto ...&quot;</span>\n                <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;{&#x27;w-full&#x27;: docs.anchors.length &lt; 3}&quot;</span>\n            &gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;relative text-white mb-20 context-html&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-html</span>=<span class=\"hljs-string\">&quot;docs.index&quot;</span> <span class=\"hljs-attr\">s-data</span>=<span class=\"hljs-string\">&quot;docs.index&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;absolute top-0 right-0&quot;</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">:href</span>=<span class=\"hljs-string\">&quot;`https://github.com/...`&quot;</span> \n                           <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_blank&quot;</span> \n                           <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;Suggest change&quot;</span>\n                        &gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;fa-solid fa-pen-to-square fa-lg&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p><strong><code>docs/navbar.html</code></strong> <a href=\"https://github.com/andrehrferreira/docs.cmmv.io/blob/main/public/views/docs/navbar.html\" target=\"_blank\" rel=\"nofollow\">Code</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;p-4 select-none top-16&quot;</span> <span class=\"hljs-attr\">c-cloak</span> <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;docs&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">s-for</span> <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(item, key) in docs.navbar&quot;</span> <span class=\"hljs-attr\">render-tag</span>=<span class=\"hljs-string\">&quot;li&quot;</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-show</span>=<span class=\"hljs-string\">&quot;item&quot;</span>\n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;flex hover:text-blue-700 itemRoot text-white&quot;</span>\n            <span class=\"hljs-attr\">:id</span>=<span class=\"hljs-string\">&quot;item?.name.replace(/\\s/,&#x27;_&#x27;)&quot;</span> \n            <span class=\"hljs-attr\">:data-opened</span>=<span class=\"hljs-string\">&quot;false&quot;</span>\n            @<span class=\"hljs-attr\">click.stop</span>=<span class=\"hljs-string\">&quot;navbar[item?.name.replace(/\\s/, `_`)] = toggle(...&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;flex flex-1 font-bold ...&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span> \n                    <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;item &amp;&amp; item?.isDir&quot;</span> \n                    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-white&quot;</span>\n                &gt;</span>{{ item?.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">c-else</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-white&quot;</span>&gt;</span>{{ item?.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;justify-between cursor-pointer&quot;</span> <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;item?.isDir&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;navbar[item?.name....&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">c-if</span>=<span class=\"hljs-string\">&quot;item &amp;&amp; item.children &amp;&amp; item.children.length &gt; 0&quot;</span>\n            <span class=\"hljs-attr\">:id</span>=<span class=\"hljs-string\">&quot;`${item?.name.replace(/\\s/, `_`)}_contents`&quot;</span>\n            <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;p-4 py-1 text-md mb-4&quot;</span>\n            <span class=\"hljs-attr\">:style</span>=<span class=\"hljs-string\">&quot;(navbar[item?.name.replace(/\\s/, `_`)]) ? &#x27;&#x27; : ...&quot;</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">c-for</span>=<span class=\"hljs-string\">&quot;(child) in item.children&quot;</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hover:text-...&quot;</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-size: 12px&quot;</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">:href</span>=<span class=\"hljs-string\">&quot;child.uri&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-base&quot;</span>&gt;</span>{{ child.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">s-for</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n</code></pre>\n             </div>\n<p>Views are mapped based on the URL path. When a request is made to a specific path like /docs, the system automatically looks for <code>/public/views/docs/index.html</code>. If found, it is rendered; otherwise, a 404 error is returned.</p>\n<h2>Include Directive</h2><a id=\"include-directive\" title=\"Include Directive\"></a>\n<p>The <code>include</code> directive allows the inclusion of other view files, enabling modularity in views. For example, <code>docs/index.html</code> includes <code>docs/navbar.html</code> using:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-comment\">&lt;!-- include(&#x27;public/views/docs/navbar&#x27;) --&gt;</span>\n</code></pre>\n             </div>\n<p>This approach lets you reuse components like headers, footers, and sidebars across different views.</p>\n<h2>Setup and Data Binding</h2><a id=\"setup-and-data-binding\" title=\"Setup and Data Binding\"></a>\n<p>View components can be controlled using the <code>s-setup</code> directive. However, at the moment, only the <code>index.html</code> (or root view) can use the <code>s-setup</code> tag for setting up scripts, meta tags, or other configurations. Any setups added in subcomponents are ignored. This means that data or configurations must be passed from the top-level view.</p>\n<p><strong>Exemple:</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\">&lt;script s-setup&gt;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">navbar</span>: [] }\n    },\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n    },\n\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">loadState</span>(<span class=\"hljs-params\"></span>){\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbar</span> = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(\n                <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>)\n            ) || {};\n            \n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbar</span>;\n        },\n\n        <span class=\"hljs-title function_\">saveState</span>(<span class=\"hljs-params\">state</span>) {\n            <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(state));\n        },\n\n        <span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-params\">isOpened, itemName</span>) {\n            isOpened = !isOpened;\n\n            <span class=\"hljs-keyword\">const</span> currentState = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n            currentState[itemName] = isOpened;\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">saveState</span>(currentState);\n\n            <span class=\"hljs-keyword\">return</span> isOpened;\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n             </div>\n<p>CMMV introduces a concept of setup scripts in the views, similar to what you may find in frameworks like <a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"nofollow\">Vue.js</a> and <a href=\"https://nuxt.com/\" target=\"_blank\" rel=\"nofollow\">Nuxt.js</a>. This concept allows dynamic configuration of headers, structured data, and enables binding data to the frontend. Additionally, setup scripts provide lifecycle hooks, such as <code>mounted</code> and <code>created</code>, which are executed when the frontend is loaded.</p>\n<h2>Dynamic Layout</h2><a id=\"dynamic-layout\" title=\"Dynamic Layout\"></a>\n<p>The <code>layout</code> property allows you to specify the layout that the view will use. In this example, the layout is set to <code>&quot;default&quot;</code>, meaning the view will inherit and render within a base layout, often defined in <code>/public/templates</code>.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>\n</code></pre>\n             </div>\n<h2>Lifecycle Hooks</h2><a id=\"lifecycle-hooks\" title=\"Lifecycle Hooks\"></a>\n<p>CMMV’s setup scripts provide lifecycle hooks similar to Vue.js. These lifecycle hooks allow you to control code execution at different stages of the component’s lifecycle:</p>\n<ul>\n<li><strong>mounted:</strong> Runs when the view is fully mounted on the DOM. Typically used for tasks like DOM manipulation or API requests.</li>\n<li><strong>created:</strong> Can be used to execute code as soon as the view is created, before it is mounted to the DOM.</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n}\n</code></pre>\n             </div>\n<h2>Data Property</h2><a id=\"data-property\" title=\"Data Property\"></a>\n<p>You can define the <code>data()</code> function to return an object that holds reactive data, which can be bound to the view. This data will be automatically updated when modified.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">navbar</span>: [] }\n}\n</code></pre>\n             </div>\n<p>In this example, navbar is initialized as an empty array and is later populated using the <code>loadState()</code> method.</p>\n<h2>Methods</h2><a id=\"methods\" title=\"Methods\"></a>\n<p>Setup scripts allow the inclusion of methods that are accessible in the view’s scope. These methods are incorporated into the framework’s context and can be used within the template or as event handlers for UI interactions.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-attr\">methods</span>: {\n    <span class=\"hljs-title function_\">loadState</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbar</span> = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">getItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>)) || {};\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">navbar</span>;\n    },\n\n    <span class=\"hljs-title function_\">saveState</span>(<span class=\"hljs-params\">state</span>) {\n        <span class=\"hljs-variable language_\">localStorage</span>.<span class=\"hljs-title function_\">setItem</span>(<span class=\"hljs-string\">&#x27;navbarState&#x27;</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(state));\n    },\n\n    <span class=\"hljs-title function_\">toggle</span>(<span class=\"hljs-params\">isOpened, itemName</span>) {\n        isOpened = !isOpened;\n\n        <span class=\"hljs-keyword\">const</span> currentState = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadState</span>();\n        currentState[itemName] = isOpened;\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">saveState</span>(currentState);\n\n        <span class=\"hljs-keyword\">return</span> isOpened;\n    }\n}\n</code></pre>\n             </div>\n<h2>Headers</h2><a id=\"headers\" title=\"Headers\"></a>\n<p>The setup script can also be used to dynamically configure headers and scripts for the view. By using properties like head, you can define meta tags, links (e.g., for stylesheets), and other elements dynamically:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-attr\">head</span>: {\n    <span class=\"hljs-attr\">meta</span>: [\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;description&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;CMMV Todolist sample&quot;</span> },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;keywords&quot;</span>, <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">&quot;cmmv, contract model, websocket&quot;</span> }\n    ],\n    <span class=\"hljs-attr\">link</span>: [\n        { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;stylesheet&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;/assets/styles/todo.css&quot;</span> },\n        { <span class=\"hljs-attr\">rel</span>: <span class=\"hljs-string\">&quot;canonical&quot;</span>, <span class=\"hljs-attr\">href</span>: <span class=\"hljs-string\">&quot;https://cmmv.io&quot;</span> },\n    ]\n}\n</code></pre>\n             </div>\n<h2>Data Binding</h2><a id=\"data-binding\" title=\"Data Binding\"></a>\n<p>The setup provides data and methods that are directly accessible for data binding on the frontend. This allows seamless interaction with UI components and dynamic updates. For example:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">c-html</span>=<span class=\"hljs-string\">&quot;docs.index&quot;</span> <span class=\"hljs-attr\">s-data</span>=<span class=\"hljs-string\">&quot;docs.index&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<p>This binds the <code>docs.index</code> content to the HTML, enabling dynamic rendering based on the state of docs.index.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "views",
                    "label": "Views"
                },
                {
                    "id": "include-directive",
                    "label": "Include Directive"
                },
                {
                    "id": "setup-and-data-binding",
                    "label": "Setup and Data Binding"
                },
                {
                    "id": "dynamic-layout",
                    "label": "Dynamic Layout"
                },
                {
                    "id": "lifecycle-hooks",
                    "label": "Lifecycle Hooks"
                },
                {
                    "id": "data-property",
                    "label": "Data Property"
                },
                {
                    "id": "methods",
                    "label": "Methods"
                },
                {
                    "id": "headers",
                    "label": "Headers"
                },
                {
                    "id": "data-binding",
                    "label": "Data Binding"
                }
            ],
            "link": "docs/6-View/6-Views.html",
            "links": {}
        }
    },
    "view/styles": {
        "prev": {
            "link": "docs/view/views",
            "title": "Views",
            "desc": "Views in CMMV are HTML files located in the /public/views/ directory, typically..."
        },
        "next": {
            "link": "docs/view/components",
            "title": "Components",
            "desc": "The CMMV framework introduces a simple yet powerful way to integrate server-side..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/views\" />\n                    <link rel=\"next\" href=\"/docs/view/components\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Styles\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/views\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/styles\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/view/components\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Styles</h1><a id=\"styles\" title=\"Styles\"></a>\n<p>The new styling feature in <code>@cmmv/view</code> allows developers to define theme-specific styles that can be dynamically switched on the frontend. The system maps JSON files from the /public/styles directory, which contain the style rules, and makes them accessible in the frontend for easy theme management.</p>\n<p>To create a custom style, define a <code>.style.json</code> file in <code>/public/styles</code>. Each key-value pair represents a style class, and you can create multiple themes by appending a suffix (e.g., .dark) to the keys.</p>\n<p><code>docs.style.json</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-json\" lang=\"json\"\"><span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;app&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;bg-gray-200&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;app.dark&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;bg-gray-900&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;title&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ml-2 text-lg text-slate-800 font-semibold&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;title.dark&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ml-2 text-lg text-gray-200 font-semibold&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;mainText&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text-slate-800 relative text-white mb-20 context-html&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;mainText.dark&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text-gray-200 relative text-white mb-20 context-html&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;sideMenu&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;w-60 fixed z-40 overflow-auto text-slate-800 ...&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;sideMenu.dark&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;w-60 fixed z-40 overflow-auto text-white ...&quot;</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n             </div>\n<h2>Accessing</h2><a id=\"accessing\" title=\"Accessing\"></a>\n<p>In your HTML, you can access the defined styles by referencing the style file and keys. The styles object is automatically made available, and the theme-specific classes are applied based on the current theme.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;w-60&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> \n        <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;/&quot;</span> \n        <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">&quot;CMMV - Contract Model Model View Framework&quot;</span> \n        <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;text-white ml-4 flex items-center&quot;</span>\n    &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> \n            <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/assets/favicon/favicon-32x32.png&quot;</span> \n            <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;CMMV Logo&quot;</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;32&quot;</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;32&quot;</span>\n        &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;$style.docs.title&quot;</span>&gt;</span>CMMV<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>Switching</h2><a id=\"switching\" title=\"Switching\"></a>\n<p>The system allows switching between themes (e.g., <code>default</code>, <code>dark</code>). When a theme is changed, all relevant classes with the suffix (e.g., <code>.dark</code>) are applied automatically.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-title function_\">toggleTheme</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$style</span>.<span class=\"hljs-title function_\">switch</span>(\n        (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$style</span>.<span class=\"hljs-property\">theme</span> === <span class=\"hljs-string\">&quot;default&quot;</span>) ? \n        <span class=\"hljs-string\">&quot;dark&quot;</span> : <span class=\"hljs-string\">&quot;default&quot;</span>\n    );\n}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>JSON File Structure:</strong> The JSON defines style classes for different components. Theme-specific classes are suffixed with <code>.dark</code>, <code>.light</code>, etc.</li>\n<li><strong>Frontend Access:</strong> Styles are accessed through <code>styles.[filename].[key]</code> in the frontend.</li>\n<li><strong>Dynamic Switching:</strong> Theme switching is done programmatically, and the system handles the replacement of style classes based on the active theme.</li>\n<li><strong>No Subindices Support:</strong> Nested JSON subindices are not supported, meaning that each key-value pair must be a flat entry.</li>\n</ul>\n<h2>Management</h2><a id=\"management\" title=\"Management\"></a>\n<p>The theme selection in <code>@cmmv/view</code> is handled automatically by the framework, saving the user’s preference in <code>localStorage</code> and retrieving it upon page load. This enables the system to maintain consistent styling based on the user’s previous choice, without manual intervention.</p>\n<p>You can check the current theme directly in your template using <code>$style.theme</code>. For example, to integrate with a component like DocSearch that requires a theme setting, you can update the HTML tag with the <code>data-theme</code> attribute:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;en&quot;</span> <span class=\"hljs-attr\">:data-theme</span>=<span class=\"hljs-string\">&#x27;$style.theme&#x27;</span> <span class=\"hljs-attr\">scope</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">headers</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n             </div>\n<p>This ensures that the correct theme is applied across components like search bars and other elements that require theme awareness.</p>\n<p>This implementation of dynamic themes in <code>@cmmv/view</code> provides a streamlined approach to managing multiple themes without needing additional plugins, Tailwind extensions, or complex CSS rules. By utilizing <code>.style.json</code> files, developers can easily define theme-specific styles, reducing the amount of code and ensuring consistent theme switching. While it’s possible to achieve similar results using CSS variables, this method simplifies the process, eliminating the need for custom view logic or CSS management for theme switching, making it intuitive and efficient.</p>\n<ul>\n<li><strong>Support for Nested Styles:</strong> Introducing support for nested JSON indices could allow for more complex style structures and better organization.</li>\n<li><strong>CSS Variable Integration:</strong> An option to integrate with CSS variables can complement the theme system, offering finer control over dynamic theming.</li>\n<li><strong>Theme Preloading:</strong> Allow theme preloading based on system preferences (e.g., dark mode based on OS settings) to enhance user experience.</li>\n<li><strong>Advanced Animations:</strong> Adding built-in transitions for theme switching could improve UX when toggling between light and dark modes.</li>\n</ul>\n<h2>Component</h2><a id=\"component\" title=\"Component\"></a>\n<p>In addition to the previously discussed style system, CMMV introduces the <code>$style</code> property within components, allowing scoped styles to be accessed directly.</p>\n<p>This feature enables developers to define and reference styles within the component’s data model, facilitating style management within templates.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">:class</span>=<span class=\"hljs-string\">&quot;$style.themeSwitch.container&quot;</span>&gt;</span>{{ test }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;test++&quot;</span>&gt;</span>Add<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">test</span>: <span class=\"hljs-number\">123</span>\n        }\n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p>This allows more intuitive style handling, making styles accessible directly within the component context.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "styles",
                    "label": "Styles"
                },
                {
                    "id": "accessing",
                    "label": "Accessing"
                },
                {
                    "id": "switching",
                    "label": "Switching"
                },
                {
                    "id": "management",
                    "label": "Management"
                },
                {
                    "id": "component",
                    "label": "Component"
                }
            ],
            "link": "docs/6-View/7-Styles.html",
            "links": {}
        }
    },
    "view/components": {
        "prev": {
            "link": "docs/view/styles",
            "title": "Styles",
            "desc": "The new styling feature in @cmmv/view allows developers to define theme-specific..."
        },
        "next": {
            "link": "docs/modules/repository",
            "title": null,
            "desc": "Repository\nThe @cmmv/repository module is designed to work alongside the @cmmv/c..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/styles\" />\n                    <link rel=\"next\" href=\"/docs/modules/repository\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Components\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/styles\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/view/components\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/modules/repository\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Components</h1><a id=\"components\" title=\"Components\"></a>\n<p>The CMMV framework introduces a simple yet powerful way to integrate server-side rendered (SSR) components, leveraging a syntax similar to Vue.js. With the <code>@cmmv/view</code> module, components can be created in the <code>/public</code> directory and dynamically imported and used in views.</p>\n<p>This document outlines the full process of setting up SSR components using CMMV, with examples of how to structure templates, styles, scripts, and integration with views.</p>\n<h2>Example</h2><a id=\"example\" title=\"Example\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">scope</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ComponentTeste</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;componentTest&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;Test&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ComponentTeste</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">s-setup</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">ComponentTeste</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@components/component.cmmv&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">layout</span>: <span class=\"hljs-string\">&quot;default&quot;</span>,\n\n    <span class=\"hljs-attr\">components</span>: { <span class=\"hljs-title class_\">ComponentTeste</span> },\n\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) { \n        <span class=\"hljs-keyword\">return</span> { \n            <span class=\"hljs-attr\">test</span>: <span class=\"hljs-number\">123</span> \n        }\n    },\n\n    <span class=\"hljs-attr\">methods</span>: { \n        <span class=\"hljs-title function_\">addTask</span>(<span class=\"hljs-params\"></span>) { <span class=\"hljs-comment\">/*...*/</span> } \n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p><code>/public/components/component.cmmv</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ test }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;test++&quot;</span>&gt;</span>Add<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) { \n        <span class=\"hljs-keyword\">return</span> { \n            <span class=\"hljs-attr\">test</span>: <span class=\"hljs-number\">123</span> \n        }\n    },\n\n    <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) { \n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Component mounted&quot;</span>); \n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<p>The component syntax is based on Vue.js, supporting lifecycle methods (<code>created</code>, <code>mounted</code>), reactive <code>data</code>, <code>props</code>, and <code>methods</code>. The component can also use scoped styles with SSR capabilities.</p>\n<p>For a complete example, see <a href=\"https://github.com/andrehrferreira/cmmv-reactivity/blob/main/samples/componentTemplate.cmmv\" target=\"_blank\" rel=\"nofollow\">CMMV Reactivity Samples</a>.</p>\n<h2>Data</h2><a id=\"data\" title=\"Data\"></a>\n<p>In CMMV components, <code>data</code> is a key feature used to define reactive state within the component. The <code>data</code> function returns an object that holds reactive properties, allowing the component to dynamically update the DOM when the data changes.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ message }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Hello, World!&quot;</span>\n        };\n    }\n};\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<br/>\n<p>When properties defined in data are modified, the DOM updates to reflect those changes automatically. This provides a seamless, reactive user experience similar to Vue.js.</p>\n<h2>Props</h2><a id=\"props\" title=\"Props\"></a>\n<p>Components can accept <code>props</code> to make them reusable and flexible:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">scope</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ComponentTemplate</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;comp&quot;</span> <span class=\"hljs-attr\">:count</span>=<span class=\"hljs-string\">&quot;test&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ComponentTemplate</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">hr</span>/&gt;</span>\n    \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        Root: {{ test }}<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span>/&gt;</span>\n        Component Ctx: {{ $refs.comp.count }}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">import</span> { createApp } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../src&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">ComponentTemplate</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./componentTemplate.cmmv&#x27;</span>;\n\n<span class=\"hljs-title function_\">createApp</span>({\n    <span class=\"hljs-attr\">components</span>: { <span class=\"hljs-title class_\">ComponentTemplate</span> },\n\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">test</span>: <span class=\"hljs-number\">123</span>\n        }\n    }\n}).<span class=\"hljs-title function_\">mount</span>();\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<br/>\n<p><code>/samples/componentTemplate.cmmv</code> <a href=\"https://github.com/andrehrferreira/cmmv-reactivity/blob/main/samples/componentTemplate.cmmv\" target=\"_blank\" rel=\"nofollow\">Github</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ count }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;addCount()&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;btnAdd&quot;</span>&gt;</span>Add<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>&gt;</span><span class=\"language-css\">\n<span class=\"hljs-selector-class\">.btnAdd</span>{\n    <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#CCC</span>;\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">props</span>: {\n        <span class=\"hljs-attr\">count</span>: {\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-title class_\">Number</span>,\n            <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-number\">0</span>\n        }\n    },\n\n    <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">teste</span>: <span class=\"hljs-string\">&quot;&quot;</span>\n        }\n    },\n\n    <span class=\"hljs-title function_\">created</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-comment\">//console.log(&quot;created&quot;)</span>\n    },\n\n    <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>){\n        <span class=\"hljs-comment\">//console.log(&quot;mounted&quot;)</span>\n    },\n\n    <span class=\"hljs-attr\">methods</span>: {\n        <span class=\"hljs-title function_\">addCount</span>(<span class=\"hljs-params\"></span>){\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">count</span>++;\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&quot;count&quot;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">count</span>)\n        }\n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<br/>\n<h2>Methods</h2><a id=\"methods\" title=\"Methods\"></a>\n<p>In CMMV components, methods are essential for handling user interactions and performing dynamic logic. Methods are defined in the <code>script</code> block of a component and can be used for a wide variety of purposes, such as updating data, making HTTP requests, and triggering other component actions.</p>\n<p>To define a method in a CMMV component, you include a <code>methods</code> property in the default export. Methods can be directly called from the template using event bindings (e.g., <code>@click</code>).</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;incrementCount&quot;</span>&gt;</span>Add<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Count: {{ count }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-attr\">count</span>: <span class=\"hljs-number\">0</span>\n    };\n  },\n  <span class=\"hljs-attr\">methods</span>: {\n    <span class=\"hljs-title function_\">incrementCount</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">count</span>++;\n    }\n  }\n};\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n             </div>\n<h2>Created</h2><a id=\"created\" title=\"Created\"></a>\n<p>The <code>created</code> lifecycle hook in CMMV is executed after the component’s instance is created but before it is mounted to the DOM. This is a useful hook for performing logic such as data fetching, initializing variables, or triggering certain actions before the template is rendered.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Initial Message&quot;</span>\n    };\n  },\n  <span class=\"hljs-title function_\">created</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Component has been created!&quot;</span>);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">fetchData</span>();\n  },\n  <span class=\"hljs-attr\">methods</span>: {\n    <span class=\"hljs-title function_\">fetchData</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">message</span> = <span class=\"hljs-string\">&quot;Updated Message!&quot;</span>;\n    }\n  }\n}\n</code></pre>\n             </div>\n<p>The <code>created</code> hook provides an early entry point to execute logic before the template is rendered, making it useful for initializing data or state in a component.</p>\n<h2>Mounted</h2><a id=\"mounted\" title=\"Mounted\"></a>\n<p>The <code>mounted</code> lifecycle hook is executed after the component has been inserted into the DOM. This hook is ideal for actions that require direct interaction with the rendered DOM or for starting processes that rely on the component being present in the document.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-attr\">count</span>: <span class=\"hljs-number\">0</span>\n    };\n  },\n  <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Component has been mounted!&quot;</span>);\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">initializeCounter</span>();\n  },\n  <span class=\"hljs-attr\">methods</span>: {\n    <span class=\"hljs-title function_\">initializeCounter</span>(<span class=\"hljs-params\"></span>) {\n      <span class=\"hljs-comment\">// Interact with DOM or start operations</span>\n      <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\">() =&gt;</span> {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">count</span>++;\n      }, <span class=\"hljs-number\">1000</span>);\n    }\n  }\n}\n</code></pre>\n             </div>\n<p>The <code>mounted</code> hook is essential when you need to ensure that your component is fully loaded into the DOM before interacting with it, making it useful for DOM manipulations, setting up event listeners, or initializing components that rely on third-party libraries or services.</p>\n<h1>Slot</h1><a id=\"slot\" title=\"Slot\"></a>\n<p>Slots in CMMV allow you to pass custom content from the parent scope into the child component. They can be dynamically updated using data from the parent component.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ComponentTemplate</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;comp&quot;</span> <span class=\"hljs-attr\">:count</span>=<span class=\"hljs-string\">&quot;test&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">c-slot</span>=<span class=\"hljs-string\">&quot;{ count }&quot;</span>&gt;</span>\n        Component value: {{ count }}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ComponentTemplate</span>&gt;</span>\n</code></pre>\n             </div>\n<p>In this example, the <code>c-slot</code> directive is used to pass the slot content, making the parent’s <code>count</code> data available inside the <code>ComponentTemplate</code>. The parent scope can dynamically change the slot content, reflecting the updated values inside the child component.</p>\n<p>The slot in the component is rendered like this:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slot</span> <span class=\"hljs-attr\">:count</span>=<span class=\"hljs-string\">&quot;count&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">slot</span>&gt;</span>\n</code></pre>\n             </div>\n<p><strong>Rendering</strong></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-html\" lang=\"html\"\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">&quot;comp&quot;</span> <span class=\"hljs-attr\">count</span>=<span class=\"hljs-string\">&quot;123&quot;</span>&gt;</span>\n  Component value: 123\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>Named Slots:</strong> Slots can be given names for better organization.</li>\n<li><strong>Reactivity:</strong> Slots update reactively with changes in parent data.</li>\n<li><strong>Scoped Slots:</strong> Scoped slots provide the ability to pass data from the child component to the parent for rendering custom content.</li>\n</ul>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "View"
            ],
            "anchors": [
                {
                    "id": "components",
                    "label": "Components"
                },
                {
                    "id": "example",
                    "label": "Example"
                },
                {
                    "id": "data",
                    "label": "Data"
                },
                {
                    "id": "props",
                    "label": "Props"
                },
                {
                    "id": "methods",
                    "label": "Methods"
                },
                {
                    "id": "created",
                    "label": "Created"
                },
                {
                    "id": "mounted",
                    "label": "Mounted"
                },
                {
                    "id": "slot",
                    "label": "Slot"
                }
            ],
            "link": "docs/6-View/8-Components.html",
            "links": {}
        }
    },
    "modules/repository": {
        "prev": {
            "link": "docs/view/components",
            "title": "Components",
            "desc": "The CMMV framework introduces a simple yet powerful way to integrate server-side..."
        },
        "next": {
            "link": "docs/modules/authentication",
            "title": "Authentication",
            "desc": "The @cmmv/auth module provides a set of features to handle authentication in you..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/view/components\" />\n                    <link rel=\"next\" href=\"/docs/modules/authentication\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": null,\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/view/components\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/modules/repository\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/modules/authentication\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h2>Repository</h2><a id=\"repository\" title=\"Repository\"></a>\n<p>The <code>@cmmv/repository</code> module is designed to work alongside the <code>@cmmv/core</code> framework and is built using <a href=\"https://typeorm.io/\" target=\"_blank\" rel=\"nofollow\">TypeORM</a>. This module automatically generates entities based on defined contracts and extends the service layer for handling CRUD operations with the configured database. Below, we provide detailed information on installation, usage, and features of this module.</p>\n<p><strong>Installation</strong></p>\n<p>To use the <code>@cmmv/repository</code> module in your project, you can install it via npm:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install @cmmv/repository\n</code></pre>\n             </div>\n<p>In addition to installing the <code>@cmmv/repository</code> module, depending on the database type you are using, you will need to install the respective database driver.</p>\n<p><strong>Supported Databases and Drivers</strong></p>\n<p>TypeORM supports multiple database systems, and each system requires the appropriate npm package to function correctly. Here is a list of supported databases along with the corresponding driver to install:</p>\n<p><strong>SQLite:</strong> <a href=\"https://www.npmjs.com/package/sqlite3\" target=\"_blank\" rel=\"nofollow\">NPM</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install sqlite3\n</code></pre>\n             </div>\n<p><strong>MySQL / MariaDB:</strong> <a href=\"https://www.npmjs.com/package/mysql2\" target=\"_blank\" rel=\"nofollow\">NPM</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install mysql2\n</code></pre>\n             </div>\n<p><strong>PostgreSQL:</strong> <a href=\"https://www.npmjs.com/package/pg\" target=\"_blank\" rel=\"nofollow\">NPM</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install pg\n</code></pre>\n             </div>\n<p><strong>Microsoft SQL Server:</strong> <a href=\"https://www.npmjs.com/package/mssql\" target=\"_blank\" rel=\"nofollow\">NPM</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install mssql\n</code></pre>\n             </div>\n<p><strong>Oracle:</strong> <a href=\"https://www.npmjs.com/package/oracledb\" target=\"_blank\" rel=\"nofollow\">NPM</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install oracledb\n</code></pre>\n             </div>\n<p><strong>MongoDB:</strong> <a href=\"https://www.npmjs.com/package/mongodb\" target=\"_blank\" rel=\"nofollow\">NPM</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install mongodb\n</code></pre>\n             </div>\n<p>Once you install the module and the corresponding database driver, you can configure your database connection in the <code>.cmmv.config.js</code> file. TypeORM will automatically use the appropriate driver based on the configuration.</p>\n<h2>Purpose</h2><a id=\"purpose\" title=\"Purpose\"></a>\n<p>The <code>@cmmv/repository</code> module simplifies the process of integrating database entities and services for CRUD operations by leveraging contracts defined using <code>@cmmv/core</code>. It automatically transpiles contracts into TypeORM entities and provides a standardized way to manage interactions with the database.</p>\n<ul>\n<li><strong>Automatic Entity Generation:</strong> Based on the contracts defined in your project, the module transpiles the contract definitions into TypeORM entities.</li>\n<li><strong>CRUD Service:</strong> The module generates CRUD operations for the entities without needing to manually implement services, allowing easy data management.</li>\n<li><strong>TypeORM Integration:</strong> Full integration with TypeORM, making it easier to work with a variety of databases, such as PostgreSQL, MySQL, SQLite, etc.</li>\n<li><strong>Contract-Based:</strong> Using contracts defined with <code>@cmmv/core</code>, the module automatically generates both the database schema and the CRUD service layer.</li>\n</ul>\n<p><code>/src/contract/task.contract.ts</code></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&#x27;Task&#x27;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&#x27;src/protos/task.proto&#x27;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&#x27;task&#x27;</span>,\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TasksContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n        <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n    })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n    })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n    })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<p>This contract defines the fields and structure for the Task entity, which will be transpiled into a database entity by the <code>@cmmv/repository</code> module.</p>\n<p>Once the contract is defined, the <code>@cmmv/repository</code> module transpiles the contract into a TypeORM entity. Below is an example of an automatically generated entity (<code>task.entity.ts</code>):</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Entity</span>, <span class=\"hljs-title class_\">PrimaryGeneratedColumn</span>, <span class=\"hljs-title class_\">Column</span>, <span class=\"hljs-title class_\">Index</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;typeorm&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Task</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../models/task.model&#x27;</span>;\n\n<span class=\"hljs-meta\">@Entity</span>(<span class=\"hljs-string\">&#x27;task&#x27;</span>)\n<span class=\"hljs-meta\">@Index</span>(<span class=\"hljs-string\">&quot;idx_task_label&quot;</span>, [<span class=\"hljs-string\">&quot;label&quot;</span>], { <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span> })\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskEntity</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">Task</span> {\n    <span class=\"hljs-meta\">@PrimaryGeneratedColumn</span>(<span class=\"hljs-string\">&#x27;uuid&#x27;</span>)\n    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@Column</span>({ <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;varchar&#x27;</span> })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@Column</span>({ <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;boolean&#x27;</span>, <span class=\"hljs-attr\">default</span>: <span class=\"hljs-literal\">false</span> })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@Column</span>({ <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;boolean&#x27;</span>, <span class=\"hljs-attr\">default</span>: <span class=\"hljs-literal\">false</span> })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<p>The <code>@cmmv/repository</code> module also generates a CRUD service that automatically handles interactions with the database. This service will use the entity generated from the contract to provide standard CRUD methods (create, read, update, delete).</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n    \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Telemetry</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractService</span>, <span class=\"hljs-title class_\">Service</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Repository</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/repository&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskEntity</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../entities/task.entity&#x27;</span>;\n\n<span class=\"hljs-meta\">@Service</span>(<span class=\"hljs-string\">&quot;task&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskService</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractService</span> {\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> name = <span class=\"hljs-string\">&quot;task&quot;</span>;\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(queries?: <span class=\"hljs-built_in\">any</span>, req?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>[]&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">find</span>();\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::GetAll&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getById</span>(<span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, req?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::GetById&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">const</span> item = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">findOneBy</span>({ id });\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::GetById&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n\n        <span class=\"hljs-keyword\">if</span> (!item) \n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Error</span>(<span class=\"hljs-string\">&#x27;Item not found&#x27;</span>);\n        \n        <span class=\"hljs-keyword\">return</span> item;\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Partial</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt;, req?: <span class=\"hljs-built_in\">any</span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::Add&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">save</span>(item);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Add&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">update</span>(\n        <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Partial</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt;, req?: <span class=\"hljs-built_in\">any</span>\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">TaskEntity</span>&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::Update&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">update</span>(id, item);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">findOneBy</span>({ id });\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Update&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">delete</span>(\n        <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, req?: <span class=\"hljs-built_in\">any</span>\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;{ <span class=\"hljs-attr\">success</span>: <span class=\"hljs-built_in\">boolean</span>, <span class=\"hljs-attr\">affected</span>: <span class=\"hljs-built_in\">number</span> }&gt; {\n        <span class=\"hljs-keyword\">const</span> instance = <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">getInstance</span>();\n        <span class=\"hljs-keyword\">const</span> repository = instance.<span class=\"hljs-property\">dataSource</span>.<span class=\"hljs-title function_\">getRepository</span>(<span class=\"hljs-title class_\">TaskEntity</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskService::Delete&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> repository.<span class=\"hljs-title function_\">delete</span>(id);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskService::Delete&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">success</span>: result.<span class=\"hljs-property\">affected</span> &gt; <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">affected</span>: result.<span class=\"hljs-property\">affected</span> };\n    }\n}\n</code></pre>\n             </div>\n<p>The <code>@cmmv/repository</code> module significantly simplifies database interaction by automatically generating the necessary entities and services based on predefined contracts. With built-in TypeORM integration, this module streamlines CRUD operations, enabling faster development and easier database management.</p>\n<h2>Settings</h2><a id=\"settings\" title=\"Settings\"></a>\n<p>To ensure that the <code>@cmmv/repository</code> module works correctly with your project, you need to define the database configurations in a <code>.cmmv.config.js</code> file. This file serves as the central configuration for your project, including the repository settings for database interaction.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-comment\">// Other project configurations...</span>\n\n    <span class=\"hljs-attr\">repository</span>: {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&quot;sqlite&quot;</span>, \n        <span class=\"hljs-attr\">database</span>: <span class=\"hljs-string\">&quot;./database.sqlite&quot;</span>,\n        <span class=\"hljs-attr\">synchronize</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">logging</span>: <span class=\"hljs-literal\">false</span>,\n    },\n};\n</code></pre>\n             </div>\n<p>In this example, the module is configured to use SQLite as the database with automatic synchronization enabled. This means that any changes in your entities will automatically be reflected in the database schema without requiring migrations.</p>\n<p>For a more detailed list of all available configurations, please visit the <a href=\"https://typeorm.io/data-source\" target=\"_blank\" rel=\"nofollow\">TypeORM Data Source Options documentation</a>. There, you will find additional options such as:</p>\n<ul>\n<li><strong>entities:</strong> An array of paths or classes to specify which entities TypeORM should manage.</li>\n<li><strong>migrations:</strong> A path to your migration files.</li>\n<li><strong>cache:</strong> Enable caching of queries.</li>\n<li><strong>username and password:</strong> Credentials for connecting to the database (for database types that require authentication).</li>\n<li><strong>host and port:</strong> For specifying the host and port for databases like PostgreSQL, MySQL, etc.</li>\n</ul>\n<p>To properly configure the <code>@cmmv/repository</code> module, you need to specify your database connection settings in the <code>.cmmv.config.js</code> file. The example provided shows a typical setup using SQLite, but you can adjust the configuration for other databases like PostgreSQL or MySQL. For further details on possible configurations, refer to the <a href=\"https://typeorm.io\" target=\"_blank\" rel=\"nofollow\">TypeORM documentation</a>.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Modules"
            ],
            "anchors": [
                {
                    "id": "repository",
                    "label": "Repository"
                },
                {
                    "id": "purpose",
                    "label": "Purpose"
                },
                {
                    "id": "settings",
                    "label": "Settings"
                }
            ],
            "link": "docs/7-Modules/0-Repository.html",
            "links": {}
        }
    },
    "modules/authentication": {
        "prev": {
            "link": "docs/modules/repository",
            "title": null,
            "desc": "Repository\nThe @cmmv/repository module is designed to work alongside the @cmmv/c..."
        },
        "next": {
            "link": "docs/modules/cache",
            "title": "Cache",
            "desc": "The @cmmv/cache module integrates with cache-manager to provide in-memory cache..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/modules/repository\" />\n                    <link rel=\"next\" href=\"/docs/modules/cache\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Authentication\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/modules/repository\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/modules/authentication\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/modules/cache\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Authentication</h1><a id=\"authentication\" title=\"Authentication\"></a>\n<p>The <code>@cmmv/auth</code> module provides a set of features to handle authentication in your application. It supports both HTTP and WebSocket-based authentication and can be easily integrated into any <code>@cmmv</code> based application.</p>\n<h2>Installation</h2><a id=\"installation\" title=\"Installation\"></a>\n<p>To install the <code>@cmmv/auth</code> module, run the following command:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\">$ npm install <span class=\"hljs-meta\">@cmmv</span>/auth\n</code></pre>\n             </div>\n<h2>Integrating</h2><a id=\"integrating\" title=\"Integrating\"></a>\n<p>Once installed, you can integrate the <code>@cmmv/auth</code> module into your application as shown below. This example demonstrates the basic setup of a CMMV application that includes the <code>@cmmv/auth</code> module for handling authentication.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;dotenv&#x27;</span>).<span class=\"hljs-title function_\">config</span>();\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ExpressAdapter</span>, <span class=\"hljs-title class_\">ExpressModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ProtobufModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/protobuf&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">WSModule</span>, <span class=\"hljs-title class_\">WSAdapter</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/ws&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ViewModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/view&#x27;</span>;\n...\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AuthModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/auth&#x27;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">ExpressAdapter</span>,\n    <span class=\"hljs-attr\">wsAdapter</span>: <span class=\"hljs-title class_\">WSAdapter</span>,\n    <span class=\"hljs-attr\">modules</span>: [\n        <span class=\"hljs-title class_\">ExpressModule</span>,\n        <span class=\"hljs-title class_\">ProtobufModule</span>,\n        <span class=\"hljs-title class_\">WSModule</span>,\n        <span class=\"hljs-title class_\">ViewModule</span>,\n        <span class=\"hljs-title class_\">RepositoryModule</span>,\n        <span class=\"hljs-title class_\">AuthModule</span>,  <span class=\"hljs-comment\">// Add the AuthModule </span>\n    ],\n    <span class=\"hljs-attr\">services</span>: [\n        <span class=\"hljs-comment\">// Add your custom services here</span>\n    ],\n    <span class=\"hljs-attr\">contracts</span>: [\n        <span class=\"hljs-comment\">// Add your contracts here</span>\n    ],\n});\n</code></pre>\n             </div>\n<h2>Configuration</h2><a id=\"configuration\" title=\"Configuration\"></a>\n<p>The <code>.cmmv.config.js</code> file is the central configuration file for your CMMV application, which allows you to set up different settings related to the server, authentication, and other modules. Below is a detailed explanation of the configuration options relevant to the <code>@cmmv/auth</code> module:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">env</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">NODE_ENV</span>,\n\n    <span class=\"hljs-attr\">server</span>: {\n        <span class=\"hljs-attr\">session</span>: {\n            <span class=\"hljs-attr\">enabled</span>: <span class=\"hljs-literal\">true</span>,  <span class=\"hljs-comment\">// Enable session support</span>\n            <span class=\"hljs-attr\">options</span>: {\n                <span class=\"hljs-comment\">// Name of the session cookie</span>\n                <span class=\"hljs-attr\">sessionCookieName</span>: \n                    process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SESSION_COOKIENAME</span> || <span class=\"hljs-string\">&quot;cmmv-session&quot;</span>, \n                <span class=\"hljs-comment\">// Secret for signing the session ID cookie</span>\n                <span class=\"hljs-attr\">secret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">SESSION_SECRET</span> || <span class=\"hljs-string\">&quot;secret&quot;</span>, \n                <span class=\"hljs-comment\">// Prevents session being saved back to the session store</span>\n                <span class=\"hljs-attr\">resave</span>: <span class=\"hljs-literal\">false</span>, \n                <span class=\"hljs-comment\">// Forces a session to be saved, even if it’s uninitialized</span>\n                <span class=\"hljs-attr\">saveUninitialized</span>: <span class=\"hljs-literal\">false</span>, \n                <span class=\"hljs-attr\">cookie</span>: { \n                    <span class=\"hljs-comment\">// Ensures the browser only sends the cookie over HTTPS</span>\n                    <span class=\"hljs-attr\">secure</span>: <span class=\"hljs-literal\">true</span>,  \n                    <span class=\"hljs-comment\">// The max age (in milliseconds) for the session cookie</span>\n                    <span class=\"hljs-attr\">maxAge</span>: <span class=\"hljs-number\">60000</span>  \n                }\n            }\n        }\n    },\n\n    <span class=\"hljs-comment\">// Authentication settings for @cmmv/auth</span>\n    <span class=\"hljs-attr\">auth</span>: {\n        <span class=\"hljs-comment\">// Enable local registration (email/password)</span>\n        <span class=\"hljs-attr\">localRegister</span>: <span class=\"hljs-literal\">true</span>,  \n        <span class=\"hljs-comment\">// Enable local login (email/password)</span>\n        <span class=\"hljs-attr\">localLogin</span>: <span class=\"hljs-literal\">true</span>,     \n        <span class=\"hljs-comment\">// Secret key for signing JWT tokens</span>\n        <span class=\"hljs-attr\">jwtSecret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">JWT_SECRET</span> || <span class=\"hljs-string\">&quot;secret&quot;</span>,  \n        <span class=\"hljs-comment\">// Token expiration time in seconds (1 hour)</span>\n        <span class=\"hljs-attr\">expiresIn</span>: <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span>,  \n        \n        <span class=\"hljs-attr\">google</span>: {\n            <span class=\"hljs-comment\">// Google OAuth client ID</span>\n            <span class=\"hljs-attr\">clientID</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_ID</span>,  \n            <span class=\"hljs-comment\">// Google OAuth client secret</span>\n            <span class=\"hljs-attr\">clientSecret</span>: process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">GOOGLE_CLIENT_SECRET</span>,  \n            <span class=\"hljs-comment\">// URL to redirect after Google login</span>\n            <span class=\"hljs-attr\">callbackURL</span>: <span class=\"hljs-string\">&quot;http://localhost:3000/auth/google/callback&quot;</span>  \n        }\n    },\n};\n</code></pre>\n             </div>\n<h2>Generated</h2><a id=\"generated\" title=\"Generated\"></a>\n<p>The <code>@cmmv/auth</code> module is responsible for generating the necessary files for authentication in a CMMV-based application. This includes protocol buffers (proto files), TypeScript definitions, service implementations, and controllers. If the <code>@cmmv/ws</code> module is installed, it will also generate the WebSocket gateway for handling authentication events. Below are the key components that are generated by this module:</p>\n<p><strong><code>src/protos/auth.proto</code></strong></p>\n<p>This <code>.proto</code> file defines the <code>User</code>, <code>LoginRequest</code>, <code>LoginResponse</code>, <code>RegisterRequest</code>, <code>RegisterResponse</code> messages, and the <code>AuthService</code> service with two RPC methods, Login and Register.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-proto\" lang=\"proto\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\nsyntax = <span class=\"hljs-string\">&quot;proto3&quot;</span>;\n<span class=\"hljs-keyword\">package</span> auth;\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">User</span> {\n   <span class=\"hljs-type\">string</span> username = <span class=\"hljs-number\">1</span>;\n   <span class=\"hljs-type\">string</span> password = <span class=\"hljs-number\">2</span>;\n   <span class=\"hljs-type\">string</span> googleId = <span class=\"hljs-number\">3</span>;\n   <span class=\"hljs-type\">string</span> groups = <span class=\"hljs-number\">4</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">LoginRequest</span> {\n    <span class=\"hljs-type\">string</span> username = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">string</span> password = <span class=\"hljs-number\">2</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">LoginResponse</span> {\n    <span class=\"hljs-type\">bool</span> success = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">string</span> token = <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-type\">string</span> message = <span class=\"hljs-number\">3</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">RegisterRequest</span> {\n    <span class=\"hljs-type\">string</span> username = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">string</span> email = <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-type\">string</span> password = <span class=\"hljs-number\">3</span>;\n}\n\n<span class=\"hljs-keyword\">message </span><span class=\"hljs-title class_\">RegisterResponse</span> {\n    <span class=\"hljs-type\">bool</span> success = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">string</span> message = <span class=\"hljs-number\">3</span>;\n}\n          \n<span class=\"hljs-keyword\">service </span><span class=\"hljs-title class_\">AuthService</span> {\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">rpc</span> Login (LoginRequest) <span class=\"hljs-keyword\">returns</span> (LoginResponse)</span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">rpc</span> Register (RegisterRequest) <span class=\"hljs-keyword\">returns</span> (RegisterResponse)</span>;\n}\n</code></pre>\n             </div>\n<br/>\n<p><strong><code>src/protos/auth.d.ts</code></strong></p>\n<p>This file provides TypeScript interfaces that mirror the <code>.proto</code> definitions, making it easier to work with the data structures in your application.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title class_\">User</span> {\n    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> username = <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> password = <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> googleId = <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">type</span> groups = <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">LoginRequest</span> {\n    <span class=\"hljs-attr\">username</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">password</span>: <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">LoginResponse</span> {\n    <span class=\"hljs-attr\">success</span>: <span class=\"hljs-built_in\">boolean</span>;\n    <span class=\"hljs-attr\">token</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">RegisterRequest</span> {\n    <span class=\"hljs-attr\">username</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">email</span>: <span class=\"hljs-built_in\">string</span>;\n    <span class=\"hljs-attr\">password</span>: <span class=\"hljs-built_in\">string</span>;\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title class_\">RegisterResponse</span> {\n    <span class=\"hljs-attr\">success</span>: <span class=\"hljs-built_in\">boolean</span>;\n    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-built_in\">string</span>;\n}\n</code></pre>\n             </div>\n<br/>\n<p><strong><code>src/services/auth.services.ts</code></strong></p>\n<p>The service handles the core logic for user authentication, such as logging in and registering users. It makes use of class-validator for validation and class-transformer for transforming the incoming data into a User object.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n    \n<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> jwt <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;jsonwebtoken&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { validate } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-validator&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { plainToClass } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-transformer&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">Telemetry</span>, <span class=\"hljs-title class_\">Service</span>, \n    <span class=\"hljs-title class_\">AbstractService</span>, <span class=\"hljs-title class_\">Config</span>\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Repository</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/repository&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">User</span>, <span class=\"hljs-title class_\">IUser</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../models/user.model&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">LoginRequest</span>, <span class=\"hljs-title class_\">LoginResponse</span>, \n    <span class=\"hljs-title class_\">RegisterRequest</span>, <span class=\"hljs-title class_\">RegisterResponse</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../protos/auth&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">UserEntity</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../entities/user.entity&#x27;</span>;\n\n<span class=\"hljs-meta\">@Service</span>(<span class=\"hljs-string\">&quot;auth&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AuthService</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractService</span> {\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">login</span>(\n        <span class=\"hljs-attr\">payload</span>: <span class=\"hljs-title class_\">LoginRequest</span>, \n        req?: <span class=\"hljs-built_in\">any</span>, res?: <span class=\"hljs-built_in\">any</span>, \n        session?: <span class=\"hljs-built_in\">any</span>\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;{ <span class=\"hljs-attr\">result</span>: <span class=\"hljs-title class_\">LoginResponse</span>, <span class=\"hljs-attr\">user</span>: <span class=\"hljs-built_in\">any</span> }&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;AuthService::login&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n\n        <span class=\"hljs-keyword\">const</span> jwtToken = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-property\">get</span>&lt;<span class=\"hljs-built_in\">string</span>&gt;(<span class=\"hljs-string\">&quot;auth.jwtSecret&quot;</span>);\n        <span class=\"hljs-keyword\">const</span> expiresIn = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-property\">get</span>&lt;<span class=\"hljs-built_in\">number</span>&gt;(<span class=\"hljs-string\">&quot;auth.expiresIn&quot;</span>, <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span>);\n        <span class=\"hljs-keyword\">const</span> sessionEnabled = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-property\">get</span>&lt;<span class=\"hljs-built_in\">boolean</span>&gt;(\n            <span class=\"hljs-string\">&quot;server.session.enabled&quot;</span>, <span class=\"hljs-literal\">true</span>\n        );\n        <span class=\"hljs-keyword\">const</span> cookieName = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-property\">get</span>&lt;<span class=\"hljs-built_in\">string</span>&gt;(\n            <span class=\"hljs-string\">&quot;server.session.options.sessionCookieName&quot;</span>, \n            <span class=\"hljs-string\">&quot;token&quot;</span>\n        );\n        <span class=\"hljs-keyword\">const</span> cookieTTL = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-property\">get</span>&lt;<span class=\"hljs-built_in\">number</span>&gt;(\n            <span class=\"hljs-string\">&quot;server.session.options.cookie.maxAge&quot;</span>, \n            <span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">100</span>\n        );\n        <span class=\"hljs-keyword\">const</span> cookieSecure = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-property\">get</span>&lt;<span class=\"hljs-built_in\">boolean</span>&gt;(\n            <span class=\"hljs-string\">&quot;server.session.options.cookie.secure&quot;</span>, \n            process.<span class=\"hljs-property\">env</span>.<span class=\"hljs-property\">NODE_ENV</span> !== <span class=\"hljs-string\">&#x27;dev&#x27;</span>\n        );\n\n        <span class=\"hljs-keyword\">const</span> userValidation = <span class=\"hljs-title function_\">plainToClass</span>(<span class=\"hljs-title class_\">User</span>, payload, { \n            <span class=\"hljs-attr\">exposeUnsetFields</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-attr\">enableImplicitConversion</span>: <span class=\"hljs-literal\">true</span>\n        }); \n\n        <span class=\"hljs-keyword\">const</span> user = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-title function_\">findBy</span>(<span class=\"hljs-title class_\">UserEntity</span>, userValidation);;\n\n        <span class=\"hljs-keyword\">if</span> (!user) {\n            <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">result</span>: { \n                <span class=\"hljs-attr\">success</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">token</span>: <span class=\"hljs-string\">&quot;&quot;</span>, \n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Invalid credentials&quot;</span> \n            }, <span class=\"hljs-attr\">user</span>: <span class=\"hljs-literal\">null</span>  };\n        }\n            \n        <span class=\"hljs-keyword\">const</span> token = jwt.<span class=\"hljs-title function_\">sign</span>({ \n            <span class=\"hljs-attr\">id</span>: user.<span class=\"hljs-property\">id</span>,\n            <span class=\"hljs-attr\">username</span>: payload.<span class=\"hljs-property\">username</span> \n        }, jwtToken, { expiresIn });\n\n        res.<span class=\"hljs-title function_\">cookie</span>(cookieName, <span class=\"hljs-string\">`Bearer <span class=\"hljs-subst\">${token}</span>`</span>, {\n            <span class=\"hljs-attr\">httpOnly</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-attr\">secure</span>: cookieSecure,\n            <span class=\"hljs-attr\">sameSite</span>: <span class=\"hljs-string\">&#x27;strict&#x27;</span>,\n            <span class=\"hljs-attr\">maxAge</span>: cookieTTL\n        });\n\n        <span class=\"hljs-keyword\">if</span>(sessionEnabled){\n            session.<span class=\"hljs-property\">user</span> = {\n                <span class=\"hljs-attr\">username</span>: payload.<span class=\"hljs-property\">username</span>,\n                <span class=\"hljs-attr\">token</span>: token,\n            };\n    \n            session.<span class=\"hljs-title function_\">save</span>();\n        }\n        \n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;AuthService::login&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);        \n        <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">result</span>: { \n            <span class=\"hljs-attr\">success</span>: <span class=\"hljs-literal\">true</span>, token, \n            <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Login successful&quot;</span> \n        }, user };\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">register</span>(\n        <span class=\"hljs-attr\">payload</span>: <span class=\"hljs-title class_\">RegisterRequest</span>, req?: <span class=\"hljs-built_in\">any</span>\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">RegisterResponse</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;AuthService::register&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">const</span> jwtToken = <span class=\"hljs-title class_\">Config</span>.<span class=\"hljs-title function_\">get</span>(<span class=\"hljs-string\">&quot;auth.jwtSecret&quot;</span>);\n\n        <span class=\"hljs-keyword\">const</span> newUser = <span class=\"hljs-title function_\">plainToClass</span>(<span class=\"hljs-title class_\">User</span>, payload, { \n            <span class=\"hljs-attr\">exposeUnsetFields</span>: <span class=\"hljs-literal\">true</span>,\n            <span class=\"hljs-attr\">enableImplicitConversion</span>: <span class=\"hljs-literal\">true</span>\n        }); \n\n        <span class=\"hljs-keyword\">const</span> errors = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">validate</span>(newUser, { \n            <span class=\"hljs-attr\">skipMissingProperties</span>: <span class=\"hljs-literal\">true</span> \n        });\n        \n        <span class=\"hljs-keyword\">if</span> (errors.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>) {\n            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(errors);\n            <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;AuthService::register&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n            <span class=\"hljs-keyword\">return</span> { \n                <span class=\"hljs-attr\">success</span>: <span class=\"hljs-literal\">false</span>, \n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(errors[<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">constraints</span>) \n            };\n        } \n        <span class=\"hljs-keyword\">else</span> {    \n            <span class=\"hljs-keyword\">try</span>{\n                <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">Repository</span>.<span class=\"hljs-property\">insert</span>&lt;<span class=\"hljs-title class_\">UserEntity</span>&gt;(\n                    <span class=\"hljs-title class_\">UserEntity</span>, newUser\n                );\n\n                <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;AuthService::register&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n\n                <span class=\"hljs-keyword\">return</span> (result) ? \n                    { \n                        <span class=\"hljs-attr\">success</span>: <span class=\"hljs-literal\">true</span>, \n                        <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;User registered successfully!&quot;</span> \n                    } : \n                    { \n                        <span class=\"hljs-attr\">success</span>: <span class=\"hljs-literal\">false</span>, \n                        <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&quot;Error trying to register new user&quot;</span> \n                    };\n            }   \n            <span class=\"hljs-keyword\">catch</span>(e){\n                <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">error</span>(e);\n                <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;AuthService::register&#x27;</span>, req?.<span class=\"hljs-property\">requestId</span>);\n                <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">success</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">message</span>: e.<span class=\"hljs-property\">message</span> };\n            }                                                    \n        }\n    }\n}\n</code></pre>\n             </div>\n<br/>\n<p><strong><code>src/controllers/auth.controller.ts</code></strong></p>\n<p>This controller is responsible for handling authentication-related HTTP requests. It includes endpoints for logging in, registering, and retrieving the current user’s information.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n    \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Config</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Auth</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/auth&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">Controller</span>, <span class=\"hljs-title class_\">Post</span>, <span class=\"hljs-title class_\">Body</span>, <span class=\"hljs-title class_\">Req</span>, \n    <span class=\"hljs-title class_\">Res</span>, <span class=\"hljs-title class_\">Get</span>, <span class=\"hljs-title class_\">Session</span>\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/http&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AuthService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/auth.service&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">LoginRequest</span>, <span class=\"hljs-title class_\">LoginResponse</span>, \n    <span class=\"hljs-title class_\">RegisterRequest</span>, <span class=\"hljs-title class_\">RegisterResponse</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../protos/auth&#x27;</span>;\n\n<span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&quot;auth&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AuthController</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">authService</span>: <span class=\"hljs-title class_\">AuthService</span></span>) {}\n\n    <span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&quot;user&quot;</span>)\n    <span class=\"hljs-meta\">@Auth</span>()  <span class=\"hljs-comment\">// Uses the Auth decorator for authorization</span>\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">user</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Req</span>() req</span>) {\n        <span class=\"hljs-keyword\">return</span> req.<span class=\"hljs-property\">user</span>;\n    }\n\n    <span class=\"hljs-meta\">@Post</span>(<span class=\"hljs-string\">&quot;login&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">login</span>(\n        <span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">payload</span>: <span class=\"hljs-title class_\">LoginRequest</span>, \n        <span class=\"hljs-meta\">@Req</span>() req, <span class=\"hljs-meta\">@Res</span>() res, <span class=\"hljs-meta\">@Session</span>() session\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">LoginResponse</span>&gt; {\n        <span class=\"hljs-keyword\">const</span> { result } = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">authService</span>.<span class=\"hljs-title function_\">login</span>(\n            payload, req, res, session\n        );\n\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Post</span>(<span class=\"hljs-string\">&quot;register&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">register</span>(\n        <span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">payload</span>: <span class=\"hljs-title class_\">RegisterRequest</span>\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">RegisterResponse</span>&gt; {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">authService</span>.<span class=\"hljs-title function_\">register</span>(payload);\n    }\n}\n</code></pre>\n             </div>\n<br/>\n<p><strong><code>src/gateways/auth.gateway.ts</code></strong></p>\n<p>When <code>@cmmv/ws</code> is installed, a WebSocket gateway is generated to handle authentication events in real-time.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Rpc</span>, <span class=\"hljs-title class_\">Message</span>, <span class=\"hljs-title class_\">Data</span>, <span class=\"hljs-title class_\">Socket</span>, <span class=\"hljs-title class_\">RpcUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/ws&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AuthService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/auth.service&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">LoginRequest</span>,\n    <span class=\"hljs-title class_\">RegisterRequest</span>  \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../protos/auth&quot;</span>;\n\n<span class=\"hljs-meta\">@Rpc</span>(<span class=\"hljs-string\">&quot;auth&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">AuthGateway</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">authService</span>: <span class=\"hljs-title class_\">AuthService</span></span>) {}\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;LoginRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">login</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">LoginRequest</span>, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">try</span>{\n            <span class=\"hljs-keyword\">const</span> { result } = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">authService</span>.<span class=\"hljs-title function_\">login</span>(data);\n            <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n                <span class=\"hljs-string\">&quot;auth&quot;</span>, <span class=\"hljs-string\">&quot;LoginResponse&quot;</span>, result\n            );\n\n            <span class=\"hljs-keyword\">if</span>(response)\n                socket.<span class=\"hljs-title function_\">send</span>(response);            \n        }\n        <span class=\"hljs-keyword\">catch</span>(e){\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n        }\n    }\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;RegisterRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">register</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">RegisterRequest</span>, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">try</span>{\n            <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">authService</span>.<span class=\"hljs-title function_\">register</span>(data);\n            <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n                <span class=\"hljs-string\">&quot;auth&quot;</span>, <span class=\"hljs-string\">&quot;RegisterResponse&quot;</span>, result\n            );\n\n            <span class=\"hljs-keyword\">if</span>(response)\n                socket.<span class=\"hljs-title function_\">send</span>(response);            \n        }\n        <span class=\"hljs-keyword\">catch</span>(e){\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n        }\n    }\n}\n</code></pre>\n             </div>\n<h2>Decorator</h2><a id=\"decorator\" title=\"Decorator\"></a>\n<p>The <code>@Auth</code> decorator is designed to enforce authentication and authorization on specific routes within an application. It provides middleware functionality that checks if a user is authenticated by verifying a JWT (JSON Web Token) and optionally validates that the user has the required roles to access the route.</p>\n<p>This decorator is used in conjunction with route handlers to protect specific endpoints. It validates the existence of a JWT token and, if provided, checks whether the token’s payload includes the necessary roles to access the route.</p>\n<ul>\n<li><strong>Token Location:</strong> The middleware first checks for the JWT token in the request cookies (using a configurable cookie name) or in the <code>Authorization</code> header. If no token is found, it returns a <code>401 Unauthorized</code> response.</li>\n<li><strong>Token Verification:</strong> If a token is found, it verifies the token using the secret stored in the configuration (<code>auth.jwtSecret</code>). If the token is invalid or expired, the middleware returns a <code>401 Unauthorized</code> response.</li>\n<li><strong>Role Validation:</strong> If roles are specified, the middleware checks if the token’s payload includes the required roles. If the user does not have the appropriate roles, the middleware returns a <code>403 Forbidden</code> response.</li>\n<li><strong>User Information:</strong> Upon successful validation, the decoded token (which typically includes user information such as user ID, username, and roles) is attached to the <code>req.user</code> object for further use in the route handler.</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Controller</span>, <span class=\"hljs-title class_\">Get</span>, <span class=\"hljs-title class_\">Req</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Auth</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/auth&#x27;</span>;\n\n<span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&#x27;user&#x27;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserController</span> {\n    <span class=\"hljs-comment\">// Protects the route, checks for valid JWT</span>\n    <span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&#x27;profile&#x27;</span>)\n    <span class=\"hljs-meta\">@Auth</span>()  \n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getProfile</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Req</span>() req</span>) {\n        <span class=\"hljs-keyword\">return</span> req.<span class=\"hljs-property\">user</span>;  <span class=\"hljs-comment\">// Access the authenticated user&#x27;s info</span>\n    }\n\n    <span class=\"hljs-comment\">// Protects the route, checks for valid JWT and admin role</span>\n    <span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&#x27;admin&#x27;</span>)\n    <span class=\"hljs-meta\">@Auth</span>([<span class=\"hljs-string\">&#x27;admin&#x27;</span>])  \n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAdminDashboard</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Req</span>() req</span>) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`Welcome admin <span class=\"hljs-subst\">${req.user.username}</span>`</span>;\n    }\n}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>roles?:</strong> (Optional) An array of roles that a user must have to access the route. If no roles are provided, only authentication is required (i.e., a valid JWT). If roles are specified, the user must possess at least one of the provided roles.</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Auth</span>([<span class=\"hljs-string\">&#x27;admin&#x27;</span>, <span class=\"hljs-string\">&#x27;moderator&#x27;</span>]) \n</code></pre>\n             </div>\n<p><strong>Configuration Dependencies</strong></p>\n<ul>\n<li><strong>JWT Secret:</strong> The decorator uses the secret specified in the configuration (<code>auth.jwtSecret</code>) to verify the token.</li>\n<li><strong>Session Cookie Name:</strong> By default, the token is checked in a cookie with the name specified in <code>server.session.options.sessionCookieName</code>. If no token is found in the cookie, it checks the <code>Authorization</code> header.</li>\n</ul>\n<p>The decorator adds the authentication and authorization middleware to the route’s metadata. This middleware is processed before the route handler is executed, ensuring that unauthorized users are blocked before any business logic is reached.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Modules"
            ],
            "anchors": [
                {
                    "id": "authentication",
                    "label": "Authentication"
                },
                {
                    "id": "installation",
                    "label": "Installation"
                },
                {
                    "id": "integrating",
                    "label": "Integrating"
                },
                {
                    "id": "configuration",
                    "label": "Configuration"
                },
                {
                    "id": "generated",
                    "label": "Generated"
                },
                {
                    "id": "decorator",
                    "label": "Decorator"
                }
            ],
            "link": "docs/7-Modules/1-Authentication.html",
            "links": {}
        }
    },
    "modules/cache": {
        "prev": {
            "link": "docs/modules/authentication",
            "title": "Authentication",
            "desc": "The @cmmv/auth module provides a set of features to handle authentication in you..."
        },
        "next": {
            "link": "docs/modules/scheduling",
            "title": "Scheduling",
            "desc": "The @cmmv/scheduling package provides a simple way to schedule tasks in your CMM..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/modules/authentication\" />\n                    <link rel=\"next\" href=\"/docs/modules/scheduling\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Cache\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/modules/authentication\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/modules/cache\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/modules/scheduling\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Cache</h1><a id=\"cache\" title=\"Cache\"></a>\n<p>The <code>@cmmv/cache</code> module integrates with <code>cache-manager</code> to provide in-memory cache management. By default, it includes support for Redis using the <code>@tirke/node-cache-manager-ioredis</code> package, but it also supports other cache stores that are compatible with <code>cache-manager</code>.</p>\n<p>To install the <code>@cmmv/cache</code> module, use npm:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install @cmmv/cache\n</code></pre>\n             </div>\n<p>If you’re planning to use Redis or other stores, you’ll need to install the appropriate package based on the cache store you intend to use.</p>\n<p><strong>Supported Cache Stores and Drivers</strong></p>\n<p><code>cache-manager</code> supports various cache stores, and you can configure your store based on your requirements. Here are the supported stores and their respective drivers:</p>\n<p><strong>Redis:</strong> <a href=\"https://github.com/Tirke/node-cache-manager-stores/tree/main\" target=\"_blank\" rel=\"nofollow\">Github</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install @tirke/node-cache-manager-ioredis\n</code></pre>\n             </div>\n<p><strong>Memcached:</strong> <a href=\"https://github.com/theogravity/node-cache-manager-memcached-store\" target=\"_blank\" rel=\"nofollow\">Github</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install cache-manager-memcached-store\n</code></pre>\n             </div>\n<p><strong>MongoDB:</strong> <a href=\"https://github.com/v4l3r10/node-cache-manager-mongodb\" target=\"_blank\" rel=\"nofollow\">Github</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install cache-manager-mongodb\n</code></pre>\n             </div>\n<p><strong>Filesystem Binary:</strong> <a href=\"https://github.com/sheershoff/node-cache-manager-fs-binary\" target=\"_blank\" rel=\"nofollow\">Github</a></p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">$ npm install cache-manager-fs-binary\n</code></pre>\n             </div>\n<h2>Configuration</h2><a id=\"configuration\" title=\"Configuration\"></a>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-javascript\" lang=\"javascript\"\"><span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n   <span class=\"hljs-comment\">// Other configurations</span>\n\n   <span class=\"hljs-attr\">cache</span>: {\n        <span class=\"hljs-attr\">store</span>: <span class=\"hljs-string\">&quot;@tirke/node-cache-manager-ioredis&quot;</span>,\n        <span class=\"hljs-attr\">getter</span>: <span class=\"hljs-string\">&quot;ioRedisStore&quot;</span>,\n        <span class=\"hljs-attr\">host</span>: <span class=\"hljs-string\">&quot;localhost&quot;</span>,\n        <span class=\"hljs-attr\">port</span>: <span class=\"hljs-number\">6379</span>,\n        <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">600</span> <span class=\"hljs-comment\">// Cache TTL (Time-to-Live) in seconds</span>\n    },\n}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>store:</strong> Defines the cache store type (<code>cache-manager-redis</code> in this case).</li>\n<li><strong>host:</strong> Specifies the Redis host.</li>\n<li><strong>port:</strong> Specifies the Redis port.</li>\n<li><strong>ttl:</strong> Defines the default time-to-live for cache entries (in seconds).</li>\n</ul>\n<p>To find out all the possible configurations, visit <a href=\"https://www.npmjs.com/package/cache-manager\" target=\"_blank\" rel=\"nofollow\">NPM</a></p>\n<h2>Cache Decorator</h2><a id=\"cache-decorator\" title=\"Cache Decorator\"></a>\n<p>In this example, we demonstrate how to manually implement caching using the <code>@cmmv/cache</code> module in a controller generated by <code>@cmmv/http</code>. Caching can be added at various levels, including for specific endpoints or manually after certain operations, like adding or updating records.</p>\n<ul>\n<li><strong>Controller:</strong> <code>TaskController</code> is responsible for handling requests related to tasks.</li>\n<li><strong>Cache Decorator:</strong> The <code>@Cache</code> decorator is used to cache responses automatically for GET endpoints. In this case, <code>task:getAll</code> and <code>task:{id}</code> are cached for 300 seconds with compression.</li>\n<li><strong>CacheService:</strong> For <code>POST</code>, <code>PUT</code>, and <code>DELETE</code> operations, the cache is updated or removed manually using the <code>CacheService</code> API.</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n    \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Telemetry</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;  \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Cache</span>, <span class=\"hljs-title class_\">CacheService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/cache&quot;</span>; \n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">Controller</span>, <span class=\"hljs-title class_\">Get</span>, <span class=\"hljs-title class_\">Post</span>, <span class=\"hljs-title class_\">Put</span>, <span class=\"hljs-title class_\">Delete</span>, \n    <span class=\"hljs-title class_\">Queries</span>, <span class=\"hljs-title class_\">Param</span>, <span class=\"hljs-title class_\">Body</span>, <span class=\"hljs-title class_\">Request</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/task.service&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Task</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../models/task.model&#x27;</span>;\n\n<span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&#x27;task&#x27;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskController</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">taskservice</span>: <span class=\"hljs-title class_\">TaskService</span></span>) {}\n\n    <span class=\"hljs-comment\">// GET All Tasks with Cache</span>\n    <span class=\"hljs-meta\">@Get</span>()\n    <span class=\"hljs-meta\">@Cache</span>(<span class=\"hljs-string\">&quot;task:getAll&quot;</span>, { <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">true</span> })\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-meta\">@Queries</span>() <span class=\"hljs-attr\">queries</span>: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>[]&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::GetAll&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getAll</span>(queries, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::GetAll&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-comment\">// GET Task by ID with Cache</span>\n    <span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-meta\">@Cache</span>(<span class=\"hljs-string\">&quot;task:{id}&quot;</span>, { <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">true</span> })\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getById</span>(<span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::GetById&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getById</span>(id, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::GetById&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-comment\">// POST (Add Task) and Update Cache</span>\n    <span class=\"hljs-meta\">@Post</span>()\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Add&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">add</span>(item, req);\n        \n        <span class=\"hljs-comment\">// Cache the result of the newly created task</span>\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${result.id}</span>`</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(result), <span class=\"hljs-number\">300</span>);\n        \n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Add&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-comment\">// PUT (Update Task) and Update Cache</span>\n    <span class=\"hljs-meta\">@Put</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">update</span>(\n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>, <span class=\"hljs-meta\">@Request</span>() req\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Update&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">update</span>(id, item, req);\n        \n        <span class=\"hljs-comment\">// Update the cache with the updated task</span>\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${result.id}</span>`</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(result), <span class=\"hljs-number\">300</span>);\n        \n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Update&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-comment\">// DELETE (Remove Task) and Clear Cache</span>\n    <span class=\"hljs-meta\">@Delete</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">delete</span>(\n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Request</span>() req\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;{ <span class=\"hljs-attr\">success</span>: <span class=\"hljs-built_in\">boolean</span>, <span class=\"hljs-attr\">affected</span>: <span class=\"hljs-built_in\">number</span> }&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Delete&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">delete</span>(id, req);\n        \n        <span class=\"hljs-comment\">// Remove the deleted task from the cache</span>\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">del</span>(<span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${id}</span>`</span>);\n        \n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Delete&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n}\n</code></pre>\n             </div>\n<p><strong>Caching on GET Requests:</strong></p>\n<ul>\n<li><strong>Automatic Caching:</strong> The @Cache decorator is applied to the getAll and getById methods. Cached results are automatically stored and retrieved based on the key pattern, reducing database load and improving performance.</li>\n<li><strong>Cache Key:</strong> Cache keys are defined as task:getAll for retrieving all tasks, and task:{id} for retrieving a task by ID.<br>\nTTL (Time-to-Live): The cached results are valid for 300 seconds.</li>\n</ul>\n<p><strong>Manual Caching for <code>POST</code>, <code>PUT</code>, and <code>DELETE</code>:</strong></p>\n<ul>\n<li>For <code>POST</code> (creating a new task) and <code>PUT</code> (updating a task), the <code>CacheService.set</code> method is used to manually update the cache with the new or updated task.</li>\n<li>For <code>DELETE</code> (removing a task), the <code>CacheService.del</code> method is used to remove the corresponding cache entry after the task is deleted.</li>\n<li><strong>Telemetry:</strong> Tracks and logs the execution of each method, useful for performance monitoring.</li>\n</ul>\n<p>This setup optimizes response time by caching frequently accessed data while ensuring that cache entries are updated or cleared when data is modified.</p>\n<h2>Contract Settings</h2><a id=\"contract-settings\" title=\"Contract Settings\"></a>\n<p>The <code>@cmmv/cache</code> module provides the <code>Cache</code> decorator, which can be applied to any controller, gateway, or specific methods. This decorator is useful for automatically caching responses for specific routes.</p>\n<p>In the following example, cache properties are added to a contract using the <code>@Contract</code> decorator. This enables caching for the associated controller and gateway routes automatically generated by the transpiler.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&#x27;Task&#x27;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&#x27;src/protos/task.proto&#x27;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&#x27;task&#x27;</span>,\n    <span class=\"hljs-attr\">cache</span>: { \n        <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">&quot;task:&quot;</span>,   <span class=\"hljs-comment\">// Cache key prefix</span>\n        <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">300</span>,       <span class=\"hljs-comment\">// Time-to-live (in seconds)</span>\n        <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">true</span>  <span class=\"hljs-comment\">// Enable compression for stored data</span>\n    }\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TasksContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n        <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">validations</span>: [\n            {\n                <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;IsString&#x27;</span>,\n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid label&#x27;</span>,\n            },\n            {\n                <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;IsNotEmpty&#x27;</span>,\n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid label&#x27;</span>,\n            },\n        ],\n    })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">validations</span>: [\n            {\n                <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;IsBoolean&#x27;</span>,\n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid checked type&#x27;</span>,\n            },\n        ],\n    })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">validations</span>: [\n            {\n                <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;IsBoolean&#x27;</span>,\n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid removed type&#x27;</span>,\n            },\n        ],\n    })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<h2>Cache Properties</h2><a id=\"cache-properties\" title=\"Cache Properties\"></a>\n<ul>\n<li><strong>key:</strong> A prefix for the cache key. In the example above, it is <code>&quot;task:&quot;</code>. For a <code>getAll</code> request, the cached result will be stored as <code>task:getAll</code>.</li>\n<li><strong>ttl:</strong> The time-to-live for cached data. After 300 seconds, the cache entry will expire.</li>\n<li><strong>compress:</strong> Enables compression of the data before storing it in the cache to reduce memory usage.</li>\n</ul>\n<p>If you need more advanced caching strategies or custom store integrations, you can customize the cache settings in the <code>.cmmv.config.js</code> file or extend the existing cache functionalities within your project. For example, you could add custom cache strategies like memory caching, database caching, or even multi-level caching.</p>\n<h2>Controllers</h2><a id=\"controllers\" title=\"Controllers\"></a>\n<p>When the <code>@cmmv/cache</code> module is included in the project, the automatically generated controllers from <code>@cmmv/http</code> are modified to include caching functionalities. The caching configuration is defined directly in the contract using the cache property. Here’s how the controller is altered:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">AbstractContract</span>, <span class=\"hljs-title class_\">Contract</span>, <span class=\"hljs-title class_\">ContractField</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-meta\">@Contract</span>({\n    <span class=\"hljs-attr\">controllerName</span>: <span class=\"hljs-string\">&#x27;Task&#x27;</span>,\n    <span class=\"hljs-attr\">protoPath</span>: <span class=\"hljs-string\">&#x27;src/protos/task.proto&#x27;</span>,\n    <span class=\"hljs-attr\">protoPackage</span>: <span class=\"hljs-string\">&#x27;task&#x27;</span>,\n    <span class=\"hljs-attr\">cache</span>: { \n        <span class=\"hljs-attr\">key</span>: <span class=\"hljs-string\">&quot;task:&quot;</span>, \n        ttl : <span class=\"hljs-number\">300</span>, \n        <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">true</span> \n    }\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TasksContract</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">AbstractContract</span> {\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;string&#x27;</span>,\n        <span class=\"hljs-attr\">unique</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">validations</span>: [\n            {\n                <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;IsString&#x27;</span>,\n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Invalid label&#x27;</span>,\n            },\n            {\n                <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;IsNotEmpty&#x27;</span>,\n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Label cannot be empty&#x27;</span>,\n            },\n        ],\n    })\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-built_in\">string</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">validations</span>: [\n            {\n                <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;IsBoolean&#x27;</span>,\n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Checked value must be a boolean&#x27;</span>,\n            },\n        ],\n    })\n    <span class=\"hljs-attr\">checked</span>: <span class=\"hljs-built_in\">boolean</span>;\n\n    <span class=\"hljs-meta\">@ContractField</span>({\n        <span class=\"hljs-attr\">protoType</span>: <span class=\"hljs-string\">&#x27;bool&#x27;</span>,\n        <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">validations</span>: [\n            {\n                <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;IsBoolean&#x27;</span>,\n                <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Removed value must be a boolean&#x27;</span>,\n            },\n        ],\n    })\n    <span class=\"hljs-attr\">removed</span>: <span class=\"hljs-built_in\">boolean</span>;\n}\n</code></pre>\n             </div>\n<p>Based on the above contract with cache configuration, the generated controller will include caching logic using the <code>@Cache</code> decorator from <code>@cmmv/cache</code>. Here’s an example of how the controller is generated:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Telemetry</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/core&quot;</span>;  \n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Cache</span>, <span class=\"hljs-title class_\">CacheService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/cache&quot;</span>; \n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">Controller</span>, <span class=\"hljs-title class_\">Get</span>, <span class=\"hljs-title class_\">Post</span>, <span class=\"hljs-title class_\">Put</span>, <span class=\"hljs-title class_\">Delete</span>, \n    <span class=\"hljs-title class_\">Queries</span>, <span class=\"hljs-title class_\">Param</span>, <span class=\"hljs-title class_\">Body</span>, <span class=\"hljs-title class_\">Request</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/task.service&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Task</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../models/task.model&#x27;</span>;\n\n<span class=\"hljs-meta\">@Controller</span>(<span class=\"hljs-string\">&#x27;task&#x27;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskController</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">taskservice</span>: <span class=\"hljs-title class_\">TaskService</span></span>) {}\n\n    <span class=\"hljs-meta\">@Get</span>()\n    <span class=\"hljs-meta\">@Cache</span>(<span class=\"hljs-string\">&quot;task:getAll&quot;</span>, { <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">true</span> })\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-meta\">@Queries</span>() <span class=\"hljs-attr\">queries</span>: <span class=\"hljs-built_in\">any</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>[]&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::GetAll&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getAll</span>(queries, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::GetAll&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Get</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-meta\">@Cache</span>(<span class=\"hljs-string\">&quot;task:{id}&quot;</span>, { <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">true</span> })\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getById</span>(<span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::GetById&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getById</span>(id, req);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::GetById&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Post</span>()\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>, <span class=\"hljs-meta\">@Request</span>() req): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Add&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">add</span>(item, req);\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${result.id}</span>`</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(result), <span class=\"hljs-number\">300</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Add&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Put</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">update</span>(\n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Body</span>() <span class=\"hljs-attr\">item</span>: <span class=\"hljs-title class_\">Task</span>, <span class=\"hljs-meta\">@Request</span>() req\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Task</span>&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Update&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">update</span>(id, item, req);\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${result.id}</span>`</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(result), <span class=\"hljs-number\">300</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Update&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n\n    <span class=\"hljs-meta\">@Delete</span>(<span class=\"hljs-string\">&#x27;:id&#x27;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">delete</span>(\n        <span class=\"hljs-meta\">@Param</span>(<span class=\"hljs-string\">&#x27;id&#x27;</span>) <span class=\"hljs-attr\">id</span>: <span class=\"hljs-built_in\">string</span>, <span class=\"hljs-meta\">@Request</span>() req\n    ): <span class=\"hljs-title class_\">Promise</span>&lt;{ <span class=\"hljs-attr\">success</span>: <span class=\"hljs-built_in\">boolean</span>, <span class=\"hljs-attr\">affected</span>: <span class=\"hljs-built_in\">number</span> }&gt; {\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">start</span>(<span class=\"hljs-string\">&#x27;TaskController::Delete&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">delete</span>(id, req);\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">del</span>(<span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${id}</span>`</span>);\n        <span class=\"hljs-title class_\">Telemetry</span>.<span class=\"hljs-title function_\">end</span>(<span class=\"hljs-string\">&#x27;TaskController::Delete&#x27;</span>, req.<span class=\"hljs-property\">requestId</span>);\n        <span class=\"hljs-keyword\">return</span> result;\n    }\n}\n</code></pre>\n             </div>\n<ul>\n<li>\n<p><strong>Cache Decorator:</strong> The <code>@Cache</code> decorator is added to methods like <code>getAll</code> and <code>getById</code> based on the cache configuration provided in the contract. This decorator automatically caches the results for the specified time (<code>ttl</code>) and applies compression (<code>compress</code>) if configured.</p>\n</li>\n<li>\n<p><strong><code>@Cache(&quot;task:getAll&quot;, { ttl: 300, compress: true })</code>:</strong> This line configures caching for the <code>getAll method</code>, where the cache key is <code>task:getAll</code>, with a TTL of 300 seconds, and compresses the cached data.</p>\n</li>\n<li>\n<p><strong>Manual Cache Management:</strong> In <code>add</code>, <code>update</code>, and <code>delete</code> methods, manual cache management is applied. The <code>CacheService.set</code> and <code>CacheService.del</code> methods are used to update or delete cached data.</p>\n</li>\n<li>\n<p><strong><code>CacheService.set(&quot;task:{id}&quot;, JSON.stringify(result), 300)</code>:</strong> Manually sets the cache for a specific task after adding or updating it.</p>\n</li>\n<li>\n<p><strong><code>CacheService.del(&quot;task:{id}&quot;)</code>:</strong> Deletes the cache for a specific task after it is deleted.</p>\n</li>\n<li>\n<p><strong>Dynamic Cache Keys:</strong> The cache keys are dynamic, as shown in the <code>getById</code>, <code>add</code>, <code>update</code>, and <code>delete</code> methods, where the task ID is part of the cache key.</p>\n</li>\n</ul>\n<p>The <code>@cmmv/cache</code> module enhances the generated controllers by adding automatic and manual caching capabilities based on the contract’s cache configuration. The <code>@Cache</code> decorator is applied to methods where needed, and the <code>CacheService</code> is used to manage cache entries for specific tasks or resources. This ensures better performance by reducing redundant database queries or service calls.</p>\n<h2>Gateways</h2><a id=\"gateways\" title=\"Gateways\"></a>\n<p>When the <code>@cmmv/cache</code> module is present in the project, gateways generated by the <code>@cmmv/ws</code> module are modified to include caching functionality. The cache configuration can be defined in the contract and impacts how RPC messages are handled.</p>\n<ul>\n<li>\n<p><strong>Cache Decorator:</strong> The <code>@Cache</code> decorator is applied to message handlers in the gateway, enabling automatic caching of responses. The cache key, TTL (time-to-live), and compression options are based on the configuration from the contract.</p>\n</li>\n<li>\n<p><strong>Manual Cache Management:</strong> Cache entries are manually updated or deleted when new data is added or modified, ensuring that the cache remains consistent with the latest data.</p>\n</li>\n</ul>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-comment\">// Generated automatically by CMMV</span>\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Rpc</span>, <span class=\"hljs-title class_\">Message</span>, <span class=\"hljs-title class_\">Data</span>, <span class=\"hljs-title class_\">Socket</span>, <span class=\"hljs-title class_\">RpcUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/ws&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { plainToClass } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;class-transformer&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskEntity</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../entities/task.entity&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Cache</span>, <span class=\"hljs-title class_\">CacheService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@cmmv/cache&quot;</span>; <span class=\"hljs-comment\">// Cache module</span>\n\n<span class=\"hljs-keyword\">import</span> { \n    <span class=\"hljs-title class_\">AddTaskRequest</span>, \n    <span class=\"hljs-title class_\">UpdateTaskRequest</span>,   \n    <span class=\"hljs-title class_\">DeleteTaskRequest</span> \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../protos/task&quot;</span>;\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TaskService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../services/task.service&#x27;</span>;\n\n<span class=\"hljs-meta\">@Rpc</span>(<span class=\"hljs-string\">&quot;task&quot;</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskGateway</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-attr\">taskservice</span>: <span class=\"hljs-title class_\">TaskService</span></span>) {}\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;GetAllTaskRequest&quot;</span>)\n    <span class=\"hljs-meta\">@Cache</span>(<span class=\"hljs-string\">&quot;task:getAll&quot;</span>, { <span class=\"hljs-attr\">ttl</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">compress</span>: <span class=\"hljs-literal\">true</span> }) <span class=\"hljs-comment\">// Cache decorator</span>\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">getAll</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">const</span> items = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">getAll</span>();\n\n        <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n            <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;GetAllTaskResponse&quot;</span>, items\n        );\n\n        socket.<span class=\"hljs-title function_\">send</span>(response);\n    }\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;AddTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">add</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">AddTaskRequest</span>, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">const</span> entity = <span class=\"hljs-title function_\">plainToClass</span>(<span class=\"hljs-title class_\">TaskEntity</span>, data.<span class=\"hljs-property\">item</span>);\n        <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">add</span>(entity);\n\n        <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n            <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;AddTaskResponse&quot;</span>, \n            { <span class=\"hljs-attr\">item</span>: result, <span class=\"hljs-attr\">id</span>: result.<span class=\"hljs-property\">id</span> }\n        );\n\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-comment\">// Manual cache update</span>\n            <span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${result.id}</span>`</span>, \n            <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(result), \n            <span class=\"hljs-number\">300</span>\n        ); \n\n        socket.<span class=\"hljs-title function_\">send</span>(response);\n    }\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;UpdateTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">UpdateTaskRequest</span>, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">const</span> entity = <span class=\"hljs-title function_\">plainToClass</span>(<span class=\"hljs-title class_\">TaskEntity</span>, data.<span class=\"hljs-property\">item</span>);\n        <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">update</span>(data.<span class=\"hljs-property\">id</span>, entity);\n\n        <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n            <span class=\"hljs-string\">&quot;task&quot;</span>, <span class=\"hljs-string\">&quot;UpdateTaskResponse&quot;</span>, \n            {  <span class=\"hljs-attr\">item</span>: result, <span class=\"hljs-attr\">id</span>: result.<span class=\"hljs-property\">id</span> }\n        );\n\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-comment\">// Manual cache update</span>\n            <span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${result.id}</span>`</span>, \n            <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(result), \n            <span class=\"hljs-number\">300</span>\n        ); \n\n        socket.<span class=\"hljs-title function_\">send</span>(response);\n    }\n\n    <span class=\"hljs-meta\">@Message</span>(<span class=\"hljs-string\">&quot;DeleteTaskRequest&quot;</span>)\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-title function_\">delete</span>(<span class=\"hljs-params\"><span class=\"hljs-meta\">@Data</span>() <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">DeleteTaskRequest</span>, <span class=\"hljs-meta\">@Socket</span>() socket</span>) {\n        <span class=\"hljs-keyword\">const</span> result = (<span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">taskservice</span>.<span class=\"hljs-title function_\">delete</span>(data.<span class=\"hljs-property\">id</span>)).<span class=\"hljs-property\">success</span>;\n\n        <span class=\"hljs-keyword\">const</span> response = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">RpcUtils</span>.<span class=\"hljs-title function_\">pack</span>(\n            <span class=\"hljs-string\">&quot;task&quot;</span>, \n            <span class=\"hljs-string\">&quot;DeleteTaskResponse&quot;</span>, \n            { <span class=\"hljs-attr\">success</span>: result, <span class=\"hljs-attr\">id</span>: data.<span class=\"hljs-property\">id</span> }\n        );\n\n        <span class=\"hljs-title class_\">CacheService</span>.<span class=\"hljs-title function_\">del</span>(<span class=\"hljs-string\">`task:<span class=\"hljs-subst\">${data.id}</span>`</span>); <span class=\"hljs-comment\">// Cache deletion</span>\n        \n        socket.<span class=\"hljs-title function_\">send</span>(response);\n    }\n}\n</code></pre>\n             </div>\n<br/>\n<ul>\n<li><strong>Automatic Caching:</strong> The <code>@Cache</code> decorator is applied to message handlers to cache responses based on the contract configuration.</li>\n<li><strong>Manual Cache Management:</strong> Cache entries are manually updated or deleted when data is added, updated, or deleted, ensuring consistency.</li>\n<li><strong>Performance Improvement:</strong> Cached responses reduce the need for repeated service calls, improving the performance of RPC interactions.</li>\n</ul>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Modules"
            ],
            "anchors": [
                {
                    "id": "cache",
                    "label": "Cache"
                },
                {
                    "id": "configuration",
                    "label": "Configuration"
                },
                {
                    "id": "cache-decorator",
                    "label": "Cache Decorator"
                },
                {
                    "id": "contract-settings",
                    "label": "Contract Settings"
                },
                {
                    "id": "cache-properties",
                    "label": "Cache Properties"
                },
                {
                    "id": "controllers",
                    "label": "Controllers"
                },
                {
                    "id": "gateways",
                    "label": "Gateways"
                }
            ],
            "link": "docs/7-Modules/2-Cache.html",
            "links": {}
        }
    },
    "modules/scheduling": {
        "prev": {
            "link": "docs/modules/cache",
            "title": "Cache",
            "desc": "The @cmmv/cache module integrates with cache-manager to provide in-memory cache..."
        },
        "next": {
            "link": "docs/index",
            "title": "Introduction",
            "desc": "Contract-Model-Model-View (CMMV)  A minimalistic framework for building sca..."
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/modules/cache\" />\n                    <link rel=\"next\" href=\"/docs/index\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Scheduling\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/modules/cache\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/modules/scheduling\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/docs/index\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<h1>Scheduling</h1><a id=\"scheduling\" title=\"Scheduling\"></a>\n<p>The <code>@cmmv/scheduling</code> package provides a simple way to schedule tasks in your CMMV application using cron patterns. This module is built using the <code>cron</code> library, and the <code>@Cron</code> decorator allows you to easily schedule methods to run at specific intervals.</p>\n<p>To install the scheduling module, run the following command:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-bash\" lang=\"bash\"\">npm install @cmmv/scheduling\n</code></pre>\n             </div>\n<h2>Usage</h2><a id=\"usage\" title=\"Usage\"></a>\n<p>The <code>@Cron</code> decorator is used to define methods that should be scheduled according to a cron pattern. The scheduling is powered by the cron library, which provides flexible and powerful cron scheduling capabilities.</p>\n<p>After installing the package, you can use the <code>@Cron</code> decorator and the SchedulingService in your project:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Cron</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/scheduling&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Logger</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">TaskService</span> {\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-attr\">logger</span>: <span class=\"hljs-title class_\">Logger</span> = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Logger</span>(<span class=\"hljs-string\">&#x27;TaskService&#x27;</span>);\n\n    <span class=\"hljs-meta\">@Cron</span>(<span class=\"hljs-string\">&#x27;*/5 * * * * *&#x27;</span>)  <span class=\"hljs-comment\">// Runs every 5 seconds</span>\n    <span class=\"hljs-title function_\">handleTask</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Task executed every 5 seconds&#x27;</span>);\n    }\n}\n</code></pre>\n             </div>\n<h2>Setting</h2><a id=\"setting\" title=\"Setting\"></a>\n<p>Ensure that the <code>SchedulingService</code> is initialized during the startup of your application. This will register and start all the scheduled tasks defined with the <code>@Cron</code> decorator.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;dotenv&#x27;</span>).<span class=\"hljs-title function_\">config</span>();\n\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Application</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/core&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ExpressAdapter</span>, <span class=\"hljs-title class_\">ExpressModule</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/http&#x27;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">WSModule</span>, <span class=\"hljs-title class_\">WSAdapter</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/ws&#x27;</span>;\n...\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">SchedulingModule</span>, <span class=\"hljs-title class_\">SchedulingService</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cmmv/scheduling&#x27;</span>;\n\n<span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-title function_\">create</span>({\n    <span class=\"hljs-attr\">httpAdapter</span>: <span class=\"hljs-title class_\">ExpressAdapter</span>,\n    <span class=\"hljs-attr\">wsAdapter</span>: <span class=\"hljs-title class_\">WSAdapter</span>,\n    <span class=\"hljs-attr\">modules</span>: [\n        ...\n        <span class=\"hljs-title class_\">SchedulingModule</span>\n    ],\n    <span class=\"hljs-attr\">services</span>: [..., <span class=\"hljs-title class_\">SchedulingService</span>]\n});\n</code></pre>\n             </div>\n<h2>Decorator</h2><a id=\"decorator\" title=\"Decorator\"></a>\n<p>The <code>@Cron</code> decorator is used to schedule a method to run based on a cron pattern. It accepts a cron expression as its argument, which defines the schedule.</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-typescript\" lang=\"typescript\"\"><span class=\"hljs-meta\">@Cron</span>(<span class=\"hljs-string\">&#x27;*/5 * * * * *&#x27;</span>)  <span class=\"hljs-comment\">// Runs every 5 seconds</span>\n<span class=\"hljs-title function_\">handleTask</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">logger</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Task executed every 5 seconds&#x27;</span>);\n}\n</code></pre>\n             </div>\n<p>The cron patterns follow the standard format used by the cron library:</p>\n<div class=\"code-block-container\">\n                <button class=\"copy-code-btn\" onclick=\"copyToClipboard(this)\" title=\"Copy\">\n                    <i class=\"fa-regular fa-clone\"></i>\n                </button>\n                <pre><code class=\"hljs language-scss\" lang=\"scss\"\">*    *    *    *    *    *\n┬    ┬    ┬    ┬    ┬    ┬\n│    │    │    │    │    │\n│    │    │    │    │    └ Day of the week (<span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">7</span>) (Sunday=<span class=\"hljs-number\">0</span> or <span class=\"hljs-number\">7</span>)\n│    │    │    │    └───── Month (<span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">12</span>)\n│    │    │    └────────── Day of the month (<span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">31</span>)\n│    │    └─────────────── Hour (<span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">23</span>)\n│    └──────────────────── Minute (<span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">59</span>)\n└───────────────────────── Second (<span class=\"hljs-number\">0</span> - <span class=\"hljs-number\">59</span>, optional)\n</code></pre>\n             </div>\n<p><strong>Some Sample Cron Patterns</strong></p>\n<p>Here are a few examples of cron patterns you can use with the <code>@Cron</code> decorator:</p>\n<ul>\n<li><code>* * * * * *</code> – Runs every second</li>\n<li><code>*/5 * * * * *</code> – Runs every 5 seconds</li>\n<li><code>0 0 * * * *</code> – Runs every hour</li>\n<li><code>0 0 12 * * *</code> – Runs every day at noon</li>\n<li><code>0 0 1 1 *</code> – Runs at midnight on January 1st</li>\n</ul>\n<p>The <code>@cmmv/scheduling</code> module provides a powerful and flexible way to schedule tasks in a CMMV application using cron patterns. The <code>@Cron</code> decorator makes it easy to define when certain methods should run, and the <code>SchedulingService</code> ensures these tasks are properly managed and executed at runtime.</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                "Modules"
            ],
            "anchors": [
                {
                    "id": "scheduling",
                    "label": "Scheduling"
                },
                {
                    "id": "usage",
                    "label": "Usage"
                },
                {
                    "id": "setting",
                    "label": "Setting"
                },
                {
                    "id": "decorator",
                    "label": "Decorator"
                }
            ],
            "link": "docs/7-Modules/4-Scheduling.html",
            "links": {}
        }
    },
    "index": {
        "prev": {
            "link": "docs/modules/scheduling",
            "title": "Scheduling",
            "desc": "The @cmmv/scheduling package provides a simple way to schedule tasks in your CMM..."
        },
        "next": {
            "link": "",
            "title": "",
            "desc": ""
        },
        "meta": "\n                    <link rel=\"prev\" href=\"/docs/modules/scheduling\" />\n                    <link rel=\"next\" href=\"/\" />\n                    ",
        "ldjson": "{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": \"Introduction\",\n    \"breadcrumb\": {\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Previous Page\",\n                \"item\": \"/docs/modules/scheduling\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Current Page\",\n                \"item\": \"/docs/index\"\n            },\n            {\n                \"@type\": \"ListItem\",\n                \"position\": 3,\n                \"name\": \"Next Page\",\n                \"item\": \"/\"\n            }\n        ]\n    }\n}",
        "data": {
            "index": "<p align=\"center\">\n  <img src=\"assets/logo-invert.png\" width=\"300\" alt=\"CMMV Logo\" />\n</p>\n<p align=\"center\">Contract-Model-Model-View (CMMV) <br/> A minimalistic framework for building scalable and modular applications using TypeScript contracts.</p>\n<div class=\"flex flex-container\">\n    <a href=\"https://www.npmjs.com/package/@cmmv/core\" target=\"_blank\" rel=\"nofollow\">\n        <img src=\"https://img.shields.io/npm/v/@cmmv/core.svg\" alt=\"NPM Version\" />\n    </a>\n    <a href=\"https://github.com/andrehrferreira/cmmv/blob/main/LICENSE\" target=\"_blank\" rel=\"nofollow\">\n        <img src=\"https://img.shields.io/npm/l/@cmmv/core.svg\" alt=\"Package License\" />\n    </a>\n    <a href=\"https://dl.circleci.com/status-badge/redirect/circleci/QyJWAYrZ9JTfN1eubSDo5u/7gdwcdqbMYfbYYX4hhoNhc/tree/main\" target=\"_blank\" target=\"_blank\" rel=\"nofollow\">\n        <img src=\"https://dl.circleci.com/status-badge/img/circleci/QyJWAYrZ9JTfN1eubSDo5u/7gdwcdqbMYfbYYX4hhoNhc/tree/main.svg\" alt=\"CircleCI\" />\n    </a>\n</div>\n<br/>\n<h1>Introduction</h1><a id=\"introduction\" title=\"Introduction\"></a>\n<p>CMMV (Contract-Model-Model-View) is a minimalistic framework designed to streamline the development of scalable and modular applications using TypeScript. By combining the power of contracts with a modular architecture, CMMV allows developers to define their entire application structure, from ORM entities to REST controllers and WebSocket endpoints, in a clear and maintainable way.</p>\n<p>The project is divided into two main components:</p>\n<ol>\n<li>\n<p><strong>Core System</strong>: The heart of CMMV, written in TypeScript and running on Node.js, is responsible for managing contracts, generating code, integrating with databases, and handling server-side operations. This component handles everything from parsing and code generation to integration with external services like cloud servers and databases.</p>\n</li>\n<li>\n<p><strong>Backend</strong>: The CMMV backend is inspired by <a href=\"https://nestjs.com/\" target=\"_blank\" rel=\"nofollow\">NestJS</a> in terms of structure and organization, using a similar format of decorators, services, controllers, and other architectural patterns. This allows for a familiar development experience for those who already use <code>NestJS</code>, making it easier to create scalable and organized applications with a modular and object-oriented approach. Some implementations are quite different, especially when it comes to context and the need for dependency injection.</p>\n</li>\n<li>\n<p><strong>Frontend</strong>: CMMV utilizes its own reactivity system, inspired by <a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"nofollow\">Vue 3</a> as the base framework. However, in the future, support for other frameworks such as React, Angular, and Vue will be available, even though their use is not recommended due to potential performance reduction and SEO issues. This approach simplifies the process of creating, managing, and deploying applications while offering optimal performance.</p>\n</li>\n</ol>\n<p>CMMV draws inspiration from a wide range of technologies and concepts, blending ideas from game development (e.g., Unreal Engine’s Blueprints), component-based architectures (e.g., Delphi), and modern web development practices. It challenges traditional paradigms of web and application development, aiming to make the creation of complex systems as intuitive as possible.</p>\n<p>This project reflects over 20 years of experience in different languages and frameworks, with influences from Delphi, Unity, Unreal, C#, C++, JavaScript, Node.js, TypeScript, VSCode.</p>\n<p>We hope you find CMMV as exciting and powerful as we do. It’s the culmination of nearly a decade of work and passion for simplifying and improving the development process.</p>\n<h2>Why CMMV?</h2><a id=\"why-cmmv\" title=\"Why CMMV?\"></a>\n<p>With over 20 years of experience in the tech industry as a programmer, I’ve developed various systems and projects used by millions of users. In 2020, I was working on my largest project to date, which was built on the following stack: backend using Node.js, TypeScript, NestJS, Nuxt.js, Redis, MongoDB, Elasticsearch, and RabbitMQ; frontend with Vue.js and Tailwind CSS; testing with Mocha, ESLint, and GitLab CI; infrastructure managed with Kubernetes and Nginx, and business intelligence powered by Grafana, Kafka, and IndexDB; along with a Flutter-based mobile app. Let’s dive into the problems we faced in this setup.</p>\n<p>First, the NestJS API, as more controllers and gateways were added, became increasingly difficult to manage and slowed down significantly, primarily due to dependency injection. Module management turned into a bureaucratic nightmare. Although the final application performed well, development became cumbersome. Furthermore, Nuxt’s SSR (server-side rendering) required integration, which often led to issues due to CORS policies. Communication between applications occurred via HTTP, and although NestJS supported RPC, Nuxt.js required custom proxies to implement WebSockets. Using Protobuf in the frontend presented additional challenges, and generating RPC controllers with Protoc resulted in a bloated codebase, making the application even heavier.</p>\n<p>Second, Nuxt.js, while capable of SSR, still relied on proxies with APIs to load data since it ran on a Vite-based implementation. Static page generation at scale, with thousands of pages, became an unattainable task. We tried, but the time required for page generation was prohibitive. Using standard SSR, with the proxy API and HTTP+JSON communication, significantly increased the TTFB (Time to First Byte), making optimization challenging. Only by delivering content directly through a CDN could we mitigate these delays, but even then, the page load was too slow for ideal SEO. Additionally, Nuxt.js generated numerous JavaScript bundles and data files to supplement frontend data binding, increasing page load and making SEO optimization a constant battle.</p>\n<p>It may seem counterintuitive to combine API and SSR into the same application due to competing processes, but consider that it’s much simpler to create a single load balancer that serves both frontend and backend. With direct integration, SSR eliminates latency when fetching data—excellent for reducing page load times and generating static pages. When well-integrated with Redis cache and efficient database queries, SSR can be nearly as fast as pre-rendered static pages. Moreover, this architecture simplifies integrations like internationalization, structured data, and sitemaps, making them much easier to manage and serve.</p>\n<p>Finally, the reduction in page onload time, which is also considered by search engines, is crucial. While Vue is an excellent tool, componentization in the frontend poses performance challenges due to potential deep coupling between components. Even with state management, critical issues related to element reactivity can lead to cascading update flows, which may either freeze the app or cause infinite loops. Avoiding such pitfalls requires a solid understanding of the underlying framework.</p>\n<p>Considering all these factors, I created CMMV (Contract-Model-Model-View). Initially, the goal was to develop a complete solution that would meet my development needs while maintaining the familiar syntax of NestJS, Vue, etc., but resolving the problems that have plagued me over the years and hampered development.</p>\n<p>After considering these factors, I created CMMV (Contract-Model-Model-View). My goal was not to compete with or replace any of the mentioned tools. All the technologies I’ve mentioned are of excellent quality and come highly recommended. They have large communities and are suitable for most projects. However, I had unique challenges in my projects, particularly around handling high volumes of traffic and the need for the best possible SEO performance. Despite my best efforts with my previous stack, the results were still not satisfactory for my specific needs. CMMV was born out of this necessity to address these exceptional requirements.</p>\n<p>André Ferreira (CEO)</p>\n",
            "navbar": [
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview",
                    "uri": "/docs/overview",
                    "isDir": true,
                    "index": 1,
                    "name": "Overview",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/0-Introduction.html",
                            "uri": "/docs/overview/introduction",
                            "name": "Introduction"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/1-First Steps.html",
                            "uri": "/docs/overview/first-steps",
                            "name": "First Steps"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/3-Settings.html",
                            "uri": "/docs/overview/settings",
                            "name": "Settings"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/4-Modules.html",
                            "uri": "/docs/overview/modules",
                            "name": "Modules"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/5-Singleton.html",
                            "uri": "/docs/overview/singleton",
                            "name": "Singleton"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/6-Transpiles.html",
                            "uri": "/docs/overview/transpiles",
                            "name": "Transpiles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/7-Logging.html",
                            "uri": "/docs/overview/logging",
                            "name": "Logging"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/8-Telemetry.html",
                            "uri": "/docs/overview/telemetry",
                            "name": "Telemetry"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/9-Request.html",
                            "uri": "/docs/overview/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/91-Decorators.html",
                            "uri": "/docs/overview/decorators",
                            "name": "Decorators"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/92-Ecosystem.html",
                            "uri": "/docs/overview/ecosystem",
                            "name": "Ecosystem"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/93-VSCode.html",
                            "uri": "/docs/overview/vscode",
                            "name": "VSCode"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/0-Overview/94-Vite.html",
                            "uri": "/docs/overview/vite",
                            "name": "Vite"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts",
                    "uri": "/docs/contracts",
                    "isDir": true,
                    "index": 2,
                    "name": "Contracts",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/0-Overview.html",
                            "uri": "/docs/contracts/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/1-Validation.html",
                            "uri": "/docs/contracts/validation",
                            "name": "Validation"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/2-Transform.html",
                            "uri": "/docs/contracts/transform",
                            "name": "Transform"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/2-Contracts/3-Serialization.html",
                            "uri": "/docs/contracts/serialization",
                            "name": "Serialization"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server",
                    "uri": "/docs/server",
                    "isDir": true,
                    "index": 3,
                    "name": "Server",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/0-Overview.html",
                            "uri": "/docs/server/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/1-Application.html",
                            "uri": "/docs/server/application",
                            "name": "Application"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/2-Hooks.html",
                            "uri": "/docs/server/hooks",
                            "name": "Hooks"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/3-Request.html",
                            "uri": "/docs/server/request",
                            "name": "Request"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/4-Response.html",
                            "uri": "/docs/server/response",
                            "name": "Response"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/5-Content Parser.html",
                            "uri": "/docs/server/content-parser",
                            "name": "Content Parser"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/6-HTTP2.html",
                            "uri": "/docs/server/http2",
                            "name": "HTTP2"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/7-Middleware.html",
                            "uri": "/docs/server/middleware",
                            "name": "Middleware"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/3-Server/8-View Engine.html",
                            "uri": "/docs/server/view-engine",
                            "name": "View Engine"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP",
                    "uri": "/docs/http",
                    "isDir": true,
                    "index": 4,
                    "name": "HTTP",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/0-Overview.html",
                            "uri": "/docs/http/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/1-Controllers.html",
                            "uri": "/docs/http/controllers",
                            "name": "Controllers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/4-HTTP/2-Services.html",
                            "uri": "/docs/http/services",
                            "name": "Services"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC",
                    "uri": "/docs/rpc",
                    "isDir": true,
                    "index": 5,
                    "name": "RPC",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/0-Overview.html",
                            "uri": "/docs/rpc/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/1-Proto.html",
                            "uri": "/docs/rpc/proto",
                            "name": "Proto"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/2-Websocket.html",
                            "uri": "/docs/rpc/websocket",
                            "name": "Websocket"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/3-Gateways.html",
                            "uri": "/docs/rpc/gateways",
                            "name": "Gateways"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/5-RPC/9-Benchmarks.html",
                            "uri": "/docs/rpc/benchmarks",
                            "name": "Benchmarks"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/6-View",
                    "uri": "/docs/view",
                    "isDir": true,
                    "index": 6,
                    "name": "View",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/0-Overview.html",
                            "uri": "/docs/view/overview",
                            "name": "Overview"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/1-Reactivity.html",
                            "uri": "/docs/view/reactivity",
                            "name": "Reactivity"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/2-Directives.html",
                            "uri": "/docs/view/directives",
                            "name": "Directives"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/3-Headers.html",
                            "uri": "/docs/view/headers",
                            "name": "Headers"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/4-Assets.html",
                            "uri": "/docs/view/assets",
                            "name": "Assets"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/5-Templates.html",
                            "uri": "/docs/view/templates",
                            "name": "Templates"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/6-Views.html",
                            "uri": "/docs/view/views",
                            "name": "Views"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/7-Styles.html",
                            "uri": "/docs/view/styles",
                            "name": "Styles"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/6-View/8-Components.html",
                            "uri": "/docs/view/components",
                            "name": "Components"
                        }
                    ]
                },
                {
                    "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules",
                    "uri": "/docs/modules",
                    "isDir": true,
                    "index": 7,
                    "name": "Modules",
                    "children": [
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/0-Repository.html",
                            "uri": "/docs/modules/repository",
                            "name": "Repository"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/1-Authentication.html",
                            "uri": "/docs/modules/authentication",
                            "name": "Authentication"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/2-Cache.html",
                            "uri": "/docs/modules/cache",
                            "name": "Cache"
                        },
                        {
                            "filename": "/mnt/f/Node/cmmv-docs/docs/7-Modules/4-Scheduling.html",
                            "uri": "/docs/modules/scheduling",
                            "name": "Scheduling"
                        }
                    ]
                }
            ],
            "breadcrumb": [
                null,
                null
            ],
            "anchors": [
                {
                    "id": "introduction",
                    "label": "Introduction"
                },
                {
                    "id": "why-cmmv",
                    "label": "Why CMMV?"
                }
            ],
            "link": "docs/index.html",
            "links": {}
        }
    }
}